// Input 0
/*
 FullCalendar v2.4.0
 Docs & License: http://fullcalendar.io/
 (c) 2015 Adam Shaw
*/
'use strict';
!function(g) {
  "function" == typeof define && define.amd ? define(["jquery", "moment"], g) : "object" == typeof exports ? module.exports = g(require("jquery"), require("moment")) : g(jQuery, moment);
}(function(g, n) {
  function eb(a) {
    var b, c = {views:a.views || {}};
    return g.each(a, function(a, e) {
      "views" != a && (g.isPlainObject(e) && !/(time|duration|interval)$/i.test(a) && -1 == g.inArray(a, R) ? (b = null, g.each(e, function(d, e) {
        /^(month|week|day|default|basic(Week|Day)?|agenda(Week|Day)?)$/.test(d) ? (c.views[d] || (c.views[d] = {}), c.views[d][a] = e) : (b || (b = {}), b[d] = e);
      }), b && (c[a] = b)) : c[a] = e);
    }), c;
  }
  function ta(a, b) {
    b.left && a.css({"border-left-width":1, "margin-left":b.left - 1});
    b.right && a.css({"border-right-width":1, "margin-right":b.right - 1});
  }
  function ua(a) {
    a.css({"margin-left":"", "margin-right":"", "border-left-width":"", "border-right-width":""});
  }
  function V() {
    g("body").addClass("fc-not-allowed");
  }
  function S() {
    g("body").removeClass("fc-not-allowed");
  }
  function va(a, b, c) {
    var d = Math.floor(b / a.length), e = Math.floor(b - d * (a.length - 1)), f = [], h = [], l = [], m = 0;
    a.height("");
    a.each(function(b, c) {
      b = b === a.length - 1 ? e : d;
      var k = g(c).outerHeight(!0);
      b > k ? (f.push(c), h.push(k), l.push(g(c).height())) : m += k;
    });
    c && (b -= m, d = Math.floor(b / f.length), e = Math.floor(b - d * (f.length - 1)));
    g(f).each(function(a, b) {
      var c = a === f.length - 1 ? e : d, k = h[a];
      a = c - (k - l[a]);
      c > k && g(b).height(a);
    });
  }
  function wa(a) {
    var b = 0;
    return a.find("\x3e *").each(function(a, d) {
      a = g(d).outerWidth();
      a > b && (b = a);
    }), b++, a.width(b), b;
  }
  function xa(a, b) {
    return a.height(b).addClass("fc-scroller"), a[0].scrollHeight - 1 > a[0].clientHeight ? !0 : (fa(a), !1);
  }
  function fa(a) {
    a.height("").removeClass("fc-scroller");
  }
  function ya(a) {
    var b = a.css("position"), c = a.parents().filter(function() {
      var a = g(this);
      return /(auto|scroll)/.test(a.css("overflow") + a.css("overflow-y") + a.css("overflow-x"));
    }).eq(0);
    return "fixed" !== b && c.length ? c : g(a[0].ownerDocument || document);
  }
  function za(a) {
    var b = a.offset();
    return {left:b.left, right:b.left + a.outerWidth(), top:b.top, bottom:b.top + a.outerHeight()};
  }
  function Aa(a) {
    var b = a.offset(), c = W(a), d = b.left + (parseFloat(a.css("border-left-width")) || 0) + c.left;
    b = b.top + (parseFloat(a.css("border-top-width")) || 0) + c.top;
    return {left:d, right:d + a[0].clientWidth, top:b, bottom:b + a[0].clientHeight};
  }
  function W(a) {
    var b = a.innerWidth() - a[0].clientWidth, c = {left:0, right:0, top:0, bottom:a.innerHeight() - a[0].clientHeight};
    if (null === ha) {
      var d = g("\x3cdiv\x3e\x3cdiv/\x3e\x3c/div\x3e").css({position:"absolute", top:-1e3, left:0, border:0, padding:0, overflow:"scroll", direction:"rtl"}).appendTo("body"), e = d.children().offset().left > d.offset().left;
      ha = (d.remove(), e);
    }
    return ha && "rtl" == a.css("direction") ? c.left = b : c.right = b, c;
  }
  function Ba(a, b) {
    a = {left:Math.max(a.left, b.left), right:Math.min(a.right, b.right), top:Math.max(a.top, b.top), bottom:Math.min(a.bottom, b.bottom)};
    return a.left < a.right && a.top < a.bottom ? a : !1;
  }
  function Ca(a) {
    var b = [], c = [];
    "string" == typeof a ? c = a.split(/\s*,\s*/) : "function" == typeof a ? c = [a] : g.isArray(a) && (c = a);
    for (a = 0; a < c.length; a++) {
      var d = c[a];
      "string" == typeof d ? b.push("-" == d.charAt(0) ? {field:d.substring(1), order:-1} : {field:d, order:1}) : "function" == typeof d && b.push({func:d});
    }
    return b;
  }
  function Da(a, b, c) {
    var d, e;
    for (d = 0; d < c.length; d++) {
      if (e = Ea(a, b, c[d])) {
        return e;
      }
    }
    return 0;
  }
  function Ea(a, b, c) {
    return c.func ? c.func(a, b) : Fa(a[c.field], b[c.field]) * (c.order || 1);
  }
  function Fa(a, b) {
    return a || b ? null == b ? -1 : null == a ? 1 : "string" === g.type(a) || "string" === g.type(b) ? String(a).localeCompare(String(b)) : a - b : 0;
  }
  function ia(a, b) {
    var c, d, e, f, h = a.start;
    a = a.end;
    var g = b.start;
    b = b.end;
    return a > g && b > h ? (h >= g ? (c = h.clone(), e = !0) : (c = g.clone(), e = !1), b >= a ? (d = a.clone(), f = !0) : (d = b.clone(), f = !1), {start:c, end:d, isStart:e, isEnd:f}) : void 0;
  }
  function Ga(a, b) {
    return n.duration({days:a.clone().stripTime().diff(b.clone().stripTime(), "days"), ms:a.time() - b.time()});
  }
  function Ha(a, b, c) {
    return n.duration(Math.round(a.diff(b, c, !0)), c);
  }
  function ja(a, b) {
    var c, d, e;
    for (c = 0; c < ka.length && (d = ka[c], e = fb(d, a, b), !(1 <= e && K(e))); c++) {
    }
    return d;
  }
  function fb(a, b, c) {
    return null != c ? c.diff(b, a, !0) : n.isDuration(b) ? b.as(a) : b.end.diff(b.start, a, !0);
  }
  function la(a, b) {
    var c, d;
    return O(a) || O(b) ? a / b : (c = a.asMonths(), d = b.asMonths(), 1 <= Math.abs(c) && K(c) && 1 <= Math.abs(d) && K(d) ? c / d : a.asDays() / b.asDays());
  }
  function O(a) {
    return !!(a.hours() || a.minutes() || a.seconds() || a.milliseconds());
  }
  function Ia(a) {
    return /^\d+:\d+(?::\d+\.?(?:\d{3})?)?$/.test(a);
  }
  function P(a, b) {
    var c, d, e, f = {};
    if (b) {
      for (c = 0; c < b.length; c++) {
        var h = b[c];
        var g = [];
        for (d = a.length - 1; 0 <= d; d--) {
          if (e = a[d][h], "object" == typeof e) {
            g.unshift(e);
          } else {
            if (void 0 !== e) {
              f[h] = e;
              break;
            }
          }
        }
        g.length && (f[h] = P(g));
      }
    }
    for (c = a.length - 1; 0 <= c; c--) {
      for (h in b = a[c], b) {
        h in f || (f[h] = b[h]);
      }
    }
    return f;
  }
  function X(a) {
    var b = function() {
    };
    return b.prototype = a, new b;
  }
  function ma(a, b) {
    for (var c in a) {
      Ja.call(a, c) && (b[c] = a[c]);
    }
  }
  function gb(a, b) {
    var c, d = ["constructor", "toString", "valueOf"];
    for (c = 0; c < d.length; c++) {
      var e = d[c];
      a[e] !== Object.prototype[e] && (b[e] = a[e]);
    }
  }
  function Y(a, b, c) {
    if (g.isFunction(a) && (a = [a]), a) {
      var d;
      for (d = 0; d < a.length; d++) {
        var e = a[d].apply(b, c) || e;
      }
      return e;
    }
  }
  function E() {
    for (var a = 0; a < arguments.length; a++) {
      if (void 0 !== arguments[a]) {
        return arguments[a];
      }
    }
  }
  function w(a) {
    return (a + "").replace(/&/g, "\x26amp;").replace(/</g, "\x26lt;").replace(/>/g, "\x26gt;").replace(/'/g, "\x26#039;").replace(/"/g, "\x26quot;").replace(/\n/g, "\x3cbr /\x3e");
  }
  function Z(a) {
    var b = [];
    return g.each(a, function(a, d) {
      null != d && b.push(a + ":" + d);
    }), b.join(";");
  }
  function Ka(a) {
    return a.charAt(0).toUpperCase() + a.slice(1);
  }
  function hb(a, b) {
    return a - b;
  }
  function K(a) {
    return 0 === a % 1;
  }
  function F(a, b) {
    var c = a[b];
    return function() {
      return c.apply(a, arguments);
    };
  }
  function na(a, b) {
    var c, d, e, f, h = function() {
      var g = +new Date - f;
      b > g && 0 < g ? c = setTimeout(h, b - g) : (c = null, a.apply(e, d), c || (e = d = null));
    };
    return function() {
      e = this;
      d = arguments;
      f = +new Date;
      c || (c = setTimeout(h, b));
    };
  }
  function oa(a, b, c) {
    var d, e, f, h = a[0], l = 1 == a.length && "string" == typeof h;
    if (n.isMoment(h)) {
      var m = n.apply(null, a);
      La(h, m);
    } else {
      var t = h;
      "[object Date]" === Object.prototype.toString.call(t) || t instanceof Date || void 0 === h ? m = n.apply(null, a) : (d = !1, e = !1, l ? ib.test(h) ? (h += "-01", a = [h], d = !0, e = !0) : (f = jb.exec(h)) && (d = !f[5], e = !0) : g.isArray(h) && (e = !0), m = b || d ? n.utc.apply(n, a) : n.apply(null, a), d ? (m._ambigTime = !0, m._ambigZone = !0) : c && (e ? m._ambigZone = !0 : l && (m.utcOffset ? m.utcOffset(h) : m.zone(h))));
    }
    return m._fullCalendar = !0, m;
  }
  function pa(a, b) {
    var c, d = !1, e = !1, f = a.length, h = [];
    for (c = 0; f > c; c++) {
      var g = a[c];
      n.isMoment(g) || (g = q.moment.parseZone(g));
      d = d || g._ambigTime;
      e = e || g._ambigZone;
      h.push(g);
    }
    for (c = 0; f > c; c++) {
      g = h[c], b || !d || g._ambigTime ? e && !g._ambigZone && (h[c] = g.clone().stripZone()) : h[c] = g.clone().stripTime();
    }
    return h;
  }
  function La(a, b) {
    a._ambigTime ? b._ambigTime = !0 : b._ambigTime && (b._ambigTime = !1);
    a._ambigZone ? b._ambigZone = !0 : b._ambigZone && (b._ambigZone = !1);
  }
  function Ma(a, b) {
    a.year(b[0] || 0).month(b[1] || 0).date(b[2] || 0).hours(b[3] || 0).minutes(b[4] || 0).seconds(b[5] || 0).milliseconds(b[6] || 0);
  }
  function L(a, b) {
    return A.format.call(a, b);
  }
  function Na(a, b) {
    var c, d = "";
    for (c = 0; c < b.length; c++) {
      d += qa(a, b[c]);
    }
    return d;
  }
  function qa(a, b) {
    var c, d;
    return "string" == typeof b ? b : (c = b.token) ? Oa[c] ? Oa[c](a) : L(a, c) : b.maybe && (d = Na(a, b.maybe), d.match(/[1-9]/)) ? d : "";
  }
  function Pa(a, b, c, d, e) {
    a = q.moment.parseZone(a);
    b = q.moment.parseZone(b);
    c = (a.localeData || a.lang).call(a).longDateFormat(c) || c;
    d = d || " - ";
    c = Qa(c);
    var f, h, g, m = "", t = "", k = "", p = "", n = "";
    for (h = 0; h < c.length && (f = Ra(a, b, c[h]), !1 !== f); h++) {
      m += f;
    }
    for (g = c.length - 1; g > h && (f = Ra(a, b, c[g]), !1 !== f); g--) {
      t = f + t;
    }
    for (f = h; g >= f; f++) {
      k += qa(a, c[f]), p += qa(b, c[f]);
    }
    return (k || p) && (n = e ? p + d + k : k + d + p), m + n + t;
  }
  function Ra(a, b, c) {
    var d, e;
    return "string" == typeof c ? c : (d = c.token) && (e = kb[d.charAt(0)], e && a.isSame(b, e)) ? L(a, d) : !1;
  }
  function Qa(a) {
    return a in ra ? ra[a] : ra[a] = Sa(a);
  }
  function Sa(a) {
    for (var b, c = [], d = /\[([^\]]*)\]|\(([^\)]*)\)|(LTS|LT|(\w)\4*o?)|([^\w\[\(]+)/g; b = d.exec(a);) {
      b[1] ? c.push(b[1]) : b[2] ? c.push({maybe:Sa(b[2])}) : b[3] ? c.push({token:b[3]}) : b[5] && c.push(b[5]);
    }
    return c;
  }
  function y() {
  }
  function Ta(a, b) {
    return a || b ? a && b ? a.grid === b.grid && a.row === b.row && a.col === b.col : !1 : !0;
  }
  function Ua(a) {
    return E((a.source || {}).rendering, a.rendering);
  }
  function lb(a) {
    var b, c = {};
    for (b = 0; b < a.length; b++) {
      var d = a[b];
      (c[d._id] || (c[d._id] = [])).push(d);
    }
    return c;
  }
  function mb(a, b) {
    return a.eventStartMS - b.eventStartMS;
  }
  function nb(a) {
    var b, c, d, e, f = q.dataAttrPrefix;
    return f && (f += "-"), b = a.data(f + "event") || null, b && (b = "object" == typeof b ? g.extend({}, b) : {}, c = b.start, null == c && (c = b.time), d = b.duration, e = b.stick, delete b.start, delete b.time, delete b.duration, delete b.stick), null == c && (c = a.data(f + "start")), null == c && (c = a.data(f + "time")), null == d && (d = a.data(f + "duration")), null == e && (e = a.data(f + "stick")), c = null != c ? n.duration(c) : null, d = null != d ? n.duration(d) : null, e = !!e, {eventProps:b, 
    startTime:c, duration:d, stick:e};
  }
  function ob(a, b) {
    var c, d;
    for (c = 0; c < b.length; c++) {
      if (d = b[c], d.leftCol <= a.rightCol && d.rightCol >= a.leftCol) {
        return !0;
      }
    }
    return !1;
  }
  function pb(a, b) {
    return a.leftCol - b.leftCol;
  }
  function Va(a) {
    var b, c = a.forwardSegs, d = 0;
    if (void 0 === a.forwardPressure) {
      for (b = 0; b < c.length; b++) {
        var e = c[b];
        Va(e);
        d = Math.max(d, 1 + e.forwardPressure);
      }
      a.forwardPressure = d;
    }
  }
  function Wa(a, b, c) {
    c = c || [];
    for (var d = 0; d < b.length; d++) {
      var e = b[d];
      a.bottom > e.top && a.top < e.bottom && c.push(b[d]);
    }
    return c;
  }
  function Xa(a) {
    g.each(qb, function(b, c) {
      null == a[b] && (a[b] = c(a));
    });
  }
  function Ya(a) {
    var b = n.localeData || n.langData;
    return b.call(n, a) || b.call(n, "en");
  }
  function rb(a, b) {
    function c(c) {
      var e = g('\x3cdiv class\x3d"fc-' + c + '"/\x3e');
      c = b.header[c];
      return c && g.each(c.split(" "), function(c) {
        var h, k = g(), l = !0;
        g.each(this.split(","), function(c, e) {
          var h, m, p, t, n, q, I, U, x, B;
          "title" == e ? (k = k.add(g("\x3ch2\x3e\x26nbsp;\x3c/h2\x3e")), l = !1) : ((h = (a.options.customButtons || {})[e]) ? (p = function(a) {
            h.click && h.click.call(B[0], a);
          }, t = "", n = h.text) : (m = a.getViewSpec(e)) ? (p = function() {
            a.changeView(e);
          }, f.push(e), t = m.buttonTextOverride, n = m.buttonTextDefault) : a[e] && (p = function() {
            a[e]();
          }, t = (a.overrides.buttonText || {})[e], n = b.buttonText[e]), p && (q = h ? h.themeIcon : b.themeButtonIcons[e], I = h ? h.icon : b.buttonIcons[e], U = t ? w(t) : q && b.theme ? "\x3cspan class\x3d'ui-icon ui-icon-" + q + "'\x3e\x3c/span\x3e" : I && !b.theme ? "\x3cspan class\x3d'fc-icon fc-icon-" + I + "'\x3e\x3c/span\x3e" : w(n), x = ["fc-" + e + "-button", d + "-button", d + "-state-default"], B = g('\x3cbutton type\x3d"button" class\x3d"' + x.join(" ") + '"\x3e' + U + "\x3c/button\x3e").click(function(a) {
            B.hasClass(d + "-state-disabled") || (p(a), (B.hasClass(d + "-state-active") || B.hasClass(d + "-state-disabled")) && B.removeClass(d + "-state-hover"));
          }).mousedown(function() {
            B.not("." + d + "-state-active").not("." + d + "-state-disabled").addClass(d + "-state-down");
          }).mouseup(function() {
            B.removeClass(d + "-state-down");
          }).hover(function() {
            B.not("." + d + "-state-active").not("." + d + "-state-disabled").addClass(d + "-state-hover");
          }, function() {
            B.removeClass(d + "-state-hover").removeClass(d + "-state-down");
          }), k = k.add(B)));
        });
        l && k.first().addClass(d + "-corner-left").end().last().addClass(d + "-corner-right").end();
        1 < k.length ? (h = g("\x3cdiv/\x3e"), l && h.addClass("fc-button-group"), h.append(k), e.append(h)) : e.append(k);
      }), e;
    }
    this.render = function() {
      var a = b.header;
      return d = b.theme ? "ui" : "fc", a ? e = g("\x3cdiv class\x3d'fc-toolbar'/\x3e").append(c("left")).append(c("right")).append(c("center")).append('\x3cdiv class\x3d"fc-clear"/\x3e') : void 0;
    };
    this.removeElement = function() {
      e.remove();
      e = g();
    };
    this.updateTitle = function(a) {
      e.find("h2").text(a);
    };
    this.activateButton = function(a) {
      e.find(".fc-" + a + "-button").addClass(d + "-state-active");
    };
    this.deactivateButton = function(a) {
      e.find(".fc-" + a + "-button").removeClass(d + "-state-active");
    };
    this.disableButton = function(a) {
      e.find(".fc-" + a + "-button").attr("disabled", "disabled").addClass(d + "-state-disabled");
    };
    this.enableButton = function(a) {
      e.find(".fc-" + a + "-button").removeAttr("disabled").removeClass(d + "-state-disabled");
    };
    this.getViewsWithButtons = function() {
      return f;
    };
    var d, e = g(), f = [];
  }
  function sb(a) {
    function b(a, b) {
      c(a, function(c) {
        var d, e = g.isArray(a.events);
        if (b == C) {
          if (c) {
            for (d = 0; d < c.length; d++) {
              var f = c[d];
              (f = e ? f : m(f, a)) && D.push.apply(D, I(f));
            }
          }
          ba--;
          ba || y(D);
        }
      });
    }
    function c(b, d) {
      var e, f, h = q.sourceFetchers;
      for (e = 0; e < h.length; e++) {
        if (f = h[e].call(u, b, v.clone(), G.clone(), a.timezone, d), !0 === f) {
          return;
        }
        if ("object" == typeof f) {
          return void c(f, d);
        }
      }
      if (e = b.events) {
        g.isFunction(e) ? (u.pushLoading(), e.call(u, v.clone(), G.clone(), a.timezone, function(a) {
          d(a);
          u.popLoading();
        })) : g.isArray(e) ? d(e) : d();
      } else {
        if (b.url) {
          var aa = b.success, k = b.error, tb = b.complete;
          e = g.isFunction(b.data) ? b.data() : b.data;
          e = g.extend({}, e || {});
          f = E(b.startParam, a.startParam);
          h = E(b.endParam, a.endParam);
          var l = E(b.timezoneParam, a.timezoneParam);
          f && (e[f] = v.format());
          h && (e[h] = G.format());
          a.timezone && "local" != a.timezone && (e[l] = a.timezone);
          u.pushLoading();
          g.ajax(g.extend({}, ub, b, {data:e, success:function(a) {
            a = a || [];
            var b = Y(aa, this, arguments);
            g.isArray(b) && (a = b);
            d(a);
          }, error:function() {
            Y(k, this, arguments);
            d();
          }, complete:function() {
            Y(tb, this, arguments);
            u.popLoading();
          }}));
        } else {
          d();
        }
      }
    }
    function d(a) {
      var b, c = q.sourceNormalizers;
      if (g.isFunction(a) || g.isArray(a) ? b = {events:a} : "string" == typeof a ? b = {url:a} : "object" == typeof a && (b = g.extend({}, a)), b) {
        b.className ? "string" == typeof b.className && (b.className = b.className.split(/\s+/)) : b.className = [];
        g.isArray(b.events) && (b.origArray = b.events, b.events = g.map(b.events, function(a) {
          return m(a, b);
        }));
        for (a = 0; a < c.length; a++) {
          c[a].call(u, b);
        }
        return b;
      }
    }
    function e(a, b) {
      return a && b && f(a) == f(b);
    }
    function f(a) {
      return ("object" == typeof a ? a.origArray || a.googleCalendarId || a.url || a.events : null) || a;
    }
    function h(a) {
      var b = {};
      return g.each(a, function(a, c) {
        !/^_|^(id|allDay|start|end)$/.test(a) && void 0 !== c && /undefined|null|boolean|number|string/.test(g.type(c)) && (b[a] = c);
      }), b;
    }
    function l(a) {
      return g.isFunction(a) ? g.grep(D, a) : null != a ? (a += "", g.grep(D, function(b) {
        return b._id == a;
      })) : D;
    }
    function m(b, c) {
      var d, e, f = {};
      if (a.eventDataTransform && (b = a.eventDataTransform(b)), c && c.eventDataTransform && (b = c.eventDataTransform(b)), g.extend(f, b), c && (f.source = c), f._id = b._id || (void 0 === b.id ? "_fc" + vb++ : b.id + ""), b.className ? "string" == typeof b.className ? f.className = b.className.split(/\s+/) : f.className = b.className : f.className = [], d = b.start || b.date, e = b.end, Ia(d) && (d = n.duration(d)), Ia(e) && (e = n.duration(e)), b.dow || n.isDuration(d) || n.isDuration(e)) {
        f.start = d ? n.duration(d) : null, f.end = e ? n.duration(e) : null, f._recurring = !0;
      } else {
        if (d && (d = u.moment(d), !d.isValid())) {
          return !1;
        }
        e && (e = u.moment(e), e.isValid() || (e = null));
        b = b.allDay;
        void 0 === b && (b = E(c ? c.allDayDefault : void 0, a.allDayDefault));
        f.start = d;
        f.end = e;
        f.allDay = b;
        t(f);
        ca(f);
      }
      return f;
    }
    function t(b) {
      k(b);
      b.end && !b.end.isAfter(b.start) && (b.end = null);
      b.end || (a.forceEventDuration ? b.end = u.getDefaultEventEnd(b.allDay, b.start) : b.end = null);
    }
    function k(a) {
      null == a.allDay && (a.allDay = !(a.start.hasTime() || a.end && a.end.hasTime()));
      a.allDay ? (a.start.stripTime(), a.end && a.end.stripTime()) : (a.start.hasTime() || (a.start = u.rezoneDate(a.start)), a.end && !a.end.hasTime() && (a.end = u.rezoneDate(a.end)));
    }
    function p(a) {
      var b;
      return a.end || (b = a.allDay, null == b && (b = !a.start.hasTime()), a = g.extend({}, a), a.end = u.getDefaultEventEnd(b, a.start)), a;
    }
    function I(a, b, c) {
      var d, e, f = [];
      if (b = b || v, c = c || G, a) {
        if (a._recurring) {
          if (d = a.dow) {
            var h = {};
            for (e = 0; e < d.length; e++) {
              h[d[e]] = !0;
            }
          }
          for (b = b.clone().stripTime(); b.isBefore(c);) {
            if (!h || h[b.day()]) {
              var k = a.start;
              var l = a.end;
              d = b.clone();
              var m = null;
              k && (d = d.time(k));
              l && (m = b.clone().time(l));
              e = g.extend({}, a);
              k = !k && !l;
              l = e;
              l.start = d;
              l.end = m;
              l.allDay = k;
              t(l);
              ca(l);
              f.push(e);
            }
            b.add(1, "days");
          }
        } else {
          f.push(a);
        }
      }
      return f;
    }
    function U(a, b, c) {
      function d(a, d) {
        return c ? Ha(a, d, c) : b.allDay ? n.duration({days:a.clone().stripTime().diff(d.clone().stripTime(), "days")}) : Ga(a, d);
      }
      var e, f, h, k, m, p, aa = {};
      return b = b || {}, b.start || (b.start = a.start.clone()), void 0 === b.end && (b.end = a.end ? a.end.clone() : null), null == b.allDay && (b.allDay = a.allDay), t(b), e = {start:a._start.clone(), end:a._end ? a._end.clone() : u.getDefaultEventEnd(a._allDay, a._start), allDay:b.allDay}, t(e), f = null !== a._end && null === b.end, h = d(b.start, e.start), b.end ? (k = d(b.end, e.end), m = k.subtract(h)) : m = null, g.each(b, function(a, b) {
        !/^_|^(id|allDay|start|end)$/.test(a) && void 0 !== b && (aa[a] = b);
      }), p = x(l(a._id), f, b.allDay, h, m, aa), {dateDelta:h, durationDelta:m, undo:p};
    }
    function x(a, b, c, d, e, f) {
      var h = u.getIsAmbigTimezone(), k = [];
      return d && !d.valueOf() && (d = null), e && !e.valueOf() && (e = null), g.each(a, function(a, l) {
        var m = {start:l.start.clone(), end:l.end ? l.end.clone() : null, allDay:l.allDay};
        g.each(f, function(a) {
          m[a] = l[a];
        });
        a = {start:l._start, end:l._end, allDay:c};
        t(a);
        b ? a.end = null : e && !a.end && (a.end = u.getDefaultEventEnd(a.allDay, a.start));
        d && (a.start.add(d), a.end && a.end.add(d));
        e && a.end.add(e);
        h && !a.allDay && (d || e) && (a.start.stripZone(), a.end && a.end.stripZone());
        g.extend(l, f, a);
        ca(l);
        k.push(function() {
          g.extend(l, m);
          ca(l);
        });
      }), function() {
        for (var a = 0; a < k.length; a++) {
          k[a]();
        }
      };
    }
    function z(b) {
      var c, d = a.businessHours, e = {className:"fc-nonbusiness", start:"09:00", end:"17:00", dow:[1, 2, 3, 4, 5], rendering:"inverse-background"}, f = u.getView();
      return d && (c = g.extend({}, e, "object" == typeof d ? d : {})), c ? (b && (c.start = null, c.end = null), I(m(c), f.start, f.end)) : [];
    }
    function r(b, c) {
      var d = c.source || {}, e = E(c.constraint, d.constraint, a.eventConstraint);
      d = E(c.overlap, d.overlap, a.eventOverlap);
      return b = p(b), A(b, e, d, c);
    }
    function w(b) {
      return A(b, a.selectConstraint, a.selectOverlap);
    }
    function A(a, b, c, d) {
      var e;
      if (a = g.extend({}, a), a.start = a.start.clone().stripZone(), a.end = a.end.clone().stripZone(), null != b) {
        var f = "businessHours" === b ? z() : "object" == typeof b ? I(m(b)) : l(b);
        var h = !1;
        for (b = 0; b < f.length; b++) {
          var k = f[b], p = a, t = k.start.clone().stripZone();
          k = u.getEventEnd(k).stripZone();
          if (p.start >= t && p.end <= k) {
            h = !0;
            break;
          }
        }
        if (!h) {
          return !1;
        }
      }
      h = u.getPeerEvents(d, a);
      for (b = 0; b < h.length; b++) {
        if (k = f = h[b], p = a, t = k.start.clone().stripZone(), k = u.getEventEnd(k).stripZone(), p.start < k && p.end > t && (!1 === c || "function" == typeof c && !c(f, d) || d && ((e = E(f.overlap, (f.source || {}).overlap), !1 === e) || "function" == typeof e && !e(d, f)))) {
          return !1;
        }
      }
      return !0;
    }
    var u = this;
    u.isFetchNeeded = function(a, b) {
      return !v || a.clone().stripZone() < v.clone().stripZone() || b.clone().stripZone() > G.clone().stripZone();
    };
    u.fetchEvents = function(a, c) {
      v = a;
      G = c;
      D = [];
      a = ++C;
      ba = c = H.length;
      for (var d = 0; c > d; d++) {
        b(H[d], a);
      }
    };
    u.addEventSource = function(a) {
      (a = d(a)) && (H.push(a), ba++, b(a, C));
    };
    u.removeEventSource = function(a) {
      H = g.grep(H, function(b) {
        return !e(b, a);
      });
      D = g.grep(D, function(b) {
        return !e(b.source, a);
      });
      y(D);
    };
    u.updateEvent = function(a) {
      a.start = u.moment(a.start);
      a.end ? a.end = u.moment(a.end) : a.end = null;
      U(a, h(a));
      y(D);
    };
    u.renderEvent = function(a, b) {
      var c;
      if (a = m(a)) {
        a = I(a);
        for (c = 0; c < a.length; c++) {
          var d = a[c];
          d.source || (b && (B.events.push(d), d.source = B), D.push(d));
        }
        return y(D), a;
      }
      return [];
    };
    u.removeEvents = function(a) {
      var b, c;
      null == a ? a = function() {
        return !0;
      } : g.isFunction(a) || (b = a + "", a = function(a) {
        return a._id == b;
      });
      D = g.grep(D, a, !0);
      for (c = 0; c < H.length; c++) {
        g.isArray(H[c].events) && (H[c].events = g.grep(H[c].events, a, !0));
      }
      y(D);
    };
    u.clientEvents = l;
    u.mutateEvent = U;
    u.normalizeEventRange = t;
    u.normalizeEventRangeTimes = k;
    u.ensureVisibleEventRange = p;
    var v, G, y = u.reportEvents, B = {events:[]}, H = [B], C = 0, ba = 0, D = [];
    g.each((a.events ? [a.events] : []).concat(a.eventSources || []), function(a, b) {
      (a = d(b)) && H.push(a);
    });
    u.getBusinessHoursEvents = z;
    u.isEventRangeAllowed = r;
    u.isSelectionRangeAllowed = w;
    u.isExternalDropRangeAllowed = function(a, b) {
      var c, d;
      return b && (c = g.extend({}, b, a), d = I(m(c))[0]), d ? r(a, d) : (a = p(a), w(a));
    };
    u.getEventCache = function() {
      return D;
    };
  }
  function ca(a) {
    a._allDay = a.allDay;
    a._start = a.start.clone();
    a._end = a.end ? a.end.clone() : null;
  }
  var q = g.fullCalendar = {version:"2.4.0"}, M = q.views = {};
  g.fn.fullCalendar = function(a) {
    var b = Array.prototype.slice.call(arguments, 1), c = this;
    return this.each(function(d, e) {
      var f;
      e = g(e);
      var h = e.data("fullCalendar");
      "string" == typeof a ? h && g.isFunction(h[a]) && (f = h[a].apply(h, b), d || (c = f), "destroy" === a && e.removeData("fullCalendar")) : h || (h = new v(e, a), e.data("fullCalendar", h), h.render());
    }), c;
  };
  var R = ["header", "buttonText", "buttonIcons", "themeButtonIcons"];
  q.intersectionToSeg = ia;
  q.applyAll = Y;
  q.debounce = na;
  q.isInt = K;
  q.htmlEscape = w;
  q.cssToStr = Z;
  q.proxy = F;
  q.capitaliseFirstLetter = Ka;
  q.getClientRect = Aa;
  q.getContentRect = function(a) {
    var b = a.offset(), c = b.left + (parseFloat(a.css("border-left-width")) || 0) + (parseFloat(a.css("padding-left")) || 0);
    b = b.top + (parseFloat(a.css("border-top-width")) || 0) + (parseFloat(a.css("padding-top")) || 0);
    return {left:c, right:c + a.width(), top:b, bottom:b + a.height()};
  };
  q.getScrollbarWidths = W;
  var ha = null;
  q.intersectRects = Ba;
  q.parseFieldSpecs = Ca;
  q.compareByFieldSpecs = Da;
  q.compareByFieldSpec = Ea;
  q.flexibleCompare = Fa;
  q.computeIntervalUnit = ja;
  q.divideRangeByDuration = function(a, b, c) {
    var d;
    return O(c) ? (b - a) / c : (d = c.asMonths(), 1 <= Math.abs(d) && K(d) ? b.diff(a, "months", !0) / d : b.diff(a, "days", !0) / c.asDays());
  };
  q.divideDurationByDuration = la;
  q.multiplyDuration = function(a, b) {
    var c;
    return O(a) ? n.duration(a * b) : (c = a.asMonths(), 1 <= Math.abs(c) && K(c) ? n.duration({months:c * b}) : n.duration({days:a.asDays() * b}));
  };
  q.durationHasTime = O;
  var Za = "sun mon tue wed thu fri sat".split(" "), ka = "year month week day hour minute second millisecond".split(" ");
  q.log = function() {
    var a = window.console;
    return a && a.log ? a.log.apply(a, arguments) : void 0;
  };
  q.warn = function() {
    var a = window.console;
    return a && a.warn ? a.warn.apply(a, arguments) : q.log.apply(q, arguments);
  };
  var $a, Ja = {}.hasOwnProperty, ib = /^\s*\d{4}-\d\d$/, jb = /^\s*\d{4}-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?)?$/, x = n.fn, A = g.extend({}, x);
  q.moment = function() {
    return oa(arguments);
  };
  q.moment.utc = function() {
    var a = oa(arguments, !0);
    return a.hasTime() && a.utc(), a;
  };
  q.moment.parseZone = function() {
    return oa(arguments, !0, !0);
  };
  x.clone = function() {
    var a = A.clone.apply(this, arguments);
    return La(this, a), this._fullCalendar && (a._fullCalendar = !0), a;
  };
  x.week = x.weeks = function(a) {
    var b = (this._locale || this._lang)._fullCalendar_weekCalc;
    return null == a && "function" == typeof b ? b(this) : "ISO" === b ? A.isoWeek.apply(this, arguments) : A.week.apply(this, arguments);
  };
  x.time = function(a) {
    if (!this._fullCalendar) {
      return A.time.apply(this, arguments);
    }
    if (null == a) {
      return n.duration({hours:this.hours(), minutes:this.minutes(), seconds:this.seconds(), milliseconds:this.milliseconds()});
    }
    this._ambigTime = !1;
    n.isDuration(a) || n.isMoment(a) || (a = n.duration(a));
    var b = 0;
    return n.isDuration(a) && (b = 24 * Math.floor(a.asDays())), this.hours(b + a.hours()).minutes(a.minutes()).seconds(a.seconds()).milliseconds(a.milliseconds());
  };
  x.stripTime = function() {
    var a;
    return this._ambigTime || (a = this.toArray(), this.utc(), ab(this, a.slice(0, 3)), this._ambigTime = !0, this._ambigZone = !0), this;
  };
  x.hasTime = function() {
    return !this._ambigTime;
  };
  x.stripZone = function() {
    var a, b;
    return this._ambigZone || (a = this.toArray(), b = this._ambigTime, this.utc(), ab(this, a), this._ambigTime = b || !1, this._ambigZone = !0), this;
  };
  x.hasZone = function() {
    return !this._ambigZone;
  };
  x.local = function() {
    var a = this.toArray(), b = this._ambigZone;
    return A.local.apply(this, arguments), this._ambigTime = !1, this._ambigZone = !1, b && wb(this, a), this;
  };
  x.utc = function() {
    return A.utc.apply(this, arguments), this._ambigTime = !1, this._ambigZone = !1, this;
  };
  g.each(["zone", "utcOffset"], function(a, b) {
    A[b] && (x[b] = function(a) {
      return null != a && (this._ambigTime = !1, this._ambigZone = !1), A[b].apply(this, arguments);
    });
  });
  x.format = function() {
    return this._fullCalendar && arguments[0] ? Na(this, Qa(arguments[0])) : this._ambigTime ? L(this, "YYYY-MM-DD") : this._ambigZone ? L(this, "YYYY-MM-DD[T]HH:mm:ss") : A.format.apply(this, arguments);
  };
  x.toISOString = function() {
    return this._ambigTime ? L(this, "YYYY-MM-DD") : this._ambigZone ? L(this, "YYYY-MM-DD[T]HH:mm:ss") : A.toISOString.apply(this, arguments);
  };
  x.isWithin = function(a, b) {
    a = pa([this, a, b]);
    return a[0] >= a[1] && a[0] < a[2];
  };
  x.isSame = function(a, b) {
    var c;
    return this._fullCalendar ? b ? (c = pa([this, a], !0), A.isSame.call(c[0], c[1], b)) : (a = q.moment.parseZone(a), A.isSame.call(this, a) && !!this._ambigTime === !!a._ambigTime && !!this._ambigZone === !!a._ambigZone) : A.isSame.apply(this, arguments);
  };
  g.each(["isBefore", "isAfter"], function(a, b) {
    x[b] = function(a, d) {
      var c;
      return this._fullCalendar ? (c = pa([this, a]), A[b].call(c[0], c[1], d)) : A[b].apply(this, arguments);
    };
  });
  var ab = ($a = "_d" in n() && "updateOffset" in n) ? function(a, b) {
    a._d.setTime(Date.UTC.apply(Date, b));
    n.updateOffset(a, !1);
  } : Ma;
  var wb = $a ? function(a, b) {
    a._d.setTime(+new Date(b[0] || 0, b[1] || 0, b[2] || 0, b[3] || 0, b[4] || 0, b[5] || 0, b[6] || 0));
    n.updateOffset(a, !1);
  } : Ma;
  var Oa = {t:function(a) {
    return L(a, "a").charAt(0);
  }, T:function(a) {
    return L(a, "A").charAt(0);
  }};
  q.formatRange = Pa;
  var kb = {Y:"year", M:"month", D:"day", d:"day", A:"second", a:"second", T:"second", t:"second", H:"second", h:"second", m:"second", s:"second"}, ra = {};
  q.Class = y;
  y.extend = function(a) {
    var b, c = this;
    return a = a || {}, Ja.call(a, "constructor") && (b = a.constructor), "function" != typeof b && (b = a.constructor = function() {
      c.apply(this, arguments);
    }), b.prototype = X(c.prototype), ma(a, b.prototype), gb(a, b.prototype), ma(c, b), b;
  };
  y.mixin = function(a) {
    ma(a.prototype || a, this.prototype);
  };
  var xb = q.Emitter = y.extend({callbackHash:null, on:function(a, b) {
    return this.getCallbacks(a).add(b), this;
  }, off:function(a, b) {
    return this.getCallbacks(a).remove(b), this;
  }, trigger:function(a) {
    var b = Array.prototype.slice.call(arguments, 1);
    return this.triggerWith(a, this, b), this;
  }, triggerWith:function(a, b, c) {
    return this.getCallbacks(a).fireWith(b, c), this;
  }, getCallbacks:function(a) {
    var b;
    return this.callbackHash || (this.callbackHash = {}), b = this.callbackHash[a], b || (b = this.callbackHash[a] = g.Callbacks()), b;
  }}), yb = y.extend({isHidden:!0, options:null, el:null, documentMousedownProxy:null, margin:10, constructor:function(a) {
    this.options = a || {};
  }, show:function() {
    this.isHidden && (this.el || this.render(), this.el.show(), this.position(), this.isHidden = !1, this.trigger("show"));
  }, hide:function() {
    this.isHidden || (this.el.hide(), this.isHidden = !0, this.trigger("hide"));
  }, render:function() {
    var a = this, b = this.options;
    this.el = g('\x3cdiv class\x3d"fc-popover"/\x3e').addClass(b.className || "").css({top:0, left:0}).append(b.content).appendTo(b.parentEl);
    this.el.on("click", ".fc-close", function() {
      a.hide();
    });
    b.autoHide && g(document).on("mousedown", this.documentMousedownProxy = F(this, "documentMousedown"));
  }, documentMousedown:function(a) {
    this.el && !g(a.target).closest(this.el).length && this.hide();
  }, removeElement:function() {
    this.hide();
    this.el && (this.el.remove(), this.el = null);
    g(document).off("mousedown", this.documentMousedownProxy);
  }, position:function() {
    var a, b, c, d = this.options, e = this.el.offsetParent().offset(), f = this.el.outerWidth(), h = this.el.outerHeight(), l = g(window), m = ya(this.el);
    var t = d.top || 0;
    var k = void 0 !== d.left ? d.left : void 0 !== d.right ? d.right - f : 0;
    m.is(window) || m.is(document) ? (m = l, a = 0, b = 0) : (c = m.offset(), a = c.top, b = c.left);
    a += l.scrollTop();
    b += l.scrollLeft();
    !1 !== d.viewportConstrain && (t = Math.min(t, a + m.outerHeight() - h - this.margin), t = Math.max(t, a + this.margin), k = Math.min(k, b + m.outerWidth() - f - this.margin), k = Math.max(k, b + this.margin));
    this.el.css({top:t - e.top, left:k - e.left});
  }, trigger:function(a) {
    this.options[a] && this.options[a].apply(this, Array.prototype.slice.call(arguments, 1));
  }}), zb = y.extend({grid:null, rowCoords:null, colCoords:null, containerEl:null, bounds:null, constructor:function(a) {
    this.grid = a;
  }, build:function() {
    this.grid.build();
    this.rowCoords = this.grid.computeRowCoords();
    this.colCoords = this.grid.computeColCoords();
    this.computeBounds();
  }, clear:function() {
    this.grid.clear();
    this.colCoords = this.rowCoords = null;
  }, getCell:function(a, b) {
    var c, d, e, f = this.rowCoords, h = f.length, l = this.colCoords, m = l.length, t = null, k = null;
    if (this.inBounds(a, b)) {
      for (c = 0; h > c; c++) {
        if (d = f[c], b >= d.top && b < d.bottom) {
          t = c;
          break;
        }
      }
      for (c = 0; m > c; c++) {
        if (d = l[c], a >= d.left && a < d.right) {
          k = c;
          break;
        }
      }
      if (null !== t && null !== k) {
        return e = this.grid.getCell(t, k), e.grid = this.grid, g.extend(e, f[t], l[k]), e;
      }
    }
    return null;
  }, computeBounds:function() {
    this.bounds = this.containerEl ? Aa(this.containerEl) : null;
  }, inBounds:function(a, b) {
    var c = this.bounds;
    return c ? a >= c.left && a < c.right && b >= c.top && b < c.bottom : !0;
  }}), Ab = y.extend({coordMaps:null, constructor:function(a) {
    this.coordMaps = a;
  }, build:function() {
    var a, b = this.coordMaps;
    for (a = 0; a < b.length; a++) {
      b[a].build();
    }
  }, getCell:function(a, b) {
    var c, d = this.coordMaps, e = null;
    for (c = 0; c < d.length && !e; c++) {
      e = d[c].getCell(a, b);
    }
    return e;
  }, clear:function() {
    var a, b = this.coordMaps;
    for (a = 0; a < b.length; a++) {
      b[a].clear();
    }
  }}), N = q.DragListener = y.extend({options:null, isListening:!1, isDragging:!1, originX:null, originY:null, mousemoveProxy:null, mouseupProxy:null, subjectEl:null, subjectHref:null, scrollEl:null, scrollBounds:null, scrollTopVel:null, scrollLeftVel:null, scrollIntervalId:null, scrollHandlerProxy:null, scrollSensitivity:30, scrollSpeed:200, scrollIntervalMs:50, constructor:function(a) {
    this.options = a = a || {};
    this.subjectEl = a.subjectEl;
  }, mousedown:function(a) {
    1 == a.which && !a.ctrlKey && (a.preventDefault(), this.startListening(a), this.options.distance || this.startDrag(a));
  }, startListening:function(a) {
    var b;
    this.isListening || (a && this.options.scroll && (b = ya(g(a.target)), b.is(window) || b.is(document) || (this.scrollEl = b, this.scrollHandlerProxy = na(F(this, "scrollHandler"), 100), this.scrollEl.on("scroll", this.scrollHandlerProxy))), g(document).on("mousemove", this.mousemoveProxy = F(this, "mousemove")).on("mouseup", this.mouseupProxy = F(this, "mouseup")).on("selectstart", this.preventDefault), a ? (this.originX = a.pageX, this.originY = a.pageY) : (this.originX = 0, this.originY = 0), 
    this.isListening = !0, this.listenStart(a));
  }, listenStart:function(a) {
    this.trigger("listenStart", a);
  }, mousemove:function(a) {
    var b, c, d = a.pageX - this.originX, e = a.pageY - this.originY;
    this.isDragging || (b = this.options.distance || 1, c = d * d + e * e, c >= b * b && this.startDrag(a));
    this.isDragging && this.drag(d, e, a);
  }, startDrag:function(a) {
    this.isListening || this.startListening();
    this.isDragging || (this.isDragging = !0, this.dragStart(a));
  }, dragStart:function(a) {
    var b = this.subjectEl;
    this.trigger("dragStart", a);
    (this.subjectHref = b ? b.attr("href") : null) && b.removeAttr("href");
  }, drag:function(a, b, c) {
    this.trigger("drag", a, b, c);
    this.updateScroll(c);
  }, mouseup:function(a) {
    this.stopListening(a);
  }, stopDrag:function(a) {
    this.isDragging && (this.stopScrolling(), this.dragStop(a), this.isDragging = !1);
  }, dragStop:function(a) {
    var b = this;
    this.trigger("dragStop", a);
    setTimeout(function() {
      b.subjectHref && b.subjectEl.attr("href", b.subjectHref);
    }, 0);
  }, stopListening:function(a) {
    this.stopDrag(a);
    this.isListening && (this.scrollEl && (this.scrollEl.off("scroll", this.scrollHandlerProxy), this.scrollHandlerProxy = null), g(document).off("mousemove", this.mousemoveProxy).off("mouseup", this.mouseupProxy).off("selectstart", this.preventDefault), this.mousemoveProxy = null, this.mouseupProxy = null, this.isListening = !1, this.listenStop(a));
  }, listenStop:function(a) {
    this.trigger("listenStop", a);
  }, trigger:function(a) {
    this.options[a] && this.options[a].apply(this, Array.prototype.slice.call(arguments, 1));
  }, preventDefault:function(a) {
    a.preventDefault();
  }, computeScrollBounds:function() {
    var a = this.scrollEl;
    this.scrollBounds = a ? za(a) : null;
  }, updateScroll:function(a) {
    var b, c, d, e, f = this.scrollSensitivity, h = this.scrollBounds, g = 0, m = 0;
    h && (b = (f - (a.pageY - h.top)) / f, c = (f - (h.bottom - a.pageY)) / f, d = (f - (a.pageX - h.left)) / f, e = (f - (h.right - a.pageX)) / f, 0 <= b && 1 >= b ? g = b * this.scrollSpeed * -1 : 0 <= c && 1 >= c && (g = c * this.scrollSpeed), 0 <= d && 1 >= d ? m = d * this.scrollSpeed * -1 : 0 <= e && 1 >= e && (m = e * this.scrollSpeed));
    this.setScrollVel(g, m);
  }, setScrollVel:function(a, b) {
    this.scrollTopVel = a;
    this.scrollLeftVel = b;
    this.constrainScrollVel();
    !this.scrollTopVel && !this.scrollLeftVel || this.scrollIntervalId || (this.scrollIntervalId = setInterval(F(this, "scrollIntervalFunc"), this.scrollIntervalMs));
  }, constrainScrollVel:function() {
    var a = this.scrollEl;
    0 > this.scrollTopVel ? 0 >= a.scrollTop() && (this.scrollTopVel = 0) : 0 < this.scrollTopVel && a.scrollTop() + a[0].clientHeight >= a[0].scrollHeight && (this.scrollTopVel = 0);
    0 > this.scrollLeftVel ? 0 >= a.scrollLeft() && (this.scrollLeftVel = 0) : 0 < this.scrollLeftVel && a.scrollLeft() + a[0].clientWidth >= a[0].scrollWidth && (this.scrollLeftVel = 0);
  }, scrollIntervalFunc:function() {
    var a = this.scrollEl, b = this.scrollIntervalMs / 1E3;
    this.scrollTopVel && a.scrollTop(a.scrollTop() + this.scrollTopVel * b);
    this.scrollLeftVel && a.scrollLeft(a.scrollLeft() + this.scrollLeftVel * b);
    this.constrainScrollVel();
    this.scrollTopVel || this.scrollLeftVel || this.stopScrolling();
  }, stopScrolling:function() {
    this.scrollIntervalId && (clearInterval(this.scrollIntervalId), this.scrollIntervalId = null, this.scrollStop());
  }, scrollHandler:function() {
    this.scrollIntervalId || this.scrollStop();
  }, scrollStop:function() {
  }}), da = N.extend({coordMap:null, origCell:null, cell:null, coordAdjust:null, constructor:function(a, b) {
    N.prototype.constructor.call(this, b);
    this.coordMap = a;
  }, listenStart:function(a) {
    var b, c, d, e = this.subjectEl;
    N.prototype.listenStart.apply(this, arguments);
    this.computeCoords();
    a ? (c = {left:a.pageX, top:a.pageY}, d = c, e && (b = za(e), d = {left:Math.min(Math.max(d.left, b.left), b.right), top:Math.min(Math.max(d.top, b.top), b.bottom)}), this.origCell = this.getCell(d.left, d.top), e && this.options.subjectCenter && (this.origCell && (b = Ba(this.origCell, b) || b), d = {left:(b.left + b.right) / 2, top:(b.top + b.bottom) / 2}), this.coordAdjust = {left:d.left - c.left, top:d.top - c.top}) : (this.origCell = null, this.coordAdjust = null);
  }, computeCoords:function() {
    this.coordMap.build();
    this.computeScrollBounds();
  }, dragStart:function(a) {
    var b;
    N.prototype.dragStart.apply(this, arguments);
    (b = this.getCell(a.pageX, a.pageY)) && this.cellOver(b);
  }, drag:function(a, b, c) {
    N.prototype.drag.apply(this, arguments);
    var d = this.getCell(c.pageX, c.pageY);
    Ta(d, this.cell) || (this.cell && this.cellOut(), d && this.cellOver(d));
  }, dragStop:function() {
    this.cellDone();
    N.prototype.dragStop.apply(this, arguments);
  }, cellOver:function(a) {
    this.cell = a;
    this.trigger("cellOver", a, Ta(a, this.origCell), this.origCell);
  }, cellOut:function() {
    this.cell && (this.trigger("cellOut", this.cell), this.cellDone(), this.cell = null);
  }, cellDone:function() {
    this.cell && this.trigger("cellDone", this.cell);
  }, listenStop:function() {
    N.prototype.listenStop.apply(this, arguments);
    this.origCell = this.cell = null;
    this.coordMap.clear();
  }, scrollStop:function() {
    N.prototype.scrollStop.apply(this, arguments);
    this.computeCoords();
  }, getCell:function(a, b) {
    return this.coordAdjust && (a += this.coordAdjust.left, b += this.coordAdjust.top), this.coordMap.getCell(a, b);
  }}), Bb = y.extend({options:null, sourceEl:null, el:null, parentEl:null, top0:null, left0:null, mouseY0:null, mouseX0:null, topDelta:null, leftDelta:null, mousemoveProxy:null, isFollowing:!1, isHidden:!1, isAnimating:!1, constructor:function(a, b) {
    this.options = b = b || {};
    this.sourceEl = a;
    this.parentEl = b.parentEl ? g(b.parentEl) : a.parent();
  }, start:function(a) {
    this.isFollowing || (this.isFollowing = !0, this.mouseY0 = a.pageY, this.mouseX0 = a.pageX, this.topDelta = 0, this.leftDelta = 0, this.isHidden || this.updatePosition(), g(document).on("mousemove", this.mousemoveProxy = F(this, "mousemove")));
  }, stop:function(a, b) {
    function c() {
      this.isAnimating = !1;
      d.removeElement();
      this.top0 = this.left0 = null;
      b && b();
    }
    var d = this, e = this.options.revertDuration;
    this.isFollowing && !this.isAnimating && (this.isFollowing = !1, g(document).off("mousemove", this.mousemoveProxy), a && e && !this.isHidden ? (this.isAnimating = !0, this.el.animate({top:this.top0, left:this.left0}, {duration:e, complete:c})) : c());
  }, getEl:function() {
    var a = this.el;
    return a || (this.sourceEl.width(), a = this.el = this.sourceEl.clone().css({position:"absolute", visibility:"", display:this.isHidden ? "none" : "", margin:0, right:"auto", bottom:"auto", width:this.sourceEl.width(), height:this.sourceEl.height(), opacity:this.options.opacity || "", zIndex:this.options.zIndex}).appendTo(this.parentEl)), a;
  }, removeElement:function() {
    this.el && (this.el.remove(), this.el = null);
  }, updatePosition:function() {
    var a, b;
    this.getEl();
    null === this.top0 && (this.sourceEl.width(), a = this.sourceEl.offset(), b = this.el.offsetParent().offset(), this.top0 = a.top - b.top, this.left0 = a.left - b.left);
    this.el.css({top:this.top0 + this.topDelta, left:this.left0 + this.leftDelta});
  }, mousemove:function(a) {
    this.topDelta = a.pageY - this.mouseY0;
    this.leftDelta = a.pageX - this.mouseX0;
    this.isHidden || this.updatePosition();
  }, hide:function() {
    this.isHidden || (this.isHidden = !0, this.el && this.el.hide());
  }, show:function() {
    this.isHidden && (this.isHidden = !1, this.updatePosition(), this.getEl().show());
  }}), bb = y.extend({view:null, isRTL:null, cellHtml:"\x3ctd/\x3e", constructor:function(a) {
    this.view = a;
    this.isRTL = a.opt("isRTL");
  }, rowHtml:function(a, b) {
    var c, d = this.getHtmlRenderer("cell", a), e = "";
    b = b || 0;
    for (c = 0; c < this.colCnt; c++) {
      var f = this.getCell(b, c);
      e += d(f);
    }
    return e = this.bookendCells(e, a, b), "\x3ctr\x3e" + e + "\x3c/tr\x3e";
  }, bookendCells:function(a, b, c) {
    var d = this.getHtmlRenderer("intro", b)(c || 0);
    c = this.getHtmlRenderer("outro", b)(c || 0);
    b = this.isRTL ? c : d;
    d = this.isRTL ? d : c;
    return "string" == typeof a ? b + a + d : a.prepend(b).append(d);
  }, getHtmlRenderer:function(a, b) {
    var c, d, e, f, h = this.view;
    return c = a + "Html", b && (d = b + Ka(a) + "Html"), d && (f = h[d]) ? e = h : d && (f = this[d]) ? e = this : (f = h[c]) ? e = h : (f = this[c]) && (e = this), "function" == typeof f ? function() {
      return f.apply(e, arguments) || "";
    } : function() {
      return f || "";
    };
  }}), J = q.Grid = bb.extend({start:null, end:null, rowCnt:0, colCnt:0, el:null, coordMap:null, elsByFill:null, externalDragStartProxy:null, colHeadFormat:null, eventTimeFormat:null, displayEventTime:null, displayEventEnd:null, cellDuration:null, largeUnit:null, constructor:function() {
    bb.apply(this, arguments);
    this.coordMap = new zb(this);
    this.elsByFill = {};
    this.externalDragStartProxy = F(this, "externalDragStart");
  }, computeColHeadFormat:function() {
  }, computeEventTimeFormat:function() {
    return this.view.opt("smallTimeFormat");
  }, computeDisplayEventTime:function() {
    return !0;
  }, computeDisplayEventEnd:function() {
    return !0;
  }, setRange:function(a) {
    this.start = a.start.clone();
    this.end = a.end.clone();
    this.rangeUpdated();
    this.processRangeOptions();
  }, rangeUpdated:function() {
  }, processRangeOptions:function() {
    var a = this.view;
    this.colHeadFormat = a.opt("columnFormat") || this.computeColHeadFormat();
    this.eventTimeFormat = a.opt("eventTimeFormat") || a.opt("timeFormat") || this.computeEventTimeFormat();
    var b = a.opt("displayEventTime");
    null == b && (b = this.computeDisplayEventTime());
    a = a.opt("displayEventEnd");
    null == a && (a = this.computeDisplayEventEnd());
    this.displayEventTime = b;
    this.displayEventEnd = a;
  }, build:function() {
  }, clear:function() {
  }, rangeToSegs:function(a) {
  }, diffDates:function(a, b) {
    return this.largeUnit ? Ha(a, b, this.largeUnit) : Ga(a, b);
  }, getCell:function(a, b) {
    var c;
    return null == b && ("number" == typeof a ? (b = a % this.colCnt, a = Math.floor(a / this.colCnt)) : (b = a.col, a = a.row)), c = {row:a, col:b}, g.extend(c, this.getRowData(a), this.getColData(b)), g.extend(c, this.computeCellRange(c)), c;
  }, computeCellRange:function(a) {
    a = this.computeCellDate(a);
    return {start:a, end:a.clone().add(this.cellDuration)};
  }, computeCellDate:function(a) {
  }, getRowData:function(a) {
    return {};
  }, getColData:function(a) {
    return {};
  }, getRowEl:function(a) {
  }, getColEl:function(a) {
  }, getCellDayEl:function(a) {
    return this.getColEl(a.col) || this.getRowEl(a.row);
  }, computeRowCoords:function() {
    var a, b = [];
    for (a = 0; a < this.rowCnt; a++) {
      var c = this.getRowEl(a);
      var d = c.offset().top;
      b.push({top:d, bottom:d + c.outerHeight()});
    }
    return b;
  }, computeColCoords:function() {
    var a, b = [];
    for (a = 0; a < this.colCnt; a++) {
      var c = this.getColEl(a);
      var d = c.offset().left;
      b.push({left:d, right:d + c.outerWidth()});
    }
    return b;
  }, setElement:function(a) {
    var b = this;
    this.el = a;
    a.on("mousedown", function(a) {
      g(a.target).is(".fc-event-container *, .fc-more") || g(a.target).closest(".fc-popover").length || b.dayMousedown(a);
    });
    this.bindSegHandlers();
    this.bindGlobalHandlers();
  }, removeElement:function() {
    this.unbindGlobalHandlers();
    this.el.remove();
  }, renderSkeleton:function() {
  }, renderDates:function() {
  }, unrenderDates:function() {
  }, bindGlobalHandlers:function() {
    g(document).on("dragstart sortstart", this.externalDragStartProxy);
  }, unbindGlobalHandlers:function() {
    g(document).off("dragstart sortstart", this.externalDragStartProxy);
  }, dayMousedown:function(a) {
    var b, c, d = this, e = this.view, f = e.opt("selectable");
    (new da(this.coordMap, {scroll:e.opt("dragScroll"), dragStart:function() {
      e.unselect();
    }, cellOver:function(a, e, g) {
      g && (b = e ? a : null, f && (c = d.computeSelection(g, a), c ? d.renderSelection(c) : V()));
    }, cellOut:function(a) {
      c = b = null;
      d.unrenderSelection();
      S();
    }, listenStop:function(a) {
      b && e.triggerDayClick(b, d.getCellDayEl(b), a);
      c && e.reportSelection(c, a);
      S();
    }})).mousedown(a);
  }, renderRangeHelper:function(a, b) {
    a = this.fabricateHelperEvent(a, b);
    this.renderHelper(a, b);
  }, fabricateHelperEvent:function(a, b) {
    var c = b ? X(b.event) : {};
    return c.start = a.start.clone(), c.end = a.end ? a.end.clone() : null, c.allDay = null, this.view.calendar.normalizeEventRange(c), c.className = (c.className || []).concat("fc-helper"), b || (c.editable = !1), c;
  }, renderHelper:function(a, b) {
  }, unrenderHelper:function() {
  }, renderSelection:function(a) {
    this.renderHighlight(this.selectionRangeToSegs(a));
  }, unrenderSelection:function() {
    this.unrenderHighlight();
  }, computeSelection:function(a, b) {
    var c;
    a = [a.start, a.end, b.start, b.end];
    return a.sort(hb), c = {start:a[0].clone(), end:a[3].clone()}, this.view.calendar.isSelectionRangeAllowed(c) ? c : null;
  }, selectionRangeToSegs:function(a) {
    return this.rangeToSegs(a);
  }, renderHighlight:function(a) {
    this.renderFill("highlight", a);
  }, unrenderHighlight:function() {
    this.unrenderFill("highlight");
  }, highlightSegClasses:function() {
    return ["fc-highlight"];
  }, renderFill:function(a, b) {
  }, unrenderFill:function(a) {
    var b = this.elsByFill[a];
    b && (b.remove(), delete this.elsByFill[a]);
  }, renderFillSegEls:function(a, b) {
    var c, d = this, e = this[a + "SegEl"], f = "", h = [];
    if (b.length) {
      for (c = 0; c < b.length; c++) {
        f += this.fillSegHtml(a, b[c]);
      }
      g(f).each(function(a, c) {
        a = b[a];
        c = g(c);
        e && (c = e.call(d, a, c));
        c && (c = g(c), c.is(d.fillSegTag) && (a.el = c, h.push(a)));
      });
    }
    return h;
  }, fillSegTag:"div", fillSegHtml:function(a, b) {
    var c = this[a + "SegClasses"];
    a = this[a + "SegCss"];
    c = c ? c.call(this, b) : [];
    b = Z(a ? a.call(this, b) : {});
    return "\x3c" + this.fillSegTag + (c.length ? ' class\x3d"' + c.join(" ") + '"' : "") + (b ? ' style\x3d"' + b + '"' : "") + " /\x3e";
  }, headHtml:function() {
    return '\x3cdiv class\x3d"fc-row ' + this.view.widgetHeaderClass + '"\x3e\x3ctable\x3e\x3cthead\x3e' + this.rowHtml("head") + "\x3c/thead\x3e\x3c/table\x3e\x3c/div\x3e";
  }, headCellHtml:function(a) {
    a = a.start;
    return '\x3cth class\x3d"fc-day-header ' + this.view.widgetHeaderClass + " fc-" + Za[a.day()] + '"\x3e' + w(a.format(this.colHeadFormat)) + "\x3c/th\x3e";
  }, bgCellHtml:function(a) {
    var b = this.view;
    a = a.start;
    var c = this.getDayClasses(a);
    return c.unshift("fc-day", b.widgetContentClass), '\x3ctd class\x3d"' + c.join(" ") + '" data-date\x3d"' + a.format("YYYY-MM-DD") + '"\x3e\x3c/td\x3e';
  }, getDayClasses:function(a) {
    var b = this.view, c = b.calendar.getNow().stripTime(), d = ["fc-" + Za[a.day()]];
    return 1 == b.intervalDuration.as("months") && a.month() != b.intervalStart.month() && d.push("fc-other-month"), a.isSame(c, "day") ? d.push("fc-today", b.highlightStateClass) : c > a ? d.push("fc-past") : d.push("fc-future"), d;
  }});
  J.mixin({mousedOverSeg:null, isDraggingSeg:!1, isResizingSeg:!1, isDraggingExternal:!1, segs:null, renderEvents:function(a) {
    var b = this.eventsToSegs(a), c = [], d = [];
    for (a = 0; a < b.length; a++) {
      var e = b[a];
      var f = Ua(e.event);
      "background" === f || "inverse-background" === f ? c.push(e) : d.push(e);
    }
    c = this.renderBgSegs(c) || c;
    d = this.renderFgSegs(d) || d;
    this.segs = c.concat(d);
  }, unrenderEvents:function() {
    this.triggerSegMouseout();
    this.unrenderFgSegs();
    this.unrenderBgSegs();
    this.segs = null;
  }, getEventSegs:function() {
    return this.segs || [];
  }, renderFgSegs:function(a) {
  }, unrenderFgSegs:function() {
  }, renderFgSegEls:function(a, b) {
    var c, d = this.view, e = "", f = [];
    if (a.length) {
      for (c = 0; c < a.length; c++) {
        e += this.fgSegHtml(a[c], b);
      }
      g(e).each(function(b, c) {
        b = a[b];
        (c = d.resolveEventEl(b.event, g(c))) && (c.data("fc-seg", b), b.el = c, f.push(b));
      });
    }
    return f;
  }, fgSegHtml:function(a, b) {
  }, renderBgSegs:function(a) {
    return this.renderFill("bgEvent", a);
  }, unrenderBgSegs:function() {
    this.unrenderFill("bgEvent");
  }, bgEventSegEl:function(a, b) {
    return this.view.resolveEventEl(a.event, b);
  }, bgEventSegClasses:function(a) {
    a = a.event;
    return ["fc-bgevent"].concat(a.className, (a.source || {}).className || []);
  }, bgEventSegCss:function(a) {
    var b = this.view;
    a = a.event;
    var c = a.source || {};
    return {"background-color":a.backgroundColor || a.color || c.backgroundColor || c.color || b.opt("eventBackgroundColor") || b.opt("eventColor")};
  }, businessHoursSegClasses:function(a) {
    return ["fc-nonbusiness", "fc-bgevent"];
  }, bindSegHandlers:function() {
    var a = this, b = this.view;
    g.each({mouseenter:function(b, d) {
      a.triggerSegMouseover(b, d);
    }, mouseleave:function(b, d) {
      a.triggerSegMouseout(b, d);
    }, click:function(a, d) {
      return b.trigger("eventClick", this, a.event, d);
    }, mousedown:function(c, d) {
      g(d.target).is(".fc-resizer") && b.isEventResizable(c.event) ? a.segResizeMousedown(c, d, g(d.target).is(".fc-start-resizer")) : b.isEventDraggable(c.event) && a.segDragMousedown(c, d);
    }}, function(b, d) {
      a.el.on(b, ".fc-event-container \x3e *", function(b) {
        var c = g(this).data("fc-seg");
        return !c || a.isDraggingSeg || a.isResizingSeg ? void 0 : d.call(this, c, b);
      });
    });
  }, triggerSegMouseover:function(a, b) {
    this.mousedOverSeg || (this.mousedOverSeg = a, this.view.trigger("eventMouseover", a.el[0], a.event, b));
  }, triggerSegMouseout:function(a, b) {
    b = b || {};
    this.mousedOverSeg && (a = a || this.mousedOverSeg, this.mousedOverSeg = null, this.view.trigger("eventMouseout", a.el[0], a.event, b));
  }, segDragMousedown:function(a, b) {
    var c, d = this, e = this.view, f = e.calendar, g = a.el, l = a.event, m = new Bb(a.el, {parentEl:e.el, opacity:e.opt("dragOpacity"), revertDuration:e.opt("dragRevertDuration"), zIndex:2});
    (new da(e.coordMap, {distance:5, scroll:e.opt("dragScroll"), subjectEl:g, subjectCenter:!0, listenStart:function(a) {
      m.hide();
      m.start(a);
    }, dragStart:function(b) {
      d.triggerSegMouseout(a, b);
      d.segDragStart(a, b);
      e.hideEvent(l);
    }, cellOver:function(b, g, h) {
      a.cell && (h = a.cell);
      (c = d.computeEventDrop(h, b, l)) && !f.isEventRangeAllowed(c, l) && (V(), c = null);
      c && e.renderDrag(c, a) ? m.hide() : m.show();
      g && (c = null);
    }, cellOut:function() {
      e.unrenderDrag();
      m.show();
      c = null;
    }, cellDone:function() {
      S();
    }, dragStop:function(b) {
      m.stop(!c, function() {
        e.unrenderDrag();
        e.showEvent(l);
        d.segDragStop(a, b);
        c && e.reportEventDrop(l, c, this.largeUnit, g, b);
      });
    }, listenStop:function() {
      m.stop();
    }})).mousedown(b);
  }, segDragStart:function(a, b) {
    this.isDraggingSeg = !0;
    this.view.trigger("eventDragStart", a.el[0], a.event, b, {});
  }, segDragStop:function(a, b) {
    this.isDraggingSeg = !1;
    this.view.trigger("eventDragStop", a.el[0], a.event, b, {});
  }, computeEventDrop:function(a, b, c) {
    var d, e, f = this.view.calendar;
    a = a.start;
    b = b.start;
    return a.hasTime() === b.hasTime() ? (d = this.diffDates(b, a), c.allDay && O(d) ? (e = {start:c.start.clone(), end:f.getEventEnd(c), allDay:!1}, f.normalizeEventRangeTimes(e)) : e = {start:c.start.clone(), end:c.end ? c.end.clone() : null, allDay:c.allDay}, e.start.add(d), e.end && e.end.add(d)) : e = {start:b.clone(), end:null, allDay:!b.hasTime()}, e;
  }, applyDragOpacity:function(a) {
    var b = this.view.opt("dragOpacity");
    null != b && a.each(function(a, d) {
      d.style.opacity = b;
    });
  }, externalDragStart:function(a, b) {
    var c, d, e = this.view;
    e.opt("droppable") && (c = g((b ? b.item : null) || a.target), d = e.opt("dropAccept"), (g.isFunction(d) ? d.call(c[0], c) : c.is(d)) && (this.isDraggingExternal || this.listenToExternalDrag(c, a, b)));
  }, listenToExternalDrag:function(a, b, c) {
    var d, e = this, f = nb(a);
    (new da(this.coordMap, {listenStart:function() {
      e.isDraggingExternal = !0;
    }, cellOver:function(a) {
      (d = e.computeExternalDrop(a, f)) ? e.renderDrag(d) : V();
    }, cellOut:function() {
      d = null;
      e.unrenderDrag();
      S();
    }, dragStop:function() {
      e.unrenderDrag();
      S();
      d && e.view.reportExternalDrop(f, d, a, b, c);
    }, listenStop:function() {
      e.isDraggingExternal = !1;
    }})).startDrag(b);
  }, computeExternalDrop:function(a, b) {
    a = {start:a.start.clone(), end:null};
    return b.startTime && !a.start.hasTime() && a.start.time(b.startTime), b.duration && (a.end = a.start.clone().add(b.duration)), this.view.calendar.isExternalDropRangeAllowed(a, b.eventProps) ? a : null;
  }, renderDrag:function(a, b) {
  }, unrenderDrag:function() {
  }, segResizeMousedown:function(a, b, c) {
    var d, e = this, f = this.view, g = f.calendar, l = a.el, m = a.event, t = g.getEventEnd(m);
    (new da(this.coordMap, {distance:5, scroll:f.opt("dragScroll"), subjectEl:l, dragStart:function(b) {
      e.triggerSegMouseout(a, b);
      e.segResizeStart(a, b);
    }, cellOver:function(b, h, l) {
      (d = c ? e.computeEventStartResize(l, b, m) : e.computeEventEndResize(l, b, m)) && (g.isEventRangeAllowed(d, m) ? d.start.isSame(m.start) && d.end.isSame(t) && (d = null) : (V(), d = null));
      d && (f.hideEvent(m), e.renderEventResize(d, a));
    }, cellOut:function() {
      d = null;
    }, cellDone:function() {
      e.unrenderEventResize();
      f.showEvent(m);
      S();
    }, dragStop:function(b) {
      e.segResizeStop(a, b);
      d && f.reportEventResize(m, d, this.largeUnit, l, b);
    }})).mousedown(b);
  }, segResizeStart:function(a, b) {
    this.isResizingSeg = !0;
    this.view.trigger("eventResizeStart", a.el[0], a.event, b, {});
  }, segResizeStop:function(a, b) {
    this.isResizingSeg = !1;
    this.view.trigger("eventResizeStop", a.el[0], a.event, b, {});
  }, computeEventStartResize:function(a, b, c) {
    return this.computeEventResize("start", a, b, c);
  }, computeEventEndResize:function(a, b, c) {
    return this.computeEventResize("end", a, b, c);
  }, computeEventResize:function(a, b, c, d) {
    var e, f, g = this.view.calendar;
    b = this.diffDates(c[a], b[a]);
    return e = {start:d.start.clone(), end:g.getEventEnd(d), allDay:d.allDay}, e.allDay && O(b) && (e.allDay = !1, g.normalizeEventRangeTimes(e)), e[a].add(b), e.start.isBefore(e.end) || (f = d.allDay ? g.defaultAllDayEventDuration : g.defaultTimedEventDuration, this.cellDuration && this.cellDuration < f && (f = this.cellDuration), "start" == a ? e.start = e.end.clone().subtract(f) : e.end = e.start.clone().add(f)), e;
  }, renderEventResize:function(a, b) {
  }, unrenderEventResize:function() {
  }, getEventTimeText:function(a, b, c) {
    return null == b && (b = this.eventTimeFormat), null == c && (c = this.displayEventEnd), this.displayEventTime && a.start.hasTime() ? c && a.end ? this.view.formatRange(a, b) : a.start.format(b) : "";
  }, getSegClasses:function(a, b, c) {
    var d = a.event;
    a = ["fc-event", a.isStart ? "fc-start" : "fc-not-start", a.isEnd ? "fc-end" : "fc-not-end"].concat(d.className, d.source ? d.source.className : []);
    return b && a.push("fc-draggable"), c && a.push("fc-resizable"), a;
  }, getEventSkinCss:function(a) {
    var b = this.view, c = a.source || {}, d = a.color, e = c.color, f = b.opt("eventColor");
    return {"background-color":a.backgroundColor || d || c.backgroundColor || e || b.opt("eventBackgroundColor") || f, "border-color":a.borderColor || d || c.borderColor || e || b.opt("eventBorderColor") || f, color:a.textColor || c.textColor || b.opt("eventTextColor")};
  }, eventsToSegs:function(a, b) {
    var c = this.eventsToRanges(a), d = [];
    for (a = 0; a < c.length; a++) {
      d.push.apply(d, this.eventRangeToSegs(c[a], b));
    }
    return d;
  }, eventsToRanges:function(a) {
    var b = this;
    a = lb(a);
    var c = [];
    return g.each(a, function(a, e) {
      e.length && c.push.apply(c, "inverse-background" === Ua(e[0]) ? b.eventsToInverseRanges(e) : b.eventsToNormalRanges(e));
    }), c;
  }, eventsToNormalRanges:function(a) {
    var b, c = this.view.calendar, d = [];
    for (b = 0; b < a.length; b++) {
      var e = a[b];
      var f = e.start.clone().stripZone();
      var g = c.getEventEnd(e).stripZone();
      d.push({event:e, start:f, end:g, eventStartMS:+f, eventDurationMS:g - f});
    }
    return d;
  }, eventsToInverseRanges:function(a) {
    var b = this.view;
    var c = b.start.clone().stripZone();
    b = b.end.clone().stripZone();
    var d = this.eventsToNormalRanges(a), e = [];
    a = a[0];
    var f = c;
    d.sort(mb);
    for (c = 0; c < d.length; c++) {
      var g = d[c];
      g.start > f && e.push({event:a, start:f, end:g.start});
      f = g.end;
    }
    return b > f && e.push({event:a, start:f, end:b}), e;
  }, eventRangeToSegs:function(a, b) {
    var c;
    a = this.view.calendar.ensureVisibleEventRange(a);
    b = b ? b(a) : this.rangeToSegs(a);
    for (c = 0; c < b.length; c++) {
      var d = b[c];
      d.event = a.event;
      d.eventStartMS = a.eventStartMS;
      d.eventDurationMS = a.eventDurationMS;
    }
    return b;
  }, sortSegs:function(a) {
    a.sort(F(this, "compareSegs"));
  }, compareSegs:function(a, b) {
    return a.eventStartMS - b.eventStartMS || b.eventDurationMS - a.eventDurationMS || b.event.allDay - a.event.allDay || Da(a.event, b.event, this.view.eventOrderSpecs);
  }});
  q.dataAttrPrefix = "";
  var ea = J.extend({numbersVisible:!1, bottomCoordPadding:0, breakOnWeeks:null, cellDates:null, dayToCellOffsets:null, rowEls:null, dayEls:null, helperEls:null, constructor:function() {
    J.apply(this, arguments);
    this.cellDuration = n.duration(1, "day");
  }, renderDates:function(a) {
    var b, c = this.view, d = this.rowCnt, e = d * this.colCnt, f = "";
    for (b = 0; d > b; b++) {
      f += this.dayRowHtml(b, a);
    }
    this.el.html(f);
    this.rowEls = this.el.find(".fc-row");
    this.dayEls = this.el.find(".fc-day");
    for (a = 0; e > a; a++) {
      b = this.getCell(a), c.trigger("dayRender", null, b.start, this.dayEls.eq(a));
    }
  }, unrenderDates:function() {
    this.removeSegPopover();
  }, renderBusinessHours:function() {
    var a = this.view.calendar.getBusinessHoursEvents(!0);
    a = this.eventsToSegs(a);
    this.renderFill("businessHours", a, "bgevent");
  }, dayRowHtml:function(a, b) {
    var c = ["fc-row", "fc-week", this.view.widgetContentClass];
    return b && c.push("fc-rigid"), '\x3cdiv class\x3d"' + c.join(" ") + '"\x3e\x3cdiv class\x3d"fc-bg"\x3e\x3ctable\x3e' + this.rowHtml("day", a) + '\x3c/table\x3e\x3c/div\x3e\x3cdiv class\x3d"fc-content-skeleton"\x3e\x3ctable\x3e' + (this.numbersVisible ? "\x3cthead\x3e" + this.rowHtml("number", a) + "\x3c/thead\x3e" : "") + "\x3c/table\x3e\x3c/div\x3e\x3c/div\x3e";
  }, dayCellHtml:function(a) {
    return this.bgCellHtml(a);
  }, computeColHeadFormat:function() {
    return 1 < this.rowCnt ? "ddd" : 1 < this.colCnt ? this.view.opt("dayOfMonthFormat") : "dddd";
  }, computeEventTimeFormat:function() {
    return this.view.opt("extraSmallTimeFormat");
  }, computeDisplayEventEnd:function() {
    return 1 == this.colCnt;
  }, rangeUpdated:function() {
    var a, b;
    if (this.updateCellDates(), a = this.cellDates, this.breakOnWeeks) {
      var c = a[0].day();
      for (b = 1; b < a.length && a[b].day() != c; b++) {
      }
      c = Math.ceil(a.length / b);
    } else {
      c = 1, b = a.length;
    }
    this.rowCnt = c;
    this.colCnt = b;
  }, updateCellDates:function() {
    for (var a = this.view, b = this.start.clone(), c = [], d = -1, e = []; b.isBefore(this.end);) {
      a.isHiddenDay(b) ? e.push(d + .5) : (d++, e.push(d), c.push(b.clone())), b.add(1, "days");
    }
    this.cellDates = c;
    this.dayToCellOffsets = e;
  }, computeCellDate:function(a) {
    var b = this.colCnt;
    return this.cellDates[a.row * b + (this.isRTL ? b - a.col - 1 : a.col)].clone();
  }, getRowEl:function(a) {
    return this.rowEls.eq(a);
  }, getColEl:function(a) {
    return this.dayEls.eq(a);
  }, getCellDayEl:function(a) {
    return this.dayEls.eq(a.row * this.colCnt + a.col);
  }, computeRowCoords:function() {
    var a = J.prototype.computeRowCoords.call(this);
    return a[a.length - 1].bottom += this.bottomCoordPadding, a;
  }, rangeToSegs:function(a) {
    var b, c, d, e, f = this.isRTL, g = this.rowCnt, l = this.colCnt, m = [];
    a = this.view.computeDayRange(a);
    var t = this.dateToCellOffset(a.start);
    a = this.dateToCellOffset(a.end.subtract(1, "days"));
    for (b = 0; g > b; b++) {
      var k = b * l;
      var p = k + l - 1;
      var n = Math.max(k, t);
      p = Math.min(p, a);
      n = Math.ceil(n);
      p = Math.floor(p);
      p >= n && (c = n === t, d = p === a, n -= k, p -= k, e = {row:b, isStart:c, isEnd:d}, f ? (e.leftCol = l - p - 1, e.rightCol = l - n - 1) : (e.leftCol = n, e.rightCol = p), m.push(e));
    }
    return m;
  }, dateToCellOffset:function(a) {
    var b = this.dayToCellOffsets;
    a = a.diff(this.start, "days");
    return 0 > a ? b[0] - 1 : a >= b.length ? b[b.length - 1] + 1 : b[a];
  }, renderDrag:function(a, b) {
    return this.renderHighlight(this.eventRangeToSegs(a)), b && !b.el.closest(this.el).length ? (this.renderRangeHelper(a, b), this.applyDragOpacity(this.helperEls), !0) : void 0;
  }, unrenderDrag:function() {
    this.unrenderHighlight();
    this.unrenderHelper();
  }, renderEventResize:function(a, b) {
    this.renderHighlight(this.eventRangeToSegs(a));
    this.renderRangeHelper(a, b);
  }, unrenderEventResize:function() {
    this.unrenderHighlight();
    this.unrenderHelper();
  }, renderHelper:function(a, b) {
    var c = [];
    a = this.eventsToSegs([a]);
    a = this.renderFgSegEls(a);
    var d = this.renderSegRows(a);
    this.rowEls.each(function(a, f) {
      var e = g(f), l = g('\x3cdiv class\x3d"fc-helper-skeleton"\x3e\x3ctable/\x3e\x3c/div\x3e');
      f = b && b.row === a ? b.el.position().top : e.find(".fc-content-skeleton tbody").position().top;
      l.css("top", f).find("table").append(d[a].tbodyEl);
      e.append(l);
      c.push(l[0]);
    });
    this.helperEls = g(c);
  }, unrenderHelper:function() {
    this.helperEls && (this.helperEls.remove(), this.helperEls = null);
  }, fillSegTag:"td", renderFill:function(a, b, c) {
    var d, e = [];
    b = this.renderFillSegEls(a, b);
    for (d = 0; d < b.length; d++) {
      var f = b[d];
      var h = this.renderFillRow(a, f, c);
      this.rowEls.eq(f.row).append(h);
      e.push(h[0]);
    }
    return this.elsByFill[a] = g(e), b;
  }, renderFillRow:function(a, b, c) {
    var d, e, f = this.colCnt, h = b.leftCol, l = b.rightCol + 1;
    return c = c || a.toLowerCase(), d = g('\x3cdiv class\x3d"fc-' + c + '-skeleton"\x3e\x3ctable\x3e\x3ctr/\x3e\x3c/table\x3e\x3c/div\x3e'), e = d.find("tr"), 0 < h && e.append('\x3ctd colspan\x3d"' + h + '"/\x3e'), e.append(b.el.attr("colspan", l - h)), f > l && e.append('\x3ctd colspan\x3d"' + (f - l) + '"/\x3e'), this.bookendCells(e, a), d;
  }});
  ea.mixin({rowStructs:null, unrenderEvents:function() {
    this.removeSegPopover();
    J.prototype.unrenderEvents.apply(this, arguments);
  }, getEventSegs:function() {
    return J.prototype.getEventSegs.call(this).concat(this.popoverSegs || []);
  }, renderBgSegs:function(a) {
    a = g.grep(a, function(a) {
      return a.event.allDay;
    });
    return J.prototype.renderBgSegs.call(this, a);
  }, renderFgSegs:function(a) {
    var b;
    return a = this.renderFgSegEls(a), b = this.rowStructs = this.renderSegRows(a), this.rowEls.each(function(a, d) {
      g(d).find(".fc-content-skeleton \x3e table").append(b[a].tbodyEl);
    }), a;
  }, unrenderFgSegs:function() {
    for (var a, b = this.rowStructs || []; a = b.pop();) {
      a.tbodyEl.remove();
    }
    this.rowStructs = null;
  }, renderSegRows:function(a) {
    var b, c = [];
    a = this.groupSegRows(a);
    for (b = 0; b < a.length; b++) {
      c.push(this.renderSegRow(b, a[b]));
    }
    return c;
  }, fgSegHtml:function(a, b) {
    var c, d, e = this.view, f = a.event, g = e.isEventDraggable(f), l = !b && f.allDay && a.isStart && e.isEventResizableFromStart(f);
    b = !b && f.allDay && a.isEnd && e.isEventResizableFromEnd(f);
    g = this.getSegClasses(a, g, l || b);
    e = Z(this.getEventSkinCss(f));
    var m = "";
    return g.unshift("fc-day-grid-event", "fc-h-event"), a.isStart && (c = this.getEventTimeText(f), c && (m = '\x3cspan class\x3d"fc-time"\x3e' + w(c) + "\x3c/span\x3e")), d = '\x3cspan class\x3d"fc-title"\x3e' + (w(f.title || "") || "\x26nbsp;") + "\x3c/span\x3e", '\x3ca class\x3d"' + g.join(" ") + '"' + (f.url ? ' href\x3d"' + w(f.url) + '"' : "") + (e ? ' style\x3d"' + e + '"' : "") + '\x3e\x3cdiv class\x3d"fc-content"\x3e' + (this.isRTL ? d + " " + m : m + " " + d) + "\x3c/div\x3e" + (l ? '\x3cdiv class\x3d"fc-resizer fc-start-resizer" /\x3e' : 
    "") + (b ? '\x3cdiv class\x3d"fc-resizer fc-end-resizer" /\x3e' : "") + "\x3c/a\x3e";
  }, renderSegRow:function(a, b) {
    function c(a) {
      for (; a > f;) {
        (r = (v[d - 1] || [])[f]) ? r.attr("rowspan", parseInt(r.attr("rowspan") || 1, 10) + 1) : (r = g("\x3ctd/\x3e"), h.append(r)), q[d][f] = r, v[d][f] = r, f++;
      }
    }
    var d, e, f, h, l, m = this.colCnt, t = this.buildSegLevels(b), k = Math.max(1, t.length), p = g("\x3ctbody/\x3e"), n = [], q = [], v = [];
    for (d = 0; k > d; d++) {
      if (e = t[d], f = 0, h = g("\x3ctr/\x3e"), n.push([]), q.push([]), v.push([]), e) {
        for (l = 0; l < e.length; l++) {
          var z = e[l];
          c(z.leftCol);
          var r = g('\x3ctd class\x3d"fc-event-container"/\x3e').append(z.el);
          for (z.leftCol != z.rightCol ? r.attr("colspan", z.rightCol - z.leftCol + 1) : v[d][f] = r; f <= z.rightCol;) {
            q[d][f] = r, n[d][f] = z, f++;
          }
          h.append(r);
        }
      }
      c(m);
      this.bookendCells(h, "eventSkeleton");
      p.append(h);
    }
    return {row:a, tbodyEl:p, cellMatrix:q, segMatrix:n, segLevels:t, segs:b};
  }, buildSegLevels:function(a) {
    var b, c, d = [];
    this.sortSegs(a);
    for (b = 0; b < a.length; b++) {
      var e = a[b];
      for (c = 0; c < d.length && ob(e, d[c]); c++) {
      }
      e.level = c;
      (d[c] || (d[c] = [])).push(e);
    }
    for (c = 0; c < d.length; c++) {
      d[c].sort(pb);
    }
    return d;
  }, groupSegRows:function(a) {
    var b, c = [];
    for (b = 0; b < this.rowCnt; b++) {
      c.push([]);
    }
    for (b = 0; b < a.length; b++) {
      c[a[b].row].push(a[b]);
    }
    return c;
  }});
  ea.mixin({segPopover:null, popoverSegs:null, removeSegPopover:function() {
    this.segPopover && this.segPopover.hide();
  }, limitRows:function(a) {
    var b, c = this.rowStructs || [];
    for (b = 0; b < c.length; b++) {
      this.unlimitRow(b);
      var d = a ? "number" == typeof a ? a : this.computeRowLevelLimit(b) : !1;
      !1 !== d && this.limitRow(b, d);
    }
  }, computeRowLevelLimit:function(a) {
    function b(a, b) {
      d = Math.max(d, g(b).outerHeight());
    }
    var c, d, e = this.rowEls.eq(a).height(), f = this.rowStructs[a].tbodyEl.children();
    for (a = 0; a < f.length; a++) {
      if (c = f.eq(a).removeClass("fc-limited"), d = 0, c.find("\x3e td \x3e :first-child").each(b), c.position().top + d > e) {
        return a;
      }
    }
    return !1;
  }, limitRow:function(a, b) {
    function c(c) {
      for (; c > n;) {
        z = h.getCell(a, n), r = h.getCellSegs(z, b), r.length && (w = p[b - 1][n], y = h.renderMoreLink(z, r), G = g("\x3cdiv/\x3e").append(y), w.append(G), m.push(G[0])), n++;
      }
    }
    var d, e, f, h = this, l = this.rowStructs[a], m = [], n = 0;
    if (b && b < l.segLevels.length) {
      var k = l.segLevels[b - 1];
      var p = l.cellMatrix;
      var q = l.tbodyEl.children().slice(b).addClass("fc-limited").get();
      for (d = 0; d < k.length; d++) {
        var v = k[d];
        c(v.leftCol);
        var x = [];
        for (e = 0; n <= v.rightCol;) {
          var z = this.getCell(a, n);
          var r = this.getCellSegs(z, b);
          x.push(r);
          e += r.length;
          n++;
        }
        if (e) {
          var w = p[b - 1][v.leftCol];
          e = w.attr("rowspan") || 1;
          var A = [];
          for (f = 0; f < x.length; f++) {
            var u = g('\x3ctd class\x3d"fc-more-cell"/\x3e').attr("rowspan", e);
            r = x[f];
            z = this.getCell(a, v.leftCol + f);
            var y = this.renderMoreLink(z, [v].concat(r));
            var G = g("\x3cdiv/\x3e").append(y);
            u.append(G);
            A.push(u[0]);
            m.push(u[0]);
          }
          w.addClass("fc-limited").after(g(A));
          q.push(w[0]);
        }
      }
      c(this.colCnt);
      l.moreEls = g(m);
      l.limitedEls = g(q);
    }
  }, unlimitRow:function(a) {
    a = this.rowStructs[a];
    a.moreEls && (a.moreEls.remove(), a.moreEls = null);
    a.limitedEls && (a.limitedEls.removeClass("fc-limited"), a.limitedEls = null);
  }, renderMoreLink:function(a, b) {
    var c = this, d = this.view;
    return g('\x3ca class\x3d"fc-more"/\x3e').text(this.getMoreLinkText(b.length)).on("click", function(e) {
      var f = d.opt("eventLimitClick"), h = a.start, l = g(this), m = c.getCellDayEl(a), n = c.getCellSegs(a);
      n = c.resliceDaySegs(n, h);
      var k = c.resliceDaySegs(b, h);
      "function" == typeof f && (f = d.trigger("eventLimitClick", null, {date:h, dayEl:m, moreEl:l, segs:n, hiddenSegs:k}, e));
      "popover" === f ? c.showSegPopover(a, l, n) : "string" == typeof f && d.calendar.zoomTo(h, f);
    });
  }, showSegPopover:function(a, b, c) {
    var d = this, e = this.view;
    b = b.parent();
    var f = 1 == this.rowCnt ? e.el : this.rowEls.eq(a.row);
    a = {className:"fc-more-popover", content:this.renderSegPopoverContent(a, c), parentEl:this.el, top:f.offset().top, autoHide:!0, viewportConstrain:e.opt("popoverViewportConstrain"), hide:function() {
      d.segPopover.removeElement();
      d.segPopover = null;
      d.popoverSegs = null;
    }};
    this.isRTL ? a.right = b.offset().left + b.outerWidth() + 1 : a.left = b.offset().left - 1;
    this.segPopover = new yb(a);
    this.segPopover.show();
  }, renderSegPopoverContent:function(a, b) {
    var c = this.view;
    var d = c.opt("theme"), e = a.start.format(c.opt("dayPopoverFormat"));
    d = g('\x3cdiv class\x3d"fc-header ' + c.widgetHeaderClass + '"\x3e\x3cspan class\x3d"fc-close ' + (d ? "ui-icon ui-icon-closethick" : "fc-icon fc-icon-x") + '"\x3e\x3c/span\x3e\x3cspan class\x3d"fc-title"\x3e' + w(e) + '\x3c/span\x3e\x3cdiv class\x3d"fc-clear"/\x3e\x3c/div\x3e\x3cdiv class\x3d"fc-body ' + c.widgetContentClass + '"\x3e\x3cdiv class\x3d"fc-event-container"\x3e\x3c/div\x3e\x3c/div\x3e');
    e = d.find(".fc-event-container");
    this.popoverSegs = b = this.renderFgSegEls(b, !0);
    for (c = 0; c < b.length; c++) {
      b[c].cell = a, e.append(b[c].el);
    }
    return d;
  }, resliceDaySegs:function(a, b) {
    var c = g.map(a, function(a) {
      return a.event;
    });
    b = b.clone().stripTime();
    var d = b.clone().add(1, "days"), e = {start:b, end:d};
    return a = this.eventsToSegs(c, function(a) {
      return (a = ia(a, e)) ? [a] : [];
    }), this.sortSegs(a), a;
  }, getMoreLinkText:function(a) {
    var b = this.view.opt("eventLimitText");
    return "function" == typeof b ? b(a) : "+" + a + " " + b;
  }, getCellSegs:function(a, b) {
    for (var c = this.rowStructs[a.row].segMatrix, d = b || 0, e = []; d < c.length;) {
      (b = c[d][a.col]) && e.push(b), d++;
    }
    return e;
  }});
  var db = J.extend({slotDuration:null, snapDuration:null, minTime:null, maxTime:null, colDates:null, labelFormat:null, labelInterval:null, dayEls:null, slatEls:null, slatTops:null, helperEl:null, businessHourSegs:null, constructor:function() {
    J.apply(this, arguments);
    this.processOptions();
  }, renderDates:function() {
    this.el.html(this.renderHtml());
    this.dayEls = this.el.find(".fc-day");
    this.slatEls = this.el.find(".fc-slats tr");
  }, renderBusinessHours:function() {
    var a = this.view.calendar.getBusinessHoursEvents();
    this.businessHourSegs = this.renderFill("businessHours", this.eventsToSegs(a), "bgevent");
  }, renderHtml:function() {
    return '\x3cdiv class\x3d"fc-bg"\x3e\x3ctable\x3e' + this.rowHtml("slotBg") + '\x3c/table\x3e\x3c/div\x3e\x3cdiv class\x3d"fc-slats"\x3e\x3ctable\x3e' + this.slatRowHtml() + "\x3c/table\x3e\x3c/div\x3e";
  }, slotBgCellHtml:function(a) {
    return this.bgCellHtml(a);
  }, slatRowHtml:function() {
    for (var a, b, c = this.view, d = this.isRTL, e = "", f = n.duration(+this.minTime); f < this.maxTime;) {
      a = this.start.clone().time(f), b = K(la(f, this.labelInterval)), a = '\x3ctd class\x3d"fc-axis fc-time ' + c.widgetContentClass + '" ' + c.axisStyleAttr() + "\x3e" + (b ? "\x3cspan\x3e" + w(a.format(this.labelFormat)) + "\x3c/span\x3e" : "") + "\x3c/td\x3e", e += "\x3ctr " + (b ? "" : 'class\x3d"fc-minor"') + "\x3e" + (d ? "" : a) + '\x3ctd class\x3d"' + c.widgetContentClass + '"/\x3e' + (d ? a : "") + "\x3c/tr\x3e", f.add(this.slotDuration);
    }
    return e;
  }, processOptions:function() {
    var a = this.view, b = a.opt("slotDuration");
    var c = a.opt("snapDuration");
    b = n.duration(b);
    c = c ? n.duration(c) : b;
    this.slotDuration = b;
    this.cellDuration = this.snapDuration = c;
    this.minTime = n.duration(a.opt("minTime"));
    this.maxTime = n.duration(a.opt("maxTime"));
    c = a.opt("slotLabelFormat");
    g.isArray(c) && (c = c[c.length - 1]);
    this.labelFormat = c || a.opt("axisFormat") || a.opt("smallTimeFormat");
    this.labelInterval = (c = a.opt("slotLabelInterval")) ? n.duration(c) : this.computeLabelInterval(b);
  }, computeLabelInterval:function(a) {
    var b, c, d;
    for (b = cb.length - 1; 0 <= b; b--) {
      if (c = n.duration(cb[b]), d = la(c, a), K(d) && 1 < d) {
        return c;
      }
    }
    return n.duration(a);
  }, computeColHeadFormat:function() {
    return 1 < this.colCnt ? this.view.opt("dayOfMonthFormat") : "dddd";
  }, computeEventTimeFormat:function() {
    return this.view.opt("noMeridiemTimeFormat");
  }, computeDisplayEventEnd:function() {
    return !0;
  }, rangeUpdated:function() {
    var a, b = this.view, c = [];
    for (a = this.start.clone(); a.isBefore(this.end);) {
      c.push(a.clone()), a.add(1, "day"), a = b.skipHiddenDays(a);
    }
    this.isRTL && c.reverse();
    this.colDates = c;
    this.colCnt = c.length;
    this.rowCnt = Math.ceil((this.maxTime - this.minTime) / this.snapDuration);
  }, computeCellDate:function(a) {
    var b = this.colDates[a.col];
    a = this.computeSnapTime(a.row);
    return b = this.view.calendar.rezoneDate(b), b.time(a), b;
  }, getColEl:function(a) {
    return this.dayEls.eq(a);
  }, computeSnapTime:function(a) {
    return n.duration(this.minTime + this.snapDuration * a);
  }, rangeToSegs:function(a) {
    var b, c = this.colCnt, d = [];
    a = {start:a.start.clone().stripZone(), end:a.end.clone().stripZone()};
    for (b = 0; c > b; b++) {
      var e = this.colDates[b];
      e = {start:e.clone().time(this.minTime), end:e.clone().time(this.maxTime)};
      (e = ia(a, e)) && (e.col = b, d.push(e));
    }
    return d;
  }, updateSize:function(a) {
    this.computeSlatTops();
    a && this.updateSegVerticals();
  }, computeRowCoords:function() {
    var a, b = this.el.offset().top, c = [];
    for (a = 0; a < this.rowCnt; a++) {
      var d = {top:b + this.computeTimeTop(this.computeSnapTime(a))};
      0 < a && (c[a - 1].bottom = d.top);
      c.push(d);
    }
    return d.bottom = d.top + this.computeTimeTop(this.computeSnapTime(a)), c;
  }, computeDateTop:function(a, b) {
    return this.computeTimeTop(n.duration(a.clone().stripZone() - b.clone().stripTime()));
  }, computeTimeTop:function(a) {
    var b, c, d, e;
    a = (a - this.minTime) / this.slotDuration;
    return a = Math.max(0, a), a = Math.min(this.slatEls.length, a), b = Math.floor(a), c = a - b, d = this.slatTops[b], c ? (e = this.slatTops[b + 1], d + (e - d) * c) : d;
  }, computeSlatTops:function() {
    var a, b = [];
    this.slatEls.each(function(c, d) {
      a = g(d).position().top;
      b.push(a);
    });
    b.push(a + this.slatEls.last().outerHeight());
    this.slatTops = b;
  }, renderDrag:function(a, b) {
    return b ? (this.renderRangeHelper(a, b), this.applyDragOpacity(this.helperEl), !0) : void this.renderHighlight(this.eventRangeToSegs(a));
  }, unrenderDrag:function() {
    this.unrenderHelper();
    this.unrenderHighlight();
  }, renderEventResize:function(a, b) {
    this.renderRangeHelper(a, b);
  }, unrenderEventResize:function() {
    this.unrenderHelper();
  }, renderHelper:function(a, b) {
    var c, d, e = this.eventsToSegs([a]);
    e = this.renderFgSegEls(e);
    a = this.renderSegTable(e);
    for (c = 0; c < e.length; c++) {
      var f = e[c];
      b && b.col === f.col && (d = b.el, f.el.css({left:d.css("left"), right:d.css("right"), "margin-left":d.css("margin-left"), "margin-right":d.css("margin-right")}));
    }
    this.helperEl = g('\x3cdiv class\x3d"fc-helper-skeleton"/\x3e').append(a).appendTo(this.el);
  }, unrenderHelper:function() {
    this.helperEl && (this.helperEl.remove(), this.helperEl = null);
  }, renderSelection:function(a) {
    this.view.opt("selectHelper") ? this.renderRangeHelper(a) : this.renderHighlight(this.selectionRangeToSegs(a));
  }, unrenderSelection:function() {
    this.unrenderHelper();
    this.unrenderHighlight();
  }, renderFill:function(a, b, c) {
    var d, e, f, h;
    if (b.length) {
      b = this.renderFillSegEls(a, b);
      var l = this.groupSegCols(b);
      c = c || a.toLowerCase();
      var m = g('\x3cdiv class\x3d"fc-' + c + '-skeleton"\x3e\x3ctable\x3e\x3ctr/\x3e\x3c/table\x3e\x3c/div\x3e');
      var n = m.find("tr");
      for (d = 0; d < l.length; d++) {
        if (e = l[d], f = g("\x3ctd/\x3e").appendTo(n), e.length) {
          f = g('\x3cdiv class\x3d"fc-' + c + '-container"/\x3e').appendTo(f);
          var k = this.colDates[d];
          for (h = 0; h < e.length; h++) {
            var p = e[h];
            f.append(p.el.css({top:this.computeDateTop(p.start, k), bottom:-this.computeDateTop(p.end, k)}));
          }
        }
      }
      this.bookendCells(n, a);
      this.el.append(m);
      this.elsByFill[a] = m;
    }
    return b;
  }});
  db.mixin({eventSkeletonEl:null, renderFgSegs:function(a) {
    return a = this.renderFgSegEls(a), this.el.append(this.eventSkeletonEl = g('\x3cdiv class\x3d"fc-content-skeleton"/\x3e').append(this.renderSegTable(a))), a;
  }, unrenderFgSegs:function(a) {
    this.eventSkeletonEl && (this.eventSkeletonEl.remove(), this.eventSkeletonEl = null);
  }, renderSegTable:function(a) {
    var b, c = g("\x3ctable\x3e\x3ctr/\x3e\x3c/table\x3e"), d = c.find("tr");
    var e = this.groupSegCols(a);
    this.computeSegVerticals(a);
    for (b = 0; b < e.length; b++) {
      var f = e[b];
      this.placeSlotSegs(f);
      var h = g('\x3cdiv class\x3d"fc-event-container"/\x3e');
      for (a = 0; a < f.length; a++) {
        var l = f[a];
        l.el.css(this.generateSegPositionCss(l));
        30 > l.bottom - l.top && l.el.addClass("fc-short");
        h.append(l.el);
      }
      d.append(g("\x3ctd/\x3e").append(h));
    }
    return this.bookendCells(d, "eventSkeleton"), c;
  }, placeSlotSegs:function(a) {
    this.sortSegs(a);
    var b, c;
    var d = [];
    for (b = 0; b < a.length; b++) {
      var e = a[b];
      for (c = 0; c < d.length && Wa(e, d[c]).length; c++) {
      }
      e.level = c;
      (d[c] || (d[c] = [])).push(e);
    }
    var f;
    for (a = 0; a < d.length; a++) {
      for (b = d[a], e = 0; e < b.length; e++) {
        for (c = b[e], c.forwardSegs = [], f = a + 1; f < d.length; f++) {
          Wa(c, d[f], c.forwardSegs);
        }
      }
    }
    if (d = d[0]) {
      for (a = 0; a < d.length; a++) {
        Va(d[a]);
      }
      for (a = 0; a < d.length; a++) {
        this.computeSlotSegCoords(d[a], 0, 0);
      }
    }
  }, computeSlotSegCoords:function(a, b, c) {
    var d = a.forwardSegs;
    if (void 0 === a.forwardCoord) {
      for (d.length ? (this.sortForwardSlotSegs(d), this.computeSlotSegCoords(d[0], b + 1, c), a.forwardCoord = d[0].backwardCoord) : a.forwardCoord = 1, a.backwardCoord = a.forwardCoord - (a.forwardCoord - c) / (b + 1), b = 0; b < d.length; b++) {
        this.computeSlotSegCoords(d[b], 0, a.forwardCoord);
      }
    }
  }, updateSegVerticals:function() {
    var a, b = (this.segs || []).concat(this.businessHourSegs || []);
    this.computeSegVerticals(b);
    for (a = 0; a < b.length; a++) {
      b[a].el.css(this.generateSegVerticalCss(b[a]));
    }
  }, computeSegVerticals:function(a) {
    var b;
    for (b = 0; b < a.length; b++) {
      var c = a[b];
      c.top = this.computeDateTop(c.start, c.start);
      c.bottom = this.computeDateTop(c.end, c.start);
    }
  }, fgSegHtml:function(a, b) {
    var c, d, e, f = this.view, g = a.event, l = f.isEventDraggable(g), m = !b && a.isStart && f.isEventResizableFromStart(g);
    b = !b && a.isEnd && f.isEventResizableFromEnd(g);
    l = this.getSegClasses(a, l, m || b);
    m = Z(this.getEventSkinCss(g));
    return l.unshift("fc-time-grid-event", "fc-v-event"), f.isMultiDayEvent(g) ? (a.isStart || a.isEnd) && (c = this.getEventTimeText(a), d = this.getEventTimeText(a, "LT"), e = this.getEventTimeText(a, null, !1)) : (c = this.getEventTimeText(g), d = this.getEventTimeText(g, "LT"), e = this.getEventTimeText(g, null, !1)), '\x3ca class\x3d"' + l.join(" ") + '"' + (g.url ? ' href\x3d"' + w(g.url) + '"' : "") + (m ? ' style\x3d"' + m + '"' : "") + '\x3e\x3cdiv class\x3d"fc-content"\x3e' + (c ? '\x3cdiv class\x3d"fc-time" data-start\x3d"' + 
    w(e) + '" data-full\x3d"' + w(d) + '"\x3e\x3cspan\x3e' + w(c) + "\x3c/span\x3e\x3c/div\x3e" : "") + (g.title ? '\x3cdiv class\x3d"fc-title"\x3e' + w(g.title) + "\x3c/div\x3e" : "") + '\x3c/div\x3e\x3cdiv class\x3d"fc-bg"/\x3e' + (b ? '\x3cdiv class\x3d"fc-resizer fc-end-resizer" /\x3e' : "") + "\x3c/a\x3e";
  }, generateSegPositionCss:function(a) {
    var b, c, d = this.view.opt("slotEventOverlap"), e = a.backwardCoord, f = a.forwardCoord, g = this.generateSegVerticalCss(a);
    return d && (f = Math.min(1, e + 2 * (f - e))), this.isRTL ? (b = 1 - f, c = e) : (b = e, c = 1 - f), g.zIndex = a.level + 1, g.left = 100 * b + "%", g.right = 100 * c + "%", d && a.forwardPressure && (g[this.isRTL ? "marginLeft" : "marginRight"] = 20), g;
  }, generateSegVerticalCss:function(a) {
    return {top:a.top, bottom:-a.bottom};
  }, groupSegCols:function(a) {
    var b, c = [];
    for (b = 0; b < this.colCnt; b++) {
      c.push([]);
    }
    for (b = 0; b < a.length; b++) {
      c[a[b].col].push(a[b]);
    }
    return c;
  }, sortForwardSlotSegs:function(a) {
    a.sort(F(this, "compareForwardSlotSegs"));
  }, compareForwardSlotSegs:function(a, b) {
    return b.forwardPressure - a.forwardPressure || (a.backwardCoord || 0) - (b.backwardCoord || 0) || this.compareSegs(a, b);
  }});
  var T = q.View = y.extend({type:null, name:null, title:null, calendar:null, options:null, coordMap:null, el:null, displaying:null, isSkeletonRendered:!1, isEventsRendered:!1, start:null, end:null, intervalStart:null, intervalEnd:null, intervalDuration:null, intervalUnit:null, isRTL:!1, isSelected:!1, eventOrderSpecs:null, scrollerEl:null, scrollTop:null, widgetHeaderClass:null, widgetContentClass:null, highlightStateClass:null, nextDayThreshold:null, isHiddenDayHash:null, documentMousedownProxy:null, 
  constructor:function(a, b, c, d) {
    this.calendar = a;
    this.type = this.name = b;
    this.options = c;
    this.intervalDuration = d || n.duration(1, "day");
    this.nextDayThreshold = n.duration(this.opt("nextDayThreshold"));
    this.initThemingProps();
    this.initHiddenDays();
    this.isRTL = this.opt("isRTL");
    this.eventOrderSpecs = Ca(this.opt("eventOrder"));
    this.documentMousedownProxy = F(this, "documentMousedown");
    this.initialize();
  }, initialize:function() {
  }, opt:function(a) {
    return this.options[a];
  }, trigger:function(a, b) {
    var c = this.calendar;
    return c.trigger.apply(c, [a, b || this].concat(Array.prototype.slice.call(arguments, 2), [this]));
  }, setDate:function(a) {
    this.setRange(this.computeRange(a));
  }, setRange:function(a) {
    g.extend(this, a);
    this.updateTitle();
  }, computeRange:function(a) {
    var b, c, d = ja(this.intervalDuration);
    a = a.clone().startOf(d);
    var e = a.clone().add(this.intervalDuration);
    return /year|month|week|day/.test(d) ? (a.stripTime(), e.stripTime()) : (a.hasTime() || (a = this.calendar.rezoneDate(a)), e.hasTime() || (e = this.calendar.rezoneDate(e))), b = a.clone(), b = this.skipHiddenDays(b), c = e.clone(), c = this.skipHiddenDays(c, -1, !0), {intervalUnit:d, intervalStart:a, intervalEnd:e, start:b, end:c};
  }, computePrevDate:function(a) {
    return this.massageCurrentDate(a.clone().startOf(this.intervalUnit).subtract(this.intervalDuration), -1);
  }, computeNextDate:function(a) {
    return this.massageCurrentDate(a.clone().startOf(this.intervalUnit).add(this.intervalDuration));
  }, massageCurrentDate:function(a, b) {
    return 1 >= this.intervalDuration.as("days") && this.isHiddenDay(a) && (a = this.skipHiddenDays(a, b), a.startOf("day")), a;
  }, updateTitle:function() {
    this.title = this.computeTitle();
  }, computeTitle:function() {
    return this.formatRange({start:this.intervalStart, end:this.intervalEnd}, this.opt("titleFormat") || this.computeTitleFormat(), this.opt("titleRangeSeparator"));
  }, computeTitleFormat:function() {
    return "year" == this.intervalUnit ? "YYYY" : "month" == this.intervalUnit ? this.opt("monthYearFormat") : 1 < this.intervalDuration.as("days") ? "ll" : "LL";
  }, formatRange:function(a, b, c) {
    var d = a.end;
    return d.hasTime() || (d = d.clone().subtract(1)), Pa(a.start, d, b, c, this.opt("isRTL"));
  }, setElement:function(a) {
    this.el = a;
    this.bindGlobalHandlers();
  }, removeElement:function() {
    this.clear();
    this.isSkeletonRendered && (this.unrenderSkeleton(), this.isSkeletonRendered = !1);
    this.unbindGlobalHandlers();
    this.el.remove();
  }, display:function(a) {
    var b = this, c = null;
    return this.displaying && (c = this.queryScroll()), this.clear().then(function() {
      return b.displaying = g.when(b.displayView(a)).then(function() {
        b.forceScroll(b.computeInitialScroll(c));
        b.triggerRender();
      });
    });
  }, clear:function() {
    var a = this, b = this.displaying;
    return b ? b.then(function() {
      return a.displaying = null, a.clearEvents(), a.clearView();
    }) : g.when();
  }, displayView:function(a) {
    this.isSkeletonRendered || (this.renderSkeleton(), this.isSkeletonRendered = !0);
    this.setDate(a);
    this.render && this.render();
    this.renderDates();
    this.updateSize();
    this.renderBusinessHours();
  }, clearView:function() {
    this.unselect();
    this.triggerUnrender();
    this.unrenderBusinessHours();
    this.unrenderDates();
    this.destroy && this.destroy();
  }, renderSkeleton:function() {
  }, unrenderSkeleton:function() {
  }, renderDates:function() {
  }, unrenderDates:function() {
  }, renderBusinessHours:function() {
  }, unrenderBusinessHours:function() {
  }, triggerRender:function() {
    this.trigger("viewRender", this, this, this.el);
  }, triggerUnrender:function() {
    this.trigger("viewDestroy", this, this, this.el);
  }, bindGlobalHandlers:function() {
    g(document).on("mousedown", this.documentMousedownProxy);
  }, unbindGlobalHandlers:function() {
    g(document).off("mousedown", this.documentMousedownProxy);
  }, initThemingProps:function() {
    var a = this.opt("theme") ? "ui" : "fc";
    this.widgetHeaderClass = a + "-widget-header";
    this.widgetContentClass = a + "-widget-content";
    this.highlightStateClass = a + "-state-highlight";
  }, updateSize:function(a) {
    var b;
    a && (b = this.queryScroll());
    this.updateHeight(a);
    this.updateWidth(a);
    a && this.setScroll(b);
  }, updateWidth:function(a) {
  }, updateHeight:function(a) {
    a = this.calendar;
    this.setHeight(a.getSuggestedViewHeight(), a.isHeightAuto());
  }, setHeight:function(a, b) {
  }, computeScrollerHeight:function(a) {
    var b, c, d = this.scrollerEl;
    return b = this.el.add(d), b.css({position:"relative", left:-1}), c = this.el.outerHeight() - d.height(), b.css({position:"", left:""}), a - c;
  }, computeInitialScroll:function(a) {
    return 0;
  }, queryScroll:function() {
    return this.scrollerEl ? this.scrollerEl.scrollTop() : void 0;
  }, setScroll:function(a) {
    return this.scrollerEl ? this.scrollerEl.scrollTop(a) : void 0;
  }, forceScroll:function(a) {
    var b = this;
    this.setScroll(a);
    setTimeout(function() {
      b.setScroll(a);
    }, 0);
  }, displayEvents:function(a) {
    var b = this.queryScroll();
    this.clearEvents();
    this.renderEvents(a);
    this.isEventsRendered = !0;
    this.setScroll(b);
    this.triggerEventRender();
  }, clearEvents:function() {
    this.isEventsRendered && (this.triggerEventUnrender(), this.destroyEvents && this.destroyEvents(), this.unrenderEvents(), this.isEventsRendered = !1);
  }, renderEvents:function(a) {
  }, unrenderEvents:function() {
  }, triggerEventRender:function() {
    this.renderedEventSegEach(function(a) {
      this.trigger("eventAfterRender", a.event, a.event, a.el);
    });
    this.trigger("eventAfterAllRender");
  }, triggerEventUnrender:function() {
    this.renderedEventSegEach(function(a) {
      this.trigger("eventDestroy", a.event, a.event, a.el);
    });
  }, resolveEventEl:function(a, b) {
    a = this.trigger("eventRender", a, a, b);
    return !1 === a ? b = null : a && !0 !== a && (b = g(a)), b;
  }, showEvent:function(a) {
    this.renderedEventSegEach(function(a) {
      a.el.css("visibility", "");
    }, a);
  }, hideEvent:function(a) {
    this.renderedEventSegEach(function(a) {
      a.el.css("visibility", "hidden");
    }, a);
  }, renderedEventSegEach:function(a, b) {
    var c, d = this.getEventSegs();
    for (c = 0; c < d.length; c++) {
      b && d[c].event._id !== b._id || d[c].el && a.call(this, d[c]);
    }
  }, getEventSegs:function() {
    return [];
  }, isEventDraggable:function(a) {
    var b = a.source || {};
    return E(a.startEditable, b.startEditable, this.opt("eventStartEditable"), a.editable, b.editable, this.opt("editable"));
  }, reportEventDrop:function(a, b, c, d, e) {
    var f = this.calendar, g = f.mutateEvent(a, b, c);
    this.triggerEventDrop(a, g.dateDelta, function() {
      g.undo();
      f.reportEventChange();
    }, d, e);
    f.reportEventChange();
  }, triggerEventDrop:function(a, b, c, d, e) {
    this.trigger("eventDrop", d[0], a, b, c, e, {});
  }, reportExternalDrop:function(a, b, c, d, e) {
    var f, h, l = a.eventProps;
    l && (f = g.extend({}, l, b), h = this.calendar.renderEvent(f, a.stick)[0]);
    this.triggerExternalDrop(h, b, c, d, e);
  }, triggerExternalDrop:function(a, b, c, d, e) {
    this.trigger("drop", c[0], b.start, d, e);
    a && this.trigger("eventReceive", null, a);
  }, renderDrag:function(a, b) {
  }, unrenderDrag:function() {
  }, isEventResizableFromStart:function(a) {
    return this.opt("eventResizableFromStart") && this.isEventResizable(a);
  }, isEventResizableFromEnd:function(a) {
    return this.isEventResizable(a);
  }, isEventResizable:function(a) {
    var b = a.source || {};
    return E(a.durationEditable, b.durationEditable, this.opt("eventDurationEditable"), a.editable, b.editable, this.opt("editable"));
  }, reportEventResize:function(a, b, c, d, e) {
    var f = this.calendar, g = f.mutateEvent(a, b, c);
    this.triggerEventResize(a, g.durationDelta, function() {
      g.undo();
      f.reportEventChange();
    }, d, e);
    f.reportEventChange();
  }, triggerEventResize:function(a, b, c, d, e) {
    this.trigger("eventResize", d[0], a, b, c, e, {});
  }, select:function(a, b) {
    this.unselect(b);
    this.renderSelection(a);
    this.reportSelection(a, b);
  }, renderSelection:function(a) {
  }, reportSelection:function(a, b) {
    this.isSelected = !0;
    this.triggerSelect(a, b);
  }, triggerSelect:function(a, b) {
    this.trigger("select", null, a.start, a.end, b);
  }, unselect:function(a) {
    this.isSelected && (this.isSelected = !1, this.destroySelection && this.destroySelection(), this.unrenderSelection(), this.trigger("unselect", null, a));
  }, unrenderSelection:function() {
  }, documentMousedown:function(a) {
    var b;
    this.isSelected && this.opt("unselectAuto") && 1 == a.which && !a.ctrlKey && (b = this.opt("unselectCancel"), b && g(a.target).closest(b).length || this.unselect(a));
  }, triggerDayClick:function(a, b, c) {
    this.trigger("dayClick", b, a.start, c);
  }, initHiddenDays:function() {
    var a, b = this.opt("hiddenDays") || [], c = [], d = 0;
    !1 === this.opt("weekends") && b.push(0, 6);
    for (a = 0; 7 > a; a++) {
      (c[a] = -1 !== g.inArray(a, b)) || d++;
    }
    if (!d) {
      throw "invalid hiddenDays";
    }
    this.isHiddenDayHash = c;
  }, isHiddenDay:function(a) {
    return n.isMoment(a) && (a = a.day()), this.isHiddenDayHash[a];
  }, skipHiddenDays:function(a, b, c) {
    a = a.clone();
    for (b = b || 1; this.isHiddenDayHash[(a.day() + (c ? b : 0) + 7) % 7];) {
      a.add(b, "days");
    }
    return a;
  }, computeDayRange:function(a) {
    var b, c = a.start.clone().stripTime();
    a = a.end;
    var d = null;
    return a && (d = a.clone().stripTime(), b = +a.time(), b && b >= this.nextDayThreshold && d.add(1, "days")), (!a || c >= d) && (d = c.clone().add(1, "days")), {start:c, end:d};
  }, isMultiDayEvent:function(a) {
    a = this.computeDayRange(a);
    return 1 < a.end.diff(a.start, "days");
  }}), v = q.Calendar = y.extend({dirDefaults:null, langDefaults:null, overrides:null, options:null, viewSpecCache:null, view:null, header:null, loadingLevel:0, constructor:function(a, b) {
    function c() {
      return a.is(":visible");
    }
    function d(a) {
      B++;
      r && a && r.type !== a && (w.deactivateButton(r.type), m(), r.removeElement(), r = k.view = null);
      !r && a && (r = k.view = F[a] || (F[a] = k.instantiateView(a)), r.setElement(g("\x3cdiv class\x3d'fc-view fc-" + a + "-view' /\x3e").appendTo(z)), w.activateButton(a));
      r && (C = r.massageCurrentDate(C), r.displaying && C.isWithin(r.intervalStart, r.intervalEnd) || !c() || (m(), r.display(C), t(), w.updateTitle(r.title), k.getNow().isWithin(r.intervalStart, r.intervalEnd) ? w.disableButton("today") : w.enableButton("today"), !p.lazyFetching || u(r.start, r.end) ? E(r.start, r.end) : l()));
      t();
      B--;
    }
    function e(a) {
      return c() ? (a && f(), B++, r.updateSize(!0), B--, !0) : void 0;
    }
    function f() {
      A = "number" == typeof p.contentHeight ? p.contentHeight : "number" == typeof p.height ? p.height - (x ? x.outerHeight(!0) : 0) : Math.round(z.width() / Math.max(p.aspectRatio, .5));
    }
    function h(a) {
      !B && a.target === window && r.start && e(!0) && r.trigger("windowResize", G);
    }
    function l() {
      c() && (m(), r.displayEvents(H), t());
    }
    function m() {
      z.css({width:"100%", height:z.height(), overflow:"hidden"});
    }
    function t() {
      z.css({width:"", height:"", overflow:""});
    }
    var k = this;
    k.initOptions(b || {});
    var p = this.options;
    k.render = function() {
      z ? c() && (c() && f(), d()) : (a.addClass("fc"), p.isRTL ? a.addClass("fc-rtl") : a.addClass("fc-ltr"), p.theme ? a.addClass("ui-widget") : a.addClass("fc-unthemed"), z = g("\x3cdiv class\x3d'fc-view-container'/\x3e").prependTo(a), w = k.header = new rb(k, p), (x = w.render()) && a.prepend(x), d(p.defaultView), p.handleWindowResize && (y = na(h, p.windowResizeDelay), g(window).resize(y)));
    };
    k.destroy = function() {
      r && r.removeElement();
      w.removeElement();
      z.remove();
      a.removeClass("fc fc-ltr fc-rtl fc-unthemed ui-widget");
      y && g(window).unbind("resize", y);
    };
    k.refetchEvents = function() {
      m();
      r.clearEvents();
      t();
      E(r.start, r.end);
    };
    k.reportEvents = function(a) {
      H = a;
      l();
    };
    k.reportEventChange = function() {
      l();
    };
    k.rerenderEvents = l;
    k.changeView = d;
    k.select = function(a, b) {
      r.select(k.buildSelectRange.apply(k, arguments));
    };
    k.unselect = function() {
      r && r.unselect();
    };
    k.prev = function() {
      C = r.computePrevDate(C);
      d();
    };
    k.next = function() {
      C = r.computeNextDate(C);
      d();
    };
    k.prevYear = function() {
      C.add(-1, "years");
      d();
    };
    k.nextYear = function() {
      C.add(1, "years");
      d();
    };
    k.today = function() {
      C = k.getNow();
      d();
    };
    k.gotoDate = function(a) {
      C = k.moment(a);
      d();
    };
    k.incrementDate = function(a) {
      C.add(n.duration(a));
      d();
    };
    k.zoomTo = function(a, b) {
      b = b || "day";
      b = k.getViewSpec(b) || k.getUnitViewSpec(b);
      C = a;
      d(b ? b.type : null);
    };
    k.getDate = function() {
      return C.clone();
    };
    k.getCalendar = function() {
      return k;
    };
    k.getView = function() {
      return r;
    };
    k.option = function(a, b) {
      return void 0 === b ? p[a] : void(("height" == a || "contentHeight" == a || "aspectRatio" == a) && (p[a] = b, e(!0)));
    };
    k.trigger = function(a, b) {
      var c = Array.prototype.slice.call(arguments, 2);
      return b = b || G, this.triggerWith(a, b, c), p[a] ? p[a].apply(b, c) : void 0;
    };
    var v = X(Ya(p.lang));
    if (p.monthNames && (v._months = p.monthNames), p.monthNamesShort && (v._monthsShort = p.monthNamesShort), p.dayNames && (v._weekdays = p.dayNames), p.dayNamesShort && (v._weekdaysShort = p.dayNamesShort), null != p.firstDay) {
      b = X(v._week), b.dow = p.firstDay, v._week = b;
    }
    v._fullCalendar_weekCalc = function(a) {
      return "function" == typeof a ? a : "local" === a ? a : "iso" === a || "ISO" === a ? "ISO" : void 0;
    }(p.weekNumberCalculation);
    k.defaultAllDayEventDuration = n.duration(p.defaultAllDayEventDuration);
    k.defaultTimedEventDuration = n.duration(p.defaultTimedEventDuration);
    k.moment = function() {
      var a;
      return "local" === p.timezone ? (a = q.moment.apply(null, arguments), a.hasTime() && a.local()) : a = "UTC" === p.timezone ? q.moment.utc.apply(null, arguments) : q.moment.parseZone.apply(null, arguments), "_locale" in a ? a._locale = v : a._lang = v, a;
    };
    k.getIsAmbigTimezone = function() {
      return "local" !== p.timezone && "UTC" !== p.timezone;
    };
    k.rezoneDate = function(a) {
      return k.moment(a.toArray());
    };
    k.getNow = function() {
      var a = p.now;
      return "function" == typeof a && (a = a()), k.moment(a);
    };
    k.getEventEnd = function(a) {
      return a.end ? a.end.clone() : k.getDefaultEventEnd(a.allDay, a.start);
    };
    k.getDefaultEventEnd = function(a, b) {
      b = b.clone();
      return a ? b.stripTime().add(k.defaultAllDayEventDuration) : b.add(k.defaultTimedEventDuration), k.getIsAmbigTimezone() && b.stripZone(), b;
    };
    k.humanizeDuration = function(a) {
      return (a.locale || a.lang).call(a, p.lang).humanize();
    };
    sb.call(k, p);
    var w, x, z, r, A, y, u = k.isFetchNeeded, E = k.fetchEvents, G = a[0], F = {}, B = 0, H = [];
    var C = null != p.defaultDate ? k.moment(p.defaultDate) : k.getNow();
    k.getSuggestedViewHeight = function() {
      void 0 === A && c() && f();
      return A;
    };
    k.isHeightAuto = function() {
      return "auto" === p.contentHeight || "auto" === p.height;
    };
    k.initialize();
  }, initialize:function() {
  }, initOptions:function(a) {
    var b;
    a = eb(a);
    var c = a.lang;
    (b = Q[c]) || (c = v.defaults.lang, b = Q[c] || {});
    this.dirDefaults = c = E(a.isRTL, b.isRTL, v.defaults.isRTL) ? v.rtlDefaults : {};
    this.langDefaults = b;
    this.overrides = a;
    this.options = P([v.defaults, c, b, a], R);
    Xa(this.options);
    this.viewSpecCache = {};
  }, getViewSpec:function(a) {
    var b = this.viewSpecCache;
    return b[a] || (b[a] = this.buildViewSpec(a));
  }, getUnitViewSpec:function(a) {
    var b, c;
    if (-1 != g.inArray(a, ka)) {
      var d = this.header.getViewsWithButtons();
      g.each(q.views, function(a) {
        d.push(a);
      });
      for (b = 0; b < d.length; b++) {
        if (c = this.getViewSpec(d[b]), c && c.singleUnit == a) {
          return c;
        }
      }
    }
  }, buildViewSpec:function(a) {
    for (var b, c, d, e, f = this.overrides.views || {}, g = [], l = [], m = [], q = a; q;) {
      b = M[q], c = f[q], q = null, "function" == typeof b && (b = {"class":b}), b && (g.unshift(b), l.unshift(b.defaults || {}), d = d || b.duration, q = q || b.type), c && (m.unshift(c), d = d || c.duration, q = q || c.type);
    }
    return b = P(g), b.type = a, b["class"] ? (d && (d = n.duration(d), d.valueOf() && (b.duration = d, e = ja(d), 1 === d.as(e) && (b.singleUnit = e, m.unshift(f[e] || {})))), b.defaults = P(l, R), b.overrides = P(m, R), this.buildViewSpecOptions(b), this.buildViewSpecButtonText(b, a), b) : !1;
  }, buildViewSpecOptions:function(a) {
    a.options = P([v.defaults, a.defaults, this.dirDefaults, this.langDefaults, this.overrides, a.overrides], R);
    Xa(a.options);
  }, buildViewSpecButtonText:function(a, b) {
    function c(c) {
      c = c.buttonText || {};
      return c[b] || (a.singleUnit ? c[a.singleUnit] : null);
    }
    a.buttonTextOverride = c(this.overrides) || a.overrides.buttonText;
    a.buttonTextDefault = c(this.langDefaults) || c(this.dirDefaults) || a.defaults.buttonText || c(v.defaults) || (a.duration ? this.humanizeDuration(a.duration) : null) || b;
  }, instantiateView:function(a) {
    var b = this.getViewSpec(a);
    return new b["class"](this, a, b.options, b.duration);
  }, isValidViewType:function(a) {
    return !!this.getViewSpec(a);
  }, pushLoading:function() {
    this.loadingLevel++ || this.trigger("loading", null, !0, this.view);
  }, popLoading:function() {
    --this.loadingLevel || this.trigger("loading", null, !1, this.view);
  }, buildSelectRange:function(a, b) {
    return a = this.moment(a), b = b ? this.moment(b) : a.hasTime() ? a.clone().add(this.defaultTimedEventDuration) : a.clone().add(this.defaultAllDayEventDuration), {start:a, end:b};
  }});
  v.mixin(xb);
  v.defaults = {titleRangeSeparator:" \u2014 ", monthYearFormat:"MMMM YYYY", defaultTimedEventDuration:"02:00:00", defaultAllDayEventDuration:{days:1}, forceEventDuration:!1, nextDayThreshold:"09:00:00", defaultView:"month", aspectRatio:1.35, header:{left:"title", center:"", right:"today prev,next"}, weekends:!0, weekNumbers:!1, weekNumberTitle:"W", weekNumberCalculation:"local", scrollTime:"06:00:00", lazyFetching:!0, startParam:"start", endParam:"end", timezoneParam:"timezone", timezone:!1, isRTL:!1, 
  buttonText:{prev:"prev", next:"next", prevYear:"prev year", nextYear:"next year", year:"year", today:"today", month:"month", week:"week", day:"day"}, buttonIcons:{prev:"left-single-arrow", next:"right-single-arrow", prevYear:"left-double-arrow", nextYear:"right-double-arrow"}, theme:!1, themeButtonIcons:{prev:"circle-triangle-w", next:"circle-triangle-e", prevYear:"seek-prev", nextYear:"seek-next"}, dragOpacity:.75, dragRevertDuration:500, dragScroll:!0, unselectAuto:!0, dropAccept:"*", eventOrder:"title", 
  eventLimit:!1, eventLimitText:"more", eventLimitClick:"popover", dayPopoverFormat:"LL", handleWindowResize:!0, windowResizeDelay:200};
  v.englishDefaults = {dayPopoverFormat:"dddd, MMMM D"};
  v.rtlDefaults = {header:{left:"next,prev today", center:"", right:"title"}, buttonIcons:{prev:"right-single-arrow", next:"left-single-arrow", prevYear:"right-double-arrow", nextYear:"left-double-arrow"}, themeButtonIcons:{prev:"circle-triangle-e", next:"circle-triangle-w", nextYear:"seek-prev", prevYear:"seek-next"}};
  var Q = q.langs = {};
  q.datepickerLang = function(a, b, c) {
    var d = Q[a] || (Q[a] = {});
    d.isRTL = c.isRTL;
    d.weekNumberTitle = c.weekHeader;
    g.each(Cb, function(a, b) {
      d[a] = b(c);
    });
    g.datepicker && (g.datepicker.regional[b] = g.datepicker.regional[a] = c, g.datepicker.regional.en = g.datepicker.regional[""], g.datepicker.setDefaults(c));
  };
  q.lang = function(a, b) {
    var c = Q[a] || (Q[a] = {});
    b && (c = Q[a] = P([c, b], R));
    var d = Ya(a);
    g.each(Db, function(a, b) {
      null == c[a] && (c[a] = b(d, c));
    });
    v.defaults.lang = a;
  };
  var Cb = {buttonText:function(a) {
    return {prev:a.prevText.replace(/&.*?;/g, ""), next:a.nextText.replace(/&.*?;/g, ""), today:a.currentText.replace(/&.*?;/g, "")};
  }, monthYearFormat:function(a) {
    return a.showMonthAfterYear ? "YYYY[" + a.yearSuffix + "] MMMM" : "MMMM YYYY[" + a.yearSuffix + "]";
  }}, Db = {dayOfMonthFormat:function(a, b) {
    a = a.longDateFormat("l");
    return a = a.replace(/^Y+[^\w\s]*|[^\w\s]*Y+$/g, ""), b.isRTL ? a += " ddd" : a = "ddd " + a, a;
  }, mediumTimeFormat:function(a) {
    return a.longDateFormat("LT").replace(/\s*a$/i, "a");
  }, smallTimeFormat:function(a) {
    return a.longDateFormat("LT").replace(":mm", "(:mm)").replace(/(\Wmm)$/, "($1)").replace(/\s*a$/i, "a");
  }, extraSmallTimeFormat:function(a) {
    return a.longDateFormat("LT").replace(":mm", "(:mm)").replace(/(\Wmm)$/, "($1)").replace(/\s*a$/i, "t");
  }, hourFormat:function(a) {
    return a.longDateFormat("LT").replace(":mm", "").replace(/(\Wmm)$/, "").replace(/\s*a$/i, "a");
  }, noMeridiemTimeFormat:function(a) {
    return a.longDateFormat("LT").replace(/\s*a$/i, "");
  }}, qb = {smallDayDateFormat:function(a) {
    return a.isRTL ? "D dd" : "dd D";
  }, weekFormat:function(a) {
    return a.isRTL ? "w[ " + a.weekNumberTitle + "]" : "[" + a.weekNumberTitle + " ]w";
  }, smallWeekFormat:function(a) {
    return a.isRTL ? "w[" + a.weekNumberTitle + "]" : "[" + a.weekNumberTitle + "]w";
  }};
  q.lang("en", v.englishDefaults);
  q.sourceNormalizers = [];
  q.sourceFetchers = [];
  var ub = {dataType:"json", cache:!1}, vb = 1;
  v.prototype.getPeerEvents = function(a, b) {
    var c = this.getEventCache(), d = [];
    for (b = 0; b < c.length; b++) {
      var e = c[b];
      a && a._id === e._id || d.push(e);
    }
    return d;
  };
  var sa = T.extend({dayGrid:null, dayNumbersVisible:!1, weekNumbersVisible:!1, weekNumberWidth:null, headRowEl:null, initialize:function() {
    this.dayGrid = new ea(this);
    this.coordMap = this.dayGrid.coordMap;
  }, setRange:function(a) {
    T.prototype.setRange.call(this, a);
    this.dayGrid.breakOnWeeks = /year|month|week/.test(this.intervalUnit);
    this.dayGrid.setRange(a);
  }, computeRange:function(a) {
    a = T.prototype.computeRange.call(this, a);
    return /year|month/.test(a.intervalUnit) && (a.start.startOf("week"), a.start = this.skipHiddenDays(a.start), a.end.weekday() && (a.end.add(1, "week").startOf("week"), a.end = this.skipHiddenDays(a.end, -1, !0))), a;
  }, renderDates:function() {
    this.dayNumbersVisible = 1 < this.dayGrid.rowCnt;
    this.weekNumbersVisible = this.opt("weekNumbers");
    this.dayGrid.numbersVisible = this.dayNumbersVisible || this.weekNumbersVisible;
    this.el.addClass("fc-basic-view").html(this.renderHtml());
    this.headRowEl = this.el.find("thead .fc-row");
    this.scrollerEl = this.el.find(".fc-day-grid-container");
    this.dayGrid.coordMap.containerEl = this.scrollerEl;
    this.dayGrid.setElement(this.el.find(".fc-day-grid"));
    this.dayGrid.renderDates(this.hasRigidRows());
  }, unrenderDates:function() {
    this.dayGrid.unrenderDates();
    this.dayGrid.removeElement();
  }, renderBusinessHours:function() {
    this.dayGrid.renderBusinessHours();
  }, renderHtml:function() {
    return '\x3ctable\x3e\x3cthead class\x3d"fc-head"\x3e\x3ctr\x3e\x3ctd class\x3d"' + this.widgetHeaderClass + '"\x3e' + this.dayGrid.headHtml() + '\x3c/td\x3e\x3c/tr\x3e\x3c/thead\x3e\x3ctbody class\x3d"fc-body"\x3e\x3ctr\x3e\x3ctd class\x3d"' + this.widgetContentClass + '"\x3e\x3cdiv class\x3d"fc-day-grid-container"\x3e\x3cdiv class\x3d"fc-day-grid"/\x3e\x3c/div\x3e\x3c/td\x3e\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e';
  }, headIntroHtml:function() {
    return this.weekNumbersVisible ? '\x3cth class\x3d"fc-week-number ' + this.widgetHeaderClass + '" ' + this.weekNumberStyleAttr() + "\x3e\x3cspan\x3e" + w(this.opt("weekNumberTitle")) + "\x3c/span\x3e\x3c/th\x3e" : void 0;
  }, numberIntroHtml:function(a) {
    return this.weekNumbersVisible ? '\x3ctd class\x3d"fc-week-number" ' + this.weekNumberStyleAttr() + "\x3e\x3cspan\x3e" + this.dayGrid.getCell(a, 0).start.format("w") + "\x3c/span\x3e\x3c/td\x3e" : void 0;
  }, dayIntroHtml:function() {
    return this.weekNumbersVisible ? '\x3ctd class\x3d"fc-week-number ' + this.widgetContentClass + '" ' + this.weekNumberStyleAttr() + "\x3e\x3c/td\x3e" : void 0;
  }, introHtml:function() {
    return this.weekNumbersVisible ? '\x3ctd class\x3d"fc-week-number" ' + this.weekNumberStyleAttr() + "\x3e\x3c/td\x3e" : void 0;
  }, numberCellHtml:function(a) {
    var b;
    a = a.start;
    return this.dayNumbersVisible ? (b = this.dayGrid.getDayClasses(a), b.unshift("fc-day-number"), '\x3ctd class\x3d"' + b.join(" ") + '" data-date\x3d"' + a.format() + '"\x3e' + a.date() + "\x3c/td\x3e") : "\x3ctd/\x3e";
  }, weekNumberStyleAttr:function() {
    return null !== this.weekNumberWidth ? 'style\x3d"width:' + this.weekNumberWidth + 'px"' : "";
  }, hasRigidRows:function() {
    var a = this.opt("eventLimit");
    return a && "number" != typeof a;
  }, updateWidth:function() {
    this.weekNumbersVisible && (this.weekNumberWidth = wa(this.el.find(".fc-week-number")));
  }, setHeight:function(a, b) {
    var c = this.opt("eventLimit");
    fa(this.scrollerEl);
    ua(this.headRowEl);
    this.dayGrid.removeSegPopover();
    c && "number" == typeof c && this.dayGrid.limitRows(c);
    var d = this.computeScrollerHeight(a);
    this.setGridHeight(d, b);
    c && "number" != typeof c && this.dayGrid.limitRows(c);
    !b && xa(this.scrollerEl, d) && (ta(this.headRowEl, W(this.scrollerEl)), d = this.computeScrollerHeight(a), this.scrollerEl.height(d));
  }, setGridHeight:function(a, b) {
    b ? this.dayGrid.rowEls.height("") : va(this.dayGrid.rowEls, a, !0);
  }, renderEvents:function(a) {
    this.dayGrid.renderEvents(a);
    this.updateHeight();
  }, getEventSegs:function() {
    return this.dayGrid.getEventSegs();
  }, unrenderEvents:function() {
    this.dayGrid.unrenderEvents();
  }, renderDrag:function(a, b) {
    return this.dayGrid.renderDrag(a, b);
  }, unrenderDrag:function() {
    this.dayGrid.unrenderDrag();
  }, renderSelection:function(a) {
    this.dayGrid.renderSelection(a);
  }, unrenderSelection:function() {
    this.dayGrid.unrenderSelection();
  }}), Eb = sa.extend({computeRange:function(a) {
    var b;
    a = sa.prototype.computeRange.call(this, a);
    return this.isFixedWeeks() && (b = Math.ceil(a.end.diff(a.start, "weeks", !0)), a.end.add(6 - b, "weeks")), a;
  }, setGridHeight:function(a, b) {
    (b = b || "variable" === this.opt("weekMode")) && (a *= this.rowCnt / 6);
    va(this.dayGrid.rowEls, a, !b);
  }, isFixedWeeks:function() {
    var a = this.opt("weekMode");
    return a ? "fixed" === a : this.opt("fixedWeekCount");
  }});
  M.basic = {"class":sa};
  M.basicDay = {type:"basic", duration:{days:1}};
  M.basicWeek = {type:"basic", duration:{weeks:1}};
  M.month = {"class":Eb, duration:{months:1}, defaults:{fixedWeekCount:!0}};
  var Gb = T.extend({timeGrid:null, dayGrid:null, axisWidth:null, noScrollRowEls:null, bottomRuleEl:null, bottomRuleHeight:null, initialize:function() {
    this.timeGrid = new db(this);
    this.opt("allDaySlot") ? (this.dayGrid = new ea(this), this.coordMap = new Ab([this.dayGrid.coordMap, this.timeGrid.coordMap])) : this.coordMap = this.timeGrid.coordMap;
  }, setRange:function(a) {
    T.prototype.setRange.call(this, a);
    this.timeGrid.setRange(a);
    this.dayGrid && this.dayGrid.setRange(a);
  }, renderDates:function() {
    this.el.addClass("fc-agenda-view").html(this.renderHtml());
    this.scrollerEl = this.el.find(".fc-time-grid-container");
    this.timeGrid.coordMap.containerEl = this.scrollerEl;
    this.timeGrid.setElement(this.el.find(".fc-time-grid"));
    this.timeGrid.renderDates();
    this.bottomRuleEl = g('\x3chr class\x3d"fc-divider ' + this.widgetHeaderClass + '"/\x3e').appendTo(this.timeGrid.el);
    this.dayGrid && (this.dayGrid.setElement(this.el.find(".fc-day-grid")), this.dayGrid.renderDates(), this.dayGrid.bottomCoordPadding = this.dayGrid.el.next("hr").outerHeight());
    this.noScrollRowEls = this.el.find(".fc-row:not(.fc-scroller *)");
  }, unrenderDates:function() {
    this.timeGrid.unrenderDates();
    this.timeGrid.removeElement();
    this.dayGrid && (this.dayGrid.unrenderDates(), this.dayGrid.removeElement());
  }, renderBusinessHours:function() {
    this.timeGrid.renderBusinessHours();
    this.dayGrid && this.dayGrid.renderBusinessHours();
  }, renderHtml:function() {
    return '\x3ctable\x3e\x3cthead class\x3d"fc-head"\x3e\x3ctr\x3e\x3ctd class\x3d"' + this.widgetHeaderClass + '"\x3e' + this.timeGrid.headHtml() + '\x3c/td\x3e\x3c/tr\x3e\x3c/thead\x3e\x3ctbody class\x3d"fc-body"\x3e\x3ctr\x3e\x3ctd class\x3d"' + this.widgetContentClass + '"\x3e' + (this.dayGrid ? '\x3cdiv class\x3d"fc-day-grid"/\x3e\x3chr class\x3d"fc-divider ' + this.widgetHeaderClass + '"/\x3e' : "") + '\x3cdiv class\x3d"fc-time-grid-container"\x3e\x3cdiv class\x3d"fc-time-grid"/\x3e\x3c/div\x3e\x3c/td\x3e\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e';
  }, headIntroHtml:function() {
    var a, b;
    return this.opt("weekNumbers") ? (a = this.timeGrid.getCell(0).start, b = a.format(this.opt("smallWeekFormat")), '\x3cth class\x3d"fc-axis fc-week-number ' + this.widgetHeaderClass + '" ' + this.axisStyleAttr() + "\x3e\x3cspan\x3e" + w(b) + "\x3c/span\x3e\x3c/th\x3e") : '\x3cth class\x3d"fc-axis ' + this.widgetHeaderClass + '" ' + this.axisStyleAttr() + "\x3e\x3c/th\x3e";
  }, dayIntroHtml:function() {
    return '\x3ctd class\x3d"fc-axis ' + this.widgetContentClass + '" ' + this.axisStyleAttr() + "\x3e\x3cspan\x3e" + (this.opt("allDayHtml") || w(this.opt("allDayText"))) + "\x3c/span\x3e\x3c/td\x3e";
  }, slotBgIntroHtml:function() {
    return '\x3ctd class\x3d"fc-axis ' + this.widgetContentClass + '" ' + this.axisStyleAttr() + "\x3e\x3c/td\x3e";
  }, introHtml:function() {
    return '\x3ctd class\x3d"fc-axis" ' + this.axisStyleAttr() + "\x3e\x3c/td\x3e";
  }, axisStyleAttr:function() {
    return null !== this.axisWidth ? 'style\x3d"width:' + this.axisWidth + 'px"' : "";
  }, updateSize:function(a) {
    this.timeGrid.updateSize(a);
    T.prototype.updateSize.call(this, a);
  }, updateWidth:function() {
    this.axisWidth = wa(this.el.find(".fc-axis"));
  }, setHeight:function(a, b) {
    var c, d;
    null === this.bottomRuleHeight && (this.bottomRuleHeight = this.bottomRuleEl.outerHeight());
    this.bottomRuleEl.hide();
    this.scrollerEl.css("overflow", "");
    fa(this.scrollerEl);
    ua(this.noScrollRowEls);
    this.dayGrid && (this.dayGrid.removeSegPopover(), c = this.opt("eventLimit"), c && "number" != typeof c && (c = Fb), c && this.dayGrid.limitRows(c));
    b || (d = this.computeScrollerHeight(a), xa(this.scrollerEl, d) ? (ta(this.noScrollRowEls, W(this.scrollerEl)), d = this.computeScrollerHeight(a), this.scrollerEl.height(d)) : (this.scrollerEl.height(d).css("overflow", "hidden"), this.bottomRuleEl.show()));
  }, computeInitialScroll:function() {
    var a = n.duration(this.opt("scrollTime"));
    a = this.timeGrid.computeTimeTop(a);
    return a = Math.ceil(a), a && a++, a;
  }, renderEvents:function(a) {
    var b, c = [], d = [];
    for (b = 0; b < a.length; b++) {
      a[b].allDay ? c.push(a[b]) : d.push(a[b]);
    }
    this.timeGrid.renderEvents(d);
    this.dayGrid && this.dayGrid.renderEvents(c);
    this.updateHeight();
  }, getEventSegs:function() {
    return this.timeGrid.getEventSegs().concat(this.dayGrid ? this.dayGrid.getEventSegs() : []);
  }, unrenderEvents:function() {
    this.timeGrid.unrenderEvents();
    this.dayGrid && this.dayGrid.unrenderEvents();
  }, renderDrag:function(a, b) {
    return a.start.hasTime() ? this.timeGrid.renderDrag(a, b) : this.dayGrid ? this.dayGrid.renderDrag(a, b) : void 0;
  }, unrenderDrag:function() {
    this.timeGrid.unrenderDrag();
    this.dayGrid && this.dayGrid.unrenderDrag();
  }, renderSelection:function(a) {
    a.start.hasTime() || a.end.hasTime() ? this.timeGrid.renderSelection(a) : this.dayGrid && this.dayGrid.renderSelection(a);
  }, unrenderSelection:function() {
    this.timeGrid.unrenderSelection();
    this.dayGrid && this.dayGrid.unrenderSelection();
  }}), Fb = 5, cb = [{hours:1}, {minutes:30}, {minutes:15}, {seconds:30}, {seconds:15}];
  return M.agenda = {"class":Gb, defaults:{allDaySlot:!0, allDayText:"all-day", slotDuration:"00:30:00", minTime:"00:00:00", maxTime:"24:00:00", slotEventOverlap:!0}}, M.agendaDay = {type:"agenda", duration:{days:1}}, M.agendaWeek = {type:"agenda", duration:{weeks:1}}, q;
});
