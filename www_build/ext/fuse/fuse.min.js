// Input 0
/*
 Fuse.js v3.3.0 - Lightweight fuzzy-search (http://fusejs.io)

 Copyright (c) 2012-2017 Kirollos Risk (http://kiro.me)
 All Rights Reserved. Apache Software License 2.0

 http://www.apache.org/licenses/LICENSE-2.0
*/
'use strict';
!function(g, f) {
  "object" == typeof exports && "object" == typeof module ? module.exports = f() : "function" == typeof define && define.amd ? define("Fuse", [], f) : "object" == typeof exports ? exports.Fuse = f() : g.Fuse = f();
}(this, function() {
  return function(g) {
    function f(d) {
      if (k[d]) {
        return k[d].exports;
      }
      var b = k[d] = {i:d, l:!1, exports:{}};
      return g[d].call(b.exports, b, b.exports, f), b.l = !0, b.exports;
    }
    var k = {};
    return f.m = g, f.c = k, f.i = function(d) {
      return d;
    }, f.d = function(d, b, C) {
      f.o(d, b) || Object.defineProperty(d, b, {configurable:!1, enumerable:!0, get:C});
    }, f.n = function(d) {
      var b = d && d.__esModule ? function() {
        return d.default;
      } : function() {
        return d;
      };
      return f.d(b, "a", b), b;
    }, f.o = function(d, b) {
      return Object.prototype.hasOwnProperty.call(d, b);
    }, f.p = "", f(f.s = 8);
  }([function(g, f, k) {
    g.exports = function(d) {
      return Array.isArray ? Array.isArray(d) : "[object Array]" === Object.prototype.toString.call(d);
    };
  }, function(g, f, k) {
    var d = function() {
      function e(c, a) {
        for (var h = 0; h < a.length; h++) {
          var l = a[h];
          l.enumerable = l.enumerable || !1;
          l.configurable = !0;
          "value" in l && (l.writable = !0);
          Object.defineProperty(c, l.key, l);
        }
      }
      return function(c, a, h) {
        return a && e(c.prototype, a), h && e(c, h), c;
      };
    }(), b = k(5), C = k(7), e = k(4);
    f = function() {
      function E(c, a) {
        var h = a.location;
        h = void 0 === h ? 0 : h;
        var l = a.distance;
        l = void 0 === l ? 100 : l;
        var d = a.threshold;
        d = void 0 === d ? .6 : d;
        var b = a.maxPatternLength;
        b = void 0 === b ? 32 : b;
        var v = a.isCaseSensitive;
        v = void 0 !== v && v;
        var w = a.tokenSeparator;
        w = void 0 === w ? / +/g : w;
        var m = a.findAllMatches;
        m = void 0 !== m && m;
        a = a.minMatchCharLength;
        a = void 0 === a ? 1 : a;
        if (!(this instanceof E)) {
          throw new TypeError("Cannot call a class as a function");
        }
        this.options = {location:h, distance:l, threshold:d, maxPatternLength:b, isCaseSensitive:v, tokenSeparator:w, findAllMatches:m, minMatchCharLength:a};
        this.pattern = this.options.isCaseSensitive ? c : c.toLowerCase();
        this.pattern.length <= b && (this.patternAlphabet = e(this.pattern));
      }
      return d(E, [{key:"search", value:function(c) {
        if (this.options.isCaseSensitive || (c = c.toLowerCase()), this.pattern === c) {
          return {isMatch:!0, score:0, matchedIndices:[[0, c.length - 1]]};
        }
        var a = this.options, h = a.tokenSeparator;
        if (this.pattern.length > a.maxPatternLength) {
          return b(c, this.pattern, h);
        }
        a = this.options;
        return C(c, this.pattern, this.patternAlphabet, {location:a.location, distance:a.distance, threshold:a.threshold, findAllMatches:a.findAllMatches, minMatchCharLength:a.minMatchCharLength});
      }}]), E;
    }();
    g.exports = f;
  }, function(g, f, k) {
    var d = k(0), b = function a(e, b, c) {
      if (b) {
        var h = b.indexOf("."), l = b, B = null;
        -1 !== h && (l = b.slice(0, h), B = b.slice(h + 1));
        e = e[l];
        if (null !== e && void 0 !== e) {
          if (B || "string" != typeof e && "number" != typeof e) {
            if (d(e)) {
              for (b = 0, h = e.length; b < h; b += 1) {
                a(e[b], B, c);
              }
            } else {
              B && a(e, B, c);
            }
          } else {
            c.push(e.toString());
          }
        }
      } else {
        c.push(e);
      }
      return c;
    };
    g.exports = function(e, d) {
      return b(e, d, []);
    };
  }, function(g, f, k) {
    g.exports = function() {
      for (var d = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [], b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 1, f = [], e = -1, g = -1, c = 0, a = d.length; c < a; c += 1) {
        var h = d[c];
        h && -1 === e ? e = c : h || -1 === e || (g = c - 1, g - e + 1 >= b && f.push([e, g]), e = -1);
      }
      return d[c - 1] && c - e >= b && f.push([e, c - 1]), f;
    };
  }, function(g, f, k) {
    g.exports = function(d) {
      for (var b = {}, f = d.length, e = 0; e < f; e += 1) {
        b[d.charAt(e)] = 0;
      }
      for (e = 0; e < f; e += 1) {
        b[d.charAt(e)] |= 1 << f - e - 1;
      }
      return b;
    };
  }, function(g, f, k) {
    g.exports = function(d, b) {
      var f = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : / +/g;
      f = new RegExp(b.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$\x26").replace(f, "|"));
      f = d.match(f);
      var e = !!f, g = [];
      if (e) {
        for (var c = 0, a = f.length; c < a; c += 1) {
          var h = f[c];
          g.push([d.indexOf(h), h.length - 1]);
        }
      }
      return {score:e ? .5 : 1, isMatch:e, matchedIndices:g};
    };
  }, function(g, f, k) {
    g.exports = function(d, b) {
      var f = b.errors, e = b.currentLocation, g = b.expectedLocation;
      b = b.distance;
      b = void 0 === b ? 100 : b;
      d = (void 0 === f ? 0 : f) / d.length;
      e = Math.abs((void 0 === g ? 0 : g) - (void 0 === e ? 0 : e));
      return b ? d + e / b : e ? 1 : d;
    };
  }, function(g, f, k) {
    var d = k(6), b = k(3);
    g.exports = function(f, e, g, c) {
      var a = c.location, h = c.distance;
      h = void 0 === h ? 100 : h;
      var l = c.threshold, B = c.findAllMatches;
      B = void 0 !== B && B;
      c = c.minMatchCharLength;
      c = void 0 === c ? 1 : c;
      a = void 0 === a ? 0 : a;
      var D = f.length;
      l = void 0 === l ? .6 : l;
      for (var v = f.indexOf(e, a), w = e.length, m = [], n = 0; n < D; n += 1) {
        m[n] = 0;
      }
      -1 !== v && (v = d(e, {errors:0, currentLocation:v, expectedLocation:a, distance:h}), l = Math.min(v, l), -1 !== (v = f.lastIndexOf(e, a + w))) && (v = d(e, {errors:0, currentLocation:v, expectedLocation:a, distance:h}), l = Math.min(v, l));
      v = -1;
      n = [];
      for (var p = 1, y = w + D, k = 1 << w - 1, t = 0; t < w; t += 1) {
        for (var u = 0, q = y; u < q;) {
          d(e, {errors:t, currentLocation:a + q, expectedLocation:a, distance:h}) <= l ? u = q : y = q, q = Math.floor((y - u) / 2 + u);
        }
        y = q;
        u = Math.max(1, a - q + 1);
        var r = B ? D : Math.min(a + q, D) + w;
        q = Array(r + 2);
        for (q[r + 1] = (1 << t) - 1; r >= u; --r) {
          var x = r - 1, A = g[f.charAt(x)];
          if (A && (m[x] = 1), q[r] = (q[r + 1] << 1 | 1) & A, 0 !== t && (q[r] = q[r] | (n[r + 1] | n[r]) << 1 | 1 | n[r + 1]), q[r] & k && (p = d(e, {errors:t, currentLocation:x, expectedLocation:a, distance:h})) <= l) {
            if (l = p, (v = x) <= a) {
              break;
            }
            u = Math.max(1, 2 * a - v);
          }
        }
        if (d(e, {errors:t + 1, currentLocation:a, expectedLocation:a, distance:h}) > l) {
          break;
        }
        n = q;
      }
      return {isMatch:0 <= v, score:0 === p ? .001 : p, matchedIndices:b(m, c)};
    };
  }, function(g, f, k) {
    var d = function() {
      function b(c, a) {
        for (var h = 0; h < a.length; h++) {
          var l = a[h];
          l.enumerable = l.enumerable || !1;
          l.configurable = !0;
          "value" in l && (l.writable = !0);
          Object.defineProperty(c, l.key, l);
        }
      }
      return function(c, a, h) {
        return a && b(c.prototype, a), h && b(c, h), c;
      };
    }(), b = k(1), C = k(2), e = k(0);
    f = function() {
      function f(c, a) {
        var h = a.location;
        h = void 0 === h ? 0 : h;
        var l = a.distance;
        l = void 0 === l ? 100 : l;
        var b = a.threshold;
        b = void 0 === b ? .6 : b;
        var e = a.maxPatternLength;
        e = void 0 === e ? 32 : e;
        var d = a.caseSensitive;
        d = void 0 !== d && d;
        var w = a.tokenSeparator;
        w = void 0 === w ? / +/g : w;
        var g = a.findAllMatches;
        g = void 0 !== g && g;
        var n = a.minMatchCharLength;
        n = void 0 === n ? 1 : n;
        var p = a.id;
        p = void 0 === p ? null : p;
        var y = a.keys;
        y = void 0 === y ? [] : y;
        var k = a.shouldSort;
        k = void 0 === k || k;
        var t = a.getFn;
        t = void 0 === t ? C : t;
        var u = a.sortFn;
        u = void 0 === u ? function(a, c) {
          return a.score - c.score;
        } : u;
        var q = a.tokenize;
        q = void 0 !== q && q;
        var r = a.matchAllTokens;
        r = void 0 !== r && r;
        var x = a.includeMatches;
        x = void 0 !== x && x;
        var A = a.includeScore;
        A = void 0 !== A && A;
        a = a.verbose;
        a = void 0 !== a && a;
        if (!(this instanceof f)) {
          throw new TypeError("Cannot call a class as a function");
        }
        this.options = {location:h, distance:l, threshold:b, maxPatternLength:e, isCaseSensitive:d, tokenSeparator:w, findAllMatches:g, minMatchCharLength:n, id:p, keys:y, includeMatches:x, includeScore:A, shouldSort:k, getFn:t, sortFn:u, verbose:a, tokenize:q, matchAllTokens:r};
        this.setCollection(c);
      }
      return d(f, [{key:"setCollection", value:function(c) {
        return this.list = c, c;
      }}, {key:"search", value:function(c) {
        this._log('---------\nSearch pattern: "' + c + '"');
        c = this._prepareSearchers(c);
        c = this._search(c.tokenSearchers, c.fullSearcher);
        var a = c.results;
        return this._computeScore(c.weights, a), this.options.shouldSort && this._sort(a), this._format(a);
      }}, {key:"_prepareSearchers", value:function() {
        var c = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", a = [];
        if (this.options.tokenize) {
          for (var h = c.split(this.options.tokenSeparator), l = 0, e = h.length; l < e; l += 1) {
            a.push(new b(h[l], this.options));
          }
        }
        return {tokenSearchers:a, fullSearcher:new b(c, this.options)};
      }}, {key:"_search", value:function() {
        var c = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [], a = arguments[1], h = this.list, l = {}, b = [];
        if ("string" == typeof h[0]) {
          for (var e = 0, d = h.length; e < d; e += 1) {
            this._analyze({key:"", value:h[e], record:e, index:e}, {resultMap:l, results:b, tokenSearchers:c, fullSearcher:a});
          }
          return {weights:null, results:b};
        }
        e = {};
        d = 0;
        for (var f = h.length; d < f; d += 1) {
          for (var g = h[d], n = 0, p = this.options.keys.length; n < p; n += 1) {
            var k = this.options.keys[n];
            if ("string" != typeof k) {
              if (e[k.name] = {weight:1 - k.weight || 1}, 0 >= k.weight || 1 < k.weight) {
                throw Error("Key weight has to be \x3e 0 and \x3c\x3d 1");
              }
              k = k.name;
            } else {
              e[k] = {weight:1};
            }
            this._analyze({key:k, value:this.options.getFn(g, k), record:g, index:d}, {resultMap:l, results:b, tokenSearchers:c, fullSearcher:a});
          }
        }
        return {weights:e, results:b};
      }}, {key:"_analyze", value:function(c, a) {
        var h = c.key, b = c.arrayIndex, d = void 0 === b ? -1 : b;
        b = c.value;
        var f = c.record;
        c = c.index;
        var g = a.tokenSearchers;
        g = void 0 === g ? [] : g;
        var k = a.fullSearcher, m = void 0 === k ? [] : k;
        k = a.resultMap;
        k = void 0 === k ? {} : k;
        a = a.results;
        a = void 0 === a ? [] : a;
        if (void 0 !== b && null !== b) {
          var n = !1, p = -1, y = 0;
          if ("string" == typeof b) {
            this._log("\nKey: " + ("" === h ? "-" : h));
            m = m.search(b);
            if (this._log('Full text: "' + b + '", score: ' + m.score), this.options.tokenize) {
              p = b.split(this.options.tokenSeparator);
              for (var z = [], t = 0; t < g.length; t += 1) {
                var u = g[t];
                this._log('\nPattern: "' + u.pattern + '"');
                for (var q = !1, r = 0; r < p.length; r += 1) {
                  var x = p[r], A = u.search(x), C = {};
                  A.isMatch ? (C[x] = A.score, n = !0, q = !0, z.push(A.score)) : (C[x] = 1, this.options.matchAllTokens || z.push(1));
                  this._log('Token: "' + x + '", score: ' + C[x]);
                }
                q && (y += 1);
              }
              p = z[0];
              t = z.length;
              for (u = 1; u < t; u += 1) {
                p += z[u];
              }
              p /= t;
              this._log("Token score average:", p);
            }
            z = m.score;
            -1 < p && (z = (z + p) / 2);
            this._log("Score average:", z);
            g = !this.options.tokenize || !this.options.matchAllTokens || y >= g.length;
            if (this._log("\nCheck Matches: " + g), (n || m.isMatch) && g) {
              (g = k[c]) ? g.output.push({key:h, arrayIndex:d, value:b, score:z, matchedIndices:m.matchedIndices}) : (k[c] = {item:f, output:[{key:h, arrayIndex:d, value:b, score:z, matchedIndices:m.matchedIndices}]}, a.push(k[c]));
            }
          } else {
            if (e(b)) {
              for (d = 0, n = b.length; d < n; d += 1) {
                this._analyze({key:h, arrayIndex:d, value:b[d], record:f, index:c}, {resultMap:k, results:a, tokenSearchers:g, fullSearcher:m});
              }
            }
          }
        }
      }}, {key:"_computeScore", value:function(c, a) {
        this._log("\n\nComputing score:\n");
        for (var b = 0, d = a.length; b < d; b += 1) {
          for (var e = a[b].output, f = e.length, g = 1, k = 1, m = 0; m < f; m += 1) {
            var n = c ? c[e[m].key].weight : 1, p = (1 === n ? e[m].score : e[m].score || .001) * n;
            1 !== n ? k = Math.min(k, p) : (e[m].nScore = p, g *= p);
          }
          a[b].score = 1 === k ? g : k;
          this._log(a[b]);
        }
      }}, {key:"_sort", value:function(c) {
        this._log("\n\nSorting....");
        c.sort(this.options.sortFn);
      }}, {key:"_format", value:function(c) {
        var a = [];
        this.options.verbose && this._log("\n\nOutput:\n\n", JSON.stringify(c));
        var b = [];
        this.options.includeMatches && b.push(function(a, b) {
          a = a.output;
          b.matches = [];
          for (var c = 0, e = a.length; c < e; c += 1) {
            var d = a[c];
            if (0 !== d.matchedIndices.length) {
              var f = {indices:d.matchedIndices, value:d.value};
              d.key && (f.key = d.key);
              d.hasOwnProperty("arrayIndex") && -1 < d.arrayIndex && (f.arrayIndex = d.arrayIndex);
              b.matches.push(f);
            }
          }
        });
        this.options.includeScore && b.push(function(a, b) {
          b.score = a.score;
        });
        for (var e = 0, d = c.length; e < d; e += 1) {
          var f = c[e];
          if (this.options.id && (f.item = this.options.getFn(f.item, this.options.id)[0]), b.length) {
            for (var g = {item:f.item}, k = 0, m = b.length; k < m; k += 1) {
              b[k](f, g);
            }
            a.push(g);
          } else {
            a.push(f.item);
          }
        }
        return a;
      }}, {key:"_log", value:function() {
        if (this.options.verbose) {
          var b;
          (b = console).log.apply(b, arguments);
        }
      }}]), f;
    }();
    g.exports = f;
  }]);
});
