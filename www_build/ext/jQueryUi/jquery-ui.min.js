// Input 0
/*
 jQuery UI - v1.11.4 - 2016-03-08
 http://jqueryui.com
 Includes: core.js, widget.js, mouse.js, position.js, draggable.js, droppable.js, resizable.js, selectable.js, sortable.js, accordion.js, autocomplete.js, button.js, datepicker.js, dialog.js, menu.js, progressbar.js, selectmenu.js, slider.js, spinner.js, tabs.js, tooltip.js, effect.js, effect-blind.js, effect-bounce.js, effect-clip.js, effect-drop.js, effect-explode.js, effect-fade.js, effect-fold.js, effect-highlight.js, effect-puff.js, effect-pulsate.js, effect-scale.js, effect-shake.js, effect-size.js, effect-slide.js, effect-transfer.js
 Copyright jQuery Foundation and other contributors; Licensed MIT */
'use strict';
(function(d) {
  "function" == typeof define && define.amd ? define(["jquery"], d) : d(jQuery);
})(function(d) {
  function O(a, b) {
    var c, e, f, g = a.nodeName.toLowerCase();
    return "area" === g ? (c = a.parentNode, e = c.name, a.href && e && "map" === c.nodeName.toLowerCase() ? (f = d("img[usemap\x3d'#" + e + "']")[0], !!f && P(f)) : !1) : (/^(input|select|textarea|button|object)$/.test(g) ? !a.disabled : "a" === g ? a.href || b : b) && P(a);
  }
  function P(a) {
    return d.expr.filters.visible(a) && !d(a).parents().addBack().filter(function() {
      return "hidden" === d.css(this, "visibility");
    }).length;
  }
  function W(a) {
    for (var b, c; a.length && a[0] !== document;) {
      if (b = a.css("position"), ("absolute" === b || "relative" === b || "fixed" === b) && (c = parseInt(a.css("zIndex"), 10), !isNaN(c) && 0 !== c)) {
        return c;
      }
      a = a.parent();
    }
    return 0;
  }
  function Q() {
    this._curInst = null;
    this._keyEvent = !1;
    this._disabledInputs = [];
    this._inDialog = this._datepickerShowing = !1;
    this._mainDivId = "ui-datepicker-div";
    this._inlineClass = "ui-datepicker-inline";
    this._appendClass = "ui-datepicker-append";
    this._triggerClass = "ui-datepicker-trigger";
    this._dialogClass = "ui-datepicker-dialog";
    this._disableClass = "ui-datepicker-disabled";
    this._unselectableClass = "ui-datepicker-unselectable";
    this._currentClass = "ui-datepicker-current-day";
    this._dayOverClass = "ui-datepicker-days-cell-over";
    this.regional = [];
    this.regional[""] = {closeText:"Done", prevText:"Prev", nextText:"Next", currentText:"Today", monthNames:"January February March April May June July August September October November December".split(" "), monthNamesShort:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "), dayNames:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), dayNamesShort:"Sun Mon Tue Wed Thu Fri Sat".split(" "), dayNamesMin:"Su Mo Tu We Th Fr Sa".split(" "), weekHeader:"Wk", dateFormat:"mm/dd/yy", 
    firstDay:0, isRTL:!1, showMonthAfterYear:!1, yearSuffix:""};
    this._defaults = {showOn:"focus", showAnim:"fadeIn", showOptions:{}, defaultDate:null, appendText:"", buttonText:"...", buttonImage:"", buttonImageOnly:!1, hideIfNoPrevNext:!1, navigationAsDateFormat:!1, gotoCurrent:!1, changeMonth:!1, changeYear:!1, yearRange:"c-10:c+10", showOtherMonths:!1, selectOtherMonths:!1, showWeek:!1, calculateWeek:this.iso8601Week, shortYearCutoff:"+10", minDate:null, maxDate:null, duration:"fast", beforeShowDay:null, beforeShow:null, onSelect:null, onChangeMonthYear:null, 
    onClose:null, numberOfMonths:1, showCurrentAtPos:0, stepMonths:1, stepBigMonths:12, altField:"", altFormat:"", constrainInput:!0, showButtonPanel:!1, autoSize:!1, disabled:!1};
    d.extend(this._defaults, this.regional[""]);
    this.regional.en = d.extend(!0, {}, this.regional[""]);
    this.regional["en-US"] = d.extend(!0, {}, this.regional.en);
    this.dpDiv = R(d("\x3cdiv id\x3d'" + this._mainDivId + "' class\x3d'ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'\x3e\x3c/div\x3e"));
  }
  function R(a) {
    return a.delegate("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a", "mouseout", function() {
      d(this).removeClass("ui-state-hover");
      -1 !== this.className.indexOf("ui-datepicker-prev") && d(this).removeClass("ui-datepicker-prev-hover");
      -1 !== this.className.indexOf("ui-datepicker-next") && d(this).removeClass("ui-datepicker-next-hover");
    }).delegate("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a", "mouseover", S);
  }
  function S() {
    d.datepicker._isDisabledDatepicker(D.inline ? D.dpDiv.parent()[0] : D.input[0]) || (d(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"), d(this).addClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && d(this).addClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && d(this).addClass("ui-datepicker-next-hover"));
  }
  function H(a, b) {
    d.extend(a, b);
    for (var c in b) {
      null == b[c] && (a[c] = b[c]);
    }
    return a;
  }
  function F(a) {
    return function() {
      var b = this.element.val();
      a.apply(this, arguments);
      this._refresh();
      b !== this.element.val() && this._trigger("change");
    };
  }
  d.ui = d.ui || {};
  d.extend(d.ui, {version:"1.11.4", keyCode:{BACKSPACE:8, COMMA:188, DELETE:46, DOWN:40, END:35, ENTER:13, ESCAPE:27, HOME:36, LEFT:37, PAGE_DOWN:34, PAGE_UP:33, PERIOD:190, RIGHT:39, SPACE:32, TAB:9, UP:38}});
  d.fn.extend({scrollParent:function(a) {
    var b = this.css("position"), c = "absolute" === b, e = a ? /(auto|scroll|hidden)/ : /(auto|scroll)/;
    a = this.parents().filter(function() {
      var a = d(this);
      return c && "static" === a.css("position") ? !1 : e.test(a.css("overflow") + a.css("overflow-y") + a.css("overflow-x"));
    }).eq(0);
    return "fixed" !== b && a.length ? a : d(this[0].ownerDocument || document);
  }, uniqueId:function() {
    var a = 0;
    return function() {
      return this.each(function() {
        this.id || (this.id = "ui-id-" + ++a);
      });
    };
  }(), removeUniqueId:function() {
    return this.each(function() {
      /^ui-id-\d+$/.test(this.id) && d(this).removeAttr("id");
    });
  }});
  d.extend(d.expr[":"], {data:d.expr.createPseudo ? d.expr.createPseudo(function(a) {
    return function(b) {
      return !!d.data(b, a);
    };
  }) : function(a, b, c) {
    return !!d.data(a, c[3]);
  }, focusable:function(a) {
    return O(a, !isNaN(d.attr(a, "tabindex")));
  }, tabbable:function(a) {
    var b = d.attr(a, "tabindex"), c = isNaN(b);
    return (c || 0 <= b) && O(a, !c);
  }});
  d("\x3ca\x3e").outerWidth(1).jquery || d.each(["Width", "Height"], function(a, b) {
    function c(a, b, c, f) {
      return d.each(e, function() {
        b -= parseFloat(d.css(a, "padding" + this)) || 0;
        c && (b -= parseFloat(d.css(a, "border" + this + "Width")) || 0);
        f && (b -= parseFloat(d.css(a, "margin" + this)) || 0);
      }), b;
    }
    var e = "Width" === b ? ["Left", "Right"] : ["Top", "Bottom"], f = b.toLowerCase(), g = {innerWidth:d.fn.innerWidth, innerHeight:d.fn.innerHeight, outerWidth:d.fn.outerWidth, outerHeight:d.fn.outerHeight};
    d.fn["inner" + b] = function(a) {
      return void 0 === a ? g["inner" + b].call(this) : this.each(function() {
        d(this).css(f, c(this, a) + "px");
      });
    };
    d.fn["outer" + b] = function(a, e) {
      return "number" != typeof a ? g["outer" + b].call(this, a) : this.each(function() {
        d(this).css(f, c(this, a, !0, e) + "px");
      });
    };
  });
  d.fn.addBack || (d.fn.addBack = function(a) {
    return this.add(null == a ? this.prevObject : this.prevObject.filter(a));
  });
  d("\x3ca\x3e").data("a-b", "a").removeData("a-b").data("a-b") && (d.fn.removeData = function(a) {
    return function(b) {
      return arguments.length ? a.call(this, d.camelCase(b)) : a.call(this);
    };
  }(d.fn.removeData));
  d.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());
  d.fn.extend({focus:function(a) {
    return function(b, c) {
      return "number" == typeof b ? this.each(function() {
        var a = this;
        setTimeout(function() {
          d(a).focus();
          c && c.call(a);
        }, b);
      }) : a.apply(this, arguments);
    };
  }(d.fn.focus), disableSelection:function() {
    var a = "onselectstart" in document.createElement("div") ? "selectstart" : "mousedown";
    return function() {
      return this.bind(a + ".ui-disableSelection", function(a) {
        a.preventDefault();
      });
    };
  }(), enableSelection:function() {
    return this.unbind(".ui-disableSelection");
  }, zIndex:function(a) {
    if (void 0 !== a) {
      return this.css("zIndex", a);
    }
    if (this.length) {
      var b, c;
      for (a = d(this[0]); a.length && a[0] !== document;) {
        if (b = a.css("position"), ("absolute" === b || "relative" === b || "fixed" === b) && (c = parseInt(a.css("zIndex"), 10), !isNaN(c) && 0 !== c)) {
          return c;
        }
        a = a.parent();
      }
    }
    return 0;
  }});
  d.ui.plugin = {add:function(a, b, c) {
    var e;
    a = d.ui[a].prototype;
    for (e in c) {
      a.plugins[e] = a.plugins[e] || [], a.plugins[e].push([b, c[e]]);
    }
  }, call:function(a, b, c, d) {
    if ((b = a.plugins[b]) && (d || a.element[0].parentNode && 11 !== a.element[0].parentNode.nodeType)) {
      for (d = 0; b.length > d; d++) {
        a.options[b[d][0]] && b[d][1].apply(a.element, c);
      }
    }
  }};
  var X = 0, T = Array.prototype.slice;
  d.cleanData = function(a) {
    return function(b) {
      var c, e, f;
      for (f = 0; null != (e = b[f]); f++) {
        try {
          (c = d._data(e, "events")) && c.remove && d(e).triggerHandler("remove");
        } catch (g) {
        }
      }
      a(b);
    };
  }(d.cleanData);
  d.widget = function(a, b, c) {
    var e, f, g, h, k = {}, l = a.split(".")[0];
    return a = a.split(".")[1], e = l + "-" + a, c || (c = b, b = d.Widget), d.expr[":"][e.toLowerCase()] = function(a) {
      return !!d.data(a, e);
    }, d[l] = d[l] || {}, f = d[l][a], g = d[l][a] = function(a, b) {
      return this._createWidget ? (arguments.length && this._createWidget(a, b), void 0) : new g(a, b);
    }, d.extend(g, f, {version:c.version, _proto:d.extend({}, c), _childConstructors:[]}), h = new b, h.options = d.widget.extend({}, h.options), d.each(c, function(a, c) {
      return d.isFunction(c) ? (k[a] = function() {
        var d = function() {
          return b.prototype[a].apply(this, arguments);
        }, e = function(c) {
          return b.prototype[a].apply(this, c);
        };
        return function() {
          var a, b = this._super, f = this._superApply;
          return this._super = d, this._superApply = e, a = c.apply(this, arguments), this._super = b, this._superApply = f, a;
        };
      }(), void 0) : (k[a] = c, void 0);
    }), g.prototype = d.widget.extend(h, {widgetEventPrefix:f ? h.widgetEventPrefix || a : a}, k, {constructor:g, namespace:l, widgetName:a, widgetFullName:e}), f ? (d.each(f._childConstructors, function(a, b) {
      a = b.prototype;
      d.widget(a.namespace + "." + a.widgetName, g, b._proto);
    }), delete f._childConstructors) : b._childConstructors.push(g), d.widget.bridge(a, g), g;
  };
  d.widget.extend = function(a) {
    for (var b, c, e = T.call(arguments, 1), f = 0, g = e.length; g > f; f++) {
      for (b in e[f]) {
        c = e[f][b], e[f].hasOwnProperty(b) && void 0 !== c && (a[b] = d.isPlainObject(c) ? d.isPlainObject(a[b]) ? d.widget.extend({}, a[b], c) : d.widget.extend({}, c) : c);
      }
    }
    return a;
  };
  d.widget.bridge = function(a, b) {
    var c = b.prototype.widgetFullName || a;
    d.fn[a] = function(e) {
      var f = "string" == typeof e, g = T.call(arguments, 1), h = this;
      return f ? this.each(function() {
        var b, f = d.data(this, c);
        return "instance" === e ? (h = f, !1) : f ? d.isFunction(f[e]) && "_" !== e.charAt(0) ? (b = f[e].apply(f, g), b !== f && void 0 !== b ? (h = b && b.jquery ? h.pushStack(b.get()) : b, !1) : void 0) : d.error("no such method '" + e + "' for " + a + " widget instance") : d.error("cannot call methods on " + a + " prior to initialization; attempted to call method '" + e + "'");
      }) : (g.length && (e = d.widget.extend.apply(null, [e].concat(g))), this.each(function() {
        var a = d.data(this, c);
        a ? (a.option(e || {}), a._init && a._init()) : d.data(this, c, new b(e, this));
      })), h;
    };
  };
  d.Widget = function() {
  };
  d.Widget._childConstructors = [];
  d.Widget.prototype = {widgetName:"widget", widgetEventPrefix:"", defaultElement:"\x3cdiv\x3e", options:{disabled:!1, create:null}, _createWidget:function(a, b) {
    b = d(b || this.defaultElement || this)[0];
    this.element = d(b);
    this.uuid = X++;
    this.eventNamespace = "." + this.widgetName + this.uuid;
    this.bindings = d();
    this.hoverable = d();
    this.focusable = d();
    b !== this && (d.data(b, this.widgetFullName, this), this._on(!0, this.element, {remove:function(a) {
      a.target === b && this.destroy();
    }}), this.document = d(b.style ? b.ownerDocument : b.document || b), this.window = d(this.document[0].defaultView || this.document[0].parentWindow));
    this.options = d.widget.extend({}, this.options, this._getCreateOptions(), a);
    this._create();
    this._trigger("create", null, this._getCreateEventData());
    this._init();
  }, _getCreateOptions:d.noop, _getCreateEventData:d.noop, _create:d.noop, _init:d.noop, destroy:function() {
    this._destroy();
    this.element.unbind(this.eventNamespace).removeData(this.widgetFullName).removeData(d.camelCase(this.widgetFullName));
    this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled");
    this.bindings.unbind(this.eventNamespace);
    this.hoverable.removeClass("ui-state-hover");
    this.focusable.removeClass("ui-state-focus");
  }, _destroy:d.noop, widget:function() {
    return this.element;
  }, option:function(a, b) {
    var c, e, f = a;
    if (0 === arguments.length) {
      return d.widget.extend({}, this.options);
    }
    if ("string" == typeof a) {
      if (f = {}, c = a.split("."), a = c.shift(), c.length) {
        var g = f[a] = d.widget.extend({}, this.options[a]);
        for (e = 0; c.length - 1 > e; e++) {
          g[c[e]] = g[c[e]] || {}, g = g[c[e]];
        }
        if (a = c.pop(), 1 === arguments.length) {
          return void 0 === g[a] ? null : g[a];
        }
        g[a] = b;
      } else {
        if (1 === arguments.length) {
          return void 0 === this.options[a] ? null : this.options[a];
        }
        f[a] = b;
      }
    }
    return this._setOptions(f), this;
  }, _setOptions:function(a) {
    for (var b in a) {
      this._setOption(b, a[b]);
    }
    return this;
  }, _setOption:function(a, b) {
    return this.options[a] = b, "disabled" === a && (this.widget().toggleClass(this.widgetFullName + "-disabled", !!b), b && (this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus"))), this;
  }, enable:function() {
    return this._setOptions({disabled:!1});
  }, disable:function() {
    return this._setOptions({disabled:!0});
  }, _on:function(a, b, c) {
    var e, f = this;
    "boolean" != typeof a && (c = b, b = a, a = !1);
    c ? (b = e = d(b), this.bindings = this.bindings.add(b)) : (c = b, b = this.element, e = this.widget());
    d.each(c, function(c, h) {
      function g() {
        return a || !0 !== f.options.disabled && !d(this).hasClass("ui-state-disabled") ? ("string" == typeof h ? f[h] : h).apply(f, arguments) : void 0;
      }
      "string" != typeof h && (g.guid = h.guid = h.guid || g.guid || d.guid++);
      var l = c.match(/^([\w:-]*)\s*(.*)$/);
      c = l[1] + f.eventNamespace;
      (l = l[2]) ? e.delegate(l, c, g) : b.bind(c, g);
    });
  }, _off:function(a, b) {
    b = (b || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace;
    a.unbind(b).undelegate(b);
    this.bindings = d(this.bindings.not(a).get());
    this.focusable = d(this.focusable.not(a).get());
    this.hoverable = d(this.hoverable.not(a).get());
  }, _delay:function(a, b) {
    var c = this;
    return setTimeout(function() {
      return ("string" == typeof a ? c[a] : a).apply(c, arguments);
    }, b || 0);
  }, _hoverable:function(a) {
    this.hoverable = this.hoverable.add(a);
    this._on(a, {mouseenter:function(a) {
      d(a.currentTarget).addClass("ui-state-hover");
    }, mouseleave:function(a) {
      d(a.currentTarget).removeClass("ui-state-hover");
    }});
  }, _focusable:function(a) {
    this.focusable = this.focusable.add(a);
    this._on(a, {focusin:function(a) {
      d(a.currentTarget).addClass("ui-state-focus");
    }, focusout:function(a) {
      d(a.currentTarget).removeClass("ui-state-focus");
    }});
  }, _trigger:function(a, b, c) {
    var e, f = this.options[a];
    if (c = c || {}, b = d.Event(b), b.type = (a === this.widgetEventPrefix ? a : this.widgetEventPrefix + a).toLowerCase(), b.target = this.element[0], a = b.originalEvent) {
      for (e in a) {
        e in b || (b[e] = a[e]);
      }
    }
    return this.element.trigger(b, c), !(d.isFunction(f) && !1 === f.apply(this.element[0], [b].concat(c)) || b.isDefaultPrevented());
  }};
  d.each({show:"fadeIn", hide:"fadeOut"}, function(a, b) {
    d.Widget.prototype["_" + a] = function(c, e, f) {
      "string" == typeof e && (e = {effect:e});
      var g = e ? !0 === e || "number" == typeof e ? b : e.effect || b : a;
      e = e || {};
      "number" == typeof e && (e = {duration:e});
      var h = !d.isEmptyObject(e);
      e.complete = f;
      e.delay && c.delay(e.delay);
      h && d.effects && d.effects.effect[g] ? c[a](e) : g !== a && c[g] ? c[g](e.duration, e.easing, f) : c.queue(function(b) {
        d(this)[a]();
        f && f.call(c[0]);
        b();
      });
    };
  });
  d.widget;
  var G = !1;
  d(document).mouseup(function() {
    G = !1;
  });
  d.widget("ui.mouse", {version:"1.11.4", options:{cancel:"input,textarea,button,select,option", distance:1, delay:0}, _mouseInit:function() {
    var a = this;
    this.element.bind("mousedown." + this.widgetName, function(b) {
      return a._mouseDown(b);
    }).bind("click." + this.widgetName, function(b) {
      return !0 === d.data(b.target, a.widgetName + ".preventClickEvent") ? (d.removeData(b.target, a.widgetName + ".preventClickEvent"), b.stopImmediatePropagation(), !1) : void 0;
    });
    this.started = !1;
  }, _mouseDestroy:function() {
    this.element.unbind("." + this.widgetName);
    this._mouseMoveDelegate && this.document.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
  }, _mouseDown:function(a) {
    if (!G) {
      this._mouseMoved = !1;
      this._mouseStarted && this._mouseUp(a);
      this._mouseDownEvent = a;
      var b = this, c = 1 === a.which, e = "string" == typeof this.options.cancel && a.target.nodeName ? d(a.target).closest(this.options.cancel).length : !1;
      return c && !e && this._mouseCapture(a) ? (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
        b.mouseDelayMet = !0;
      }, this.options.delay)), this._mouseDistanceMet(a) && this._mouseDelayMet(a) && (this._mouseStarted = !1 !== this._mouseStart(a), !this._mouseStarted) ? (a.preventDefault(), !0) : (!0 === d.data(a.target, this.widgetName + ".preventClickEvent") && d.removeData(a.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function(a) {
        return b._mouseMove(a);
      }, this._mouseUpDelegate = function(a) {
        return b._mouseUp(a);
      }, this.document.bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate), a.preventDefault(), G = !0, !0)) : !0;
    }
  }, _mouseMove:function(a) {
    return this._mouseMoved && (d.ui.ie && (!document.documentMode || 9 > document.documentMode) && !a.button || !a.which) ? this._mouseUp(a) : ((a.which || a.button) && (this._mouseMoved = !0), this._mouseStarted ? (this._mouseDrag(a), a.preventDefault()) : (this._mouseDistanceMet(a) && this._mouseDelayMet(a) && (this._mouseStarted = !1 !== this._mouseStart(this._mouseDownEvent, a), this._mouseStarted ? this._mouseDrag(a) : this._mouseUp(a)), !this._mouseStarted));
  }, _mouseUp:function(a) {
    return this.document.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, a.target === this._mouseDownEvent.target && d.data(a.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(a)), G = !1, !1;
  }, _mouseDistanceMet:function(a) {
    return Math.max(Math.abs(this._mouseDownEvent.pageX - a.pageX), Math.abs(this._mouseDownEvent.pageY - a.pageY)) >= this.options.distance;
  }, _mouseDelayMet:function() {
    return this.mouseDelayMet;
  }, _mouseStart:function() {
  }, _mouseDrag:function() {
  }, _mouseStop:function() {
  }, _mouseCapture:function() {
    return !0;
  }});
  (function() {
    function a(a, b, c) {
      return [parseFloat(a[0]) * (p.test(a[0]) ? b / 100 : 1), parseFloat(a[1]) * (p.test(a[1]) ? c / 100 : 1)];
    }
    function b(a) {
      var b = a[0];
      return 9 === b.nodeType ? {width:a.width(), height:a.height(), offset:{top:0, left:0}} : d.isWindow(b) ? {width:a.width(), height:a.height(), offset:{top:a.scrollTop(), left:a.scrollLeft()}} : b.preventDefault ? {width:0, height:0, offset:{top:b.pageY, left:b.pageX}} : {width:a.outerWidth(), height:a.outerHeight(), offset:a.offset()};
    }
    d.ui = d.ui || {};
    var c, e, f = Math.max, g = Math.abs, h = Math.round, k = /left|center|right/, l = /top|center|bottom/, m = /[\+\-]\d+(\.[\d]+)?%?/, n = /^\w+/, p = /%$/, q = d.fn.position;
    d.position = {scrollbarWidth:function() {
      if (void 0 !== c) {
        return c;
      }
      var a, b, e = d("\x3cdiv style\x3d'display:block;position:absolute;width:50px;height:50px;overflow:hidden;'\x3e\x3cdiv style\x3d'height:100px;width:auto;'\x3e\x3c/div\x3e\x3c/div\x3e"), f = e.children()[0];
      return d("body").append(e), a = f.offsetWidth, e.css("overflow", "scroll"), b = f.offsetWidth, a === b && (b = e[0].clientWidth), e.remove(), c = a - b;
    }, getScrollInfo:function(a) {
      var b = a.isWindow || a.isDocument ? "" : a.element.css("overflow-x"), c = a.isWindow || a.isDocument ? "" : a.element.css("overflow-y");
      b = "scroll" === b || "auto" === b && a.width < a.element[0].scrollWidth;
      return {width:"scroll" === c || "auto" === c && a.height < a.element[0].scrollHeight ? d.position.scrollbarWidth() : 0, height:b ? d.position.scrollbarWidth() : 0};
    }, getWithinInfo:function(a) {
      a = d(a || window);
      var b = d.isWindow(a[0]), c = !!a[0] && 9 === a[0].nodeType;
      return {element:a, isWindow:b, isDocument:c, offset:a.offset() || {left:0, top:0}, scrollLeft:a.scrollLeft(), scrollTop:a.scrollTop(), width:b || c ? a.width() : a.outerWidth(), height:b || c ? a.height() : a.outerHeight()};
    }};
    d.fn.position = function(c) {
      if (!c || !c.of) {
        return q.apply(this, arguments);
      }
      c = d.extend({}, c);
      var r, u, x, y, t, p, w = d(c.of), B = d.position.getWithinInfo(c.within), C = d.position.getScrollInfo(B), I = (c.collision || "flip").split(" "), L = {};
      return p = b(w), w[0].preventDefault && (c.at = "left top"), u = p.width, x = p.height, y = p.offset, t = d.extend({}, y), d.each(["my", "at"], function() {
        var a = (c[this] || "").split(" ");
        1 === a.length && (a = k.test(a[0]) ? a.concat(["center"]) : l.test(a[0]) ? ["center"].concat(a) : ["center", "center"]);
        a[0] = k.test(a[0]) ? a[0] : "center";
        a[1] = l.test(a[1]) ? a[1] : "center";
        var b = m.exec(a[0]);
        var d = m.exec(a[1]);
        L[this] = [b ? b[0] : 0, d ? d[0] : 0];
        c[this] = [n.exec(a[0])[0], n.exec(a[1])[0]];
      }), 1 === I.length && (I[1] = I[0]), "right" === c.at[0] ? t.left += u : "center" === c.at[0] && (t.left += u / 2), "bottom" === c.at[1] ? t.top += x : "center" === c.at[1] && (t.top += x / 2), r = a(L.at, u, x), t.left += r[0], t.top += r[1], this.each(function() {
        var b, k = d(this), l = k.outerWidth(), m = k.outerHeight(), n = parseInt(d.css(this, "marginLeft"), 10) || 0, q = parseInt(d.css(this, "marginTop"), 10) || 0, p = l + n + (parseInt(d.css(this, "marginRight"), 10) || 0) + C.width, z = m + q + (parseInt(d.css(this, "marginBottom"), 10) || 0) + C.height, v = d.extend({}, t), J = a(L.my, k.outerWidth(), k.outerHeight());
        "right" === c.my[0] ? v.left -= l : "center" === c.my[0] && (v.left -= l / 2);
        "bottom" === c.my[1] ? v.top -= m : "center" === c.my[1] && (v.top -= m / 2);
        v.left += J[0];
        v.top += J[1];
        e || (v.left = h(v.left), v.top = h(v.top));
        var D = {marginLeft:n, marginTop:q};
        d.each(["left", "top"], function(a, b) {
          d.ui.position[I[a]] && d.ui.position[I[a]][b](v, {targetWidth:u, targetHeight:x, elemWidth:l, elemHeight:m, collisionPosition:D, collisionWidth:p, collisionHeight:z, offset:[r[0] + J[0], r[1] + J[1]], my:c.my, at:c.at, within:B, elem:k});
        });
        c.using && (b = function(a) {
          var b = y.left - v.left, d = b + u - l, e = y.top - v.top, h = e + x - m, r = {target:{element:w, left:y.left, top:y.top, width:u, height:x}, element:{element:k, left:v.left, top:v.top, width:l, height:m}, horizontal:0 > d ? "left" : 0 < b ? "right" : "center", vertical:0 > h ? "top" : 0 < e ? "bottom" : "middle"};
          l > u && u > g(b + d) && (r.horizontal = "center");
          m > x && x > g(e + h) && (r.vertical = "middle");
          r.important = f(g(b), g(d)) > f(g(e), g(h)) ? "horizontal" : "vertical";
          c.using.call(this, a, r);
        });
        k.offset(d.extend(v, {using:b}));
      });
    };
    d.ui.position = {fit:{left:function(a, b) {
      var c, d = b.within, e = d.isWindow ? d.scrollLeft : d.offset.left;
      d = d.width;
      var g = a.left - b.collisionPosition.marginLeft, h = e - g, k = g + b.collisionWidth - d - e;
      b.collisionWidth > d ? 0 < h && 0 >= k ? (c = a.left + h + b.collisionWidth - d - e, a.left += h - c) : a.left = 0 < k && 0 >= h ? e : h > k ? e + d - b.collisionWidth : e : 0 < h ? a.left += h : 0 < k ? a.left -= k : a.left = f(a.left - g, a.left);
    }, top:function(a, b) {
      var c, d = b.within;
      d = d.isWindow ? d.scrollTop : d.offset.top;
      var e = b.within.height, g = a.top - b.collisionPosition.marginTop, h = d - g, k = g + b.collisionHeight - e - d;
      b.collisionHeight > e ? 0 < h && 0 >= k ? (c = a.top + h + b.collisionHeight - e - d, a.top += h - c) : a.top = 0 < k && 0 >= h ? d : h > k ? d + e - b.collisionHeight : d : 0 < h ? a.top += h : 0 < k ? a.top -= k : a.top = f(a.top - g, a.top);
    }}, flip:{left:function(a, b) {
      var c, d, e = b.within, f = e.offset.left + e.scrollLeft, h = e.width;
      e = e.isWindow ? e.scrollLeft : e.offset.left;
      var k = a.left - b.collisionPosition.marginLeft, l = k - e;
      k = k + b.collisionWidth - h - e;
      var r = "left" === b.my[0] ? -b.elemWidth : "right" === b.my[0] ? b.elemWidth : 0, m = "left" === b.at[0] ? b.targetWidth : "right" === b.at[0] ? -b.targetWidth : 0, n = -2 * b.offset[0];
      0 > l ? (c = a.left + r + m + n + b.collisionWidth - h - f, (0 > c || g(l) > c) && (a.left += r + m + n)) : 0 < k && (d = a.left - b.collisionPosition.marginLeft + r + m + n - e, (0 < d || k > g(d)) && (a.left += r + m + n));
    }, top:function(a, b) {
      var c, d, e = b.within, f = e.offset.top + e.scrollTop, h = e.height;
      e = e.isWindow ? e.scrollTop : e.offset.top;
      var k = a.top - b.collisionPosition.marginTop, l = k - e;
      k = k + b.collisionHeight - h - e;
      var r = "top" === b.my[1] ? -b.elemHeight : "bottom" === b.my[1] ? b.elemHeight : 0, m = "top" === b.at[1] ? b.targetHeight : "bottom" === b.at[1] ? -b.targetHeight : 0, n = -2 * b.offset[1];
      0 > l ? (d = a.top + r + m + n + b.collisionHeight - h - f, (0 > d || g(l) > d) && (a.top += r + m + n)) : 0 < k && (c = a.top - b.collisionPosition.marginTop + r + m + n - e, (0 < c || k > g(c)) && (a.top += r + m + n));
    }}, flipfit:{left:function() {
      d.ui.position.flip.left.apply(this, arguments);
      d.ui.position.fit.left.apply(this, arguments);
    }, top:function() {
      d.ui.position.flip.top.apply(this, arguments);
      d.ui.position.fit.top.apply(this, arguments);
    }}};
    (function() {
      var a, b = document.getElementsByTagName("body")[0];
      var c = document.createElement("div");
      var f = document.createElement(b ? "div" : "body");
      var g = {visibility:"hidden", width:0, height:0, border:0, margin:0, background:"none"};
      b && d.extend(g, {position:"absolute", left:"-1000px", top:"-1000px"});
      for (a in g) {
        f.style[a] = g[a];
      }
      f.appendChild(c);
      g = b || document.documentElement;
      g.insertBefore(f, g.firstChild);
      c.style.cssText = "position: absolute; left: 10.7432222px;";
      c = d(c).offset().left;
      e = 10 < c && 11 > c;
      f.innerHTML = "";
      g.removeChild(f);
    })();
  })();
  d.ui.position;
  d.widget("ui.draggable", d.ui.mouse, {version:"1.11.4", widgetEventPrefix:"drag", options:{addClasses:!0, appendTo:"parent", axis:!1, connectToSortable:!1, containment:!1, cursor:"auto", cursorAt:!1, grid:!1, handle:!1, helper:"original", iframeFix:!1, opacity:!1, refreshPositions:!1, revert:!1, revertDuration:500, scope:"default", scroll:!0, scrollSensitivity:20, scrollSpeed:20, snap:!1, snapMode:"both", snapTolerance:20, stack:!1, zIndex:!1, drag:null, start:null, stop:null}, _create:function() {
    "original" === this.options.helper && this._setPositionRelative();
    this.options.addClasses && this.element.addClass("ui-draggable");
    this.options.disabled && this.element.addClass("ui-draggable-disabled");
    this._setHandleClassName();
    this._mouseInit();
  }, _setOption:function(a, b) {
    this._super(a, b);
    "handle" === a && (this._removeHandleClassName(), this._setHandleClassName());
  }, _destroy:function() {
    return (this.helper || this.element).is(".ui-draggable-dragging") ? (this.destroyOnClear = !0, void 0) : (this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"), this._removeHandleClassName(), this._mouseDestroy(), void 0);
  }, _mouseCapture:function(a) {
    var b = this.options;
    return this._blurActiveElement(a), this.helper || b.disabled || 0 < d(a.target).closest(".ui-resizable-handle").length ? !1 : (this.handle = this._getHandle(a), this.handle ? (this._blockFrames(!0 === b.iframeFix ? "iframe" : b.iframeFix), !0) : !1);
  }, _blockFrames:function(a) {
    this.iframeBlocks = this.document.find(a).map(function() {
      var a = d(this);
      return d("\x3cdiv\x3e").css("position", "absolute").appendTo(a.parent()).outerWidth(a.outerWidth()).outerHeight(a.outerHeight()).offset(a.offset())[0];
    });
  }, _unblockFrames:function() {
    this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks);
  }, _blurActiveElement:function(a) {
    var b = this.document[0];
    if (this.handleElement.is(a.target)) {
      try {
        b.activeElement && "body" !== b.activeElement.nodeName.toLowerCase() && d(b.activeElement).blur();
      } catch (c) {
      }
    }
  }, _mouseStart:function(a) {
    var b = this.options;
    return this.helper = this._createHelper(a), this.helper.addClass("ui-draggable-dragging"), this._cacheHelperProportions(), d.ui.ddmanager && (d.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(!0), this.offsetParent = this.helper.offsetParent(), this.hasFixedAncestor = 0 < this.helper.parents().filter(function() {
      return "fixed" === d(this).css("position");
    }).length, this.positionAbs = this.element.offset(), this._refreshOffsets(a), this.originalPosition = this.position = this._generatePosition(a, !1), this.originalPageX = a.pageX, this.originalPageY = a.pageY, b.cursorAt && this._adjustOffsetFromHelper(b.cursorAt), this._setContainment(), !1 === this._trigger("start", a) ? (this._clear(), !1) : (this._cacheHelperProportions(), d.ui.ddmanager && !b.dropBehaviour && d.ui.ddmanager.prepareOffsets(this, a), this._normalizeRightBottom(), this._mouseDrag(a, 
    !0), d.ui.ddmanager && d.ui.ddmanager.dragStart(this, a), !0);
  }, _refreshOffsets:function(a) {
    this.offset = {top:this.positionAbs.top - this.margins.top, left:this.positionAbs.left - this.margins.left, scroll:!1, parent:this._getParentOffset(), relative:this._getRelativeOffset()};
    this.offset.click = {left:a.pageX - this.offset.left, top:a.pageY - this.offset.top};
  }, _mouseDrag:function(a, b) {
    if (this.hasFixedAncestor && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(a, !0), this.positionAbs = this._convertPositionTo("absolute"), !b) {
      b = this._uiHash();
      if (!1 === this._trigger("drag", a, b)) {
        return this._mouseUp({}), !1;
      }
      this.position = b.position;
    }
    return this.helper[0].style.left = this.position.left + "px", this.helper[0].style.top = this.position.top + "px", d.ui.ddmanager && d.ui.ddmanager.drag(this, a), !1;
  }, _mouseStop:function(a) {
    var b = this, c = !1;
    return d.ui.ddmanager && !this.options.dropBehaviour && (c = d.ui.ddmanager.drop(this, a)), this.dropped && (c = this.dropped, this.dropped = !1), "invalid" === this.options.revert && !c || "valid" === this.options.revert && c || !0 === this.options.revert || d.isFunction(this.options.revert) && this.options.revert.call(this.element, c) ? d(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
      !1 !== b._trigger("stop", a) && b._clear();
    }) : !1 !== this._trigger("stop", a) && this._clear(), !1;
  }, _mouseUp:function(a) {
    return this._unblockFrames(), d.ui.ddmanager && d.ui.ddmanager.dragStop(this, a), this.handleElement.is(a.target) && this.element.focus(), d.ui.mouse.prototype._mouseUp.call(this, a);
  }, cancel:function() {
    return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(), this;
  }, _getHandle:function(a) {
    return this.options.handle ? !!d(a.target).closest(this.element.find(this.options.handle)).length : !0;
  }, _setHandleClassName:function() {
    this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element;
    this.handleElement.addClass("ui-draggable-handle");
  }, _removeHandleClassName:function() {
    this.handleElement.removeClass("ui-draggable-handle");
  }, _createHelper:function(a) {
    var b = this.options, c = d.isFunction(b.helper);
    a = c ? d(b.helper.apply(this.element[0], [a])) : "clone" === b.helper ? this.element.clone().removeAttr("id") : this.element;
    return a.parents("body").length || a.appendTo("parent" === b.appendTo ? this.element[0].parentNode : b.appendTo), c && a[0] === this.element[0] && this._setPositionRelative(), a[0] === this.element[0] || /(fixed|absolute)/.test(a.css("position")) || a.css("position", "absolute"), a;
  }, _setPositionRelative:function() {
    /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative");
  }, _adjustOffsetFromHelper:function(a) {
    "string" == typeof a && (a = a.split(" "));
    d.isArray(a) && (a = {left:+a[0], top:+a[1] || 0});
    "left" in a && (this.offset.click.left = a.left + this.margins.left);
    "right" in a && (this.offset.click.left = this.helperProportions.width - a.right + this.margins.left);
    "top" in a && (this.offset.click.top = a.top + this.margins.top);
    "bottom" in a && (this.offset.click.top = this.helperProportions.height - a.bottom + this.margins.top);
  }, _isRootNode:function(a) {
    return /(html|body)/i.test(a.tagName) || a === this.document[0];
  }, _getParentOffset:function() {
    var a = this.offsetParent.offset(), b = this.document[0];
    return "absolute" === this.cssPosition && this.scrollParent[0] !== b && d.contains(this.scrollParent[0], this.offsetParent[0]) && (a.left += this.scrollParent.scrollLeft(), a.top += this.scrollParent.scrollTop()), this._isRootNode(this.offsetParent[0]) && (a = {top:0, left:0}), {top:a.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left:a.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)};
  }, _getRelativeOffset:function() {
    if ("relative" !== this.cssPosition) {
      return {top:0, left:0};
    }
    var a = this.element.position(), b = this._isRootNode(this.scrollParent[0]);
    return {top:a.top - (parseInt(this.helper.css("top"), 10) || 0) + (b ? 0 : this.scrollParent.scrollTop()), left:a.left - (parseInt(this.helper.css("left"), 10) || 0) + (b ? 0 : this.scrollParent.scrollLeft())};
  }, _cacheMargins:function() {
    this.margins = {left:parseInt(this.element.css("marginLeft"), 10) || 0, top:parseInt(this.element.css("marginTop"), 10) || 0, right:parseInt(this.element.css("marginRight"), 10) || 0, bottom:parseInt(this.element.css("marginBottom"), 10) || 0};
  }, _cacheHelperProportions:function() {
    this.helperProportions = {width:this.helper.outerWidth(), height:this.helper.outerHeight()};
  }, _setContainment:function() {
    var a, b, c, e = this.options, f = this.document[0];
    return this.relativeContainer = null, e.containment ? "window" === e.containment ? (this.containment = [d(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, d(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, d(window).scrollLeft() + d(window).width() - this.helperProportions.width - this.margins.left, d(window).scrollTop() + (d(window).height() || f.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], void 0) : "document" === 
    e.containment ? (this.containment = [0, 0, d(f).width() - this.helperProportions.width - this.margins.left, (d(f).height() || f.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], void 0) : e.containment.constructor === Array ? (this.containment = e.containment, void 0) : ("parent" === e.containment && (e.containment = this.helper[0].parentNode), b = d(e.containment), c = b[0], c && (a = /(scroll|auto)/.test(b.css("overflow")), this.containment = [(parseInt(b.css("borderLeftWidth"), 
    10) || 0) + (parseInt(b.css("paddingLeft"), 10) || 0), (parseInt(b.css("borderTopWidth"), 10) || 0) + (parseInt(b.css("paddingTop"), 10) || 0), (a ? Math.max(c.scrollWidth, c.offsetWidth) : c.offsetWidth) - (parseInt(b.css("borderRightWidth"), 10) || 0) - (parseInt(b.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (a ? Math.max(c.scrollHeight, c.offsetHeight) : c.offsetHeight) - (parseInt(b.css("borderBottomWidth"), 10) || 0) - (parseInt(b.css("paddingBottom"), 
    10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relativeContainer = b), void 0) : (this.containment = null, void 0);
  }, _convertPositionTo:function(a, b) {
    b || (b = this.position);
    a = "absolute" === a ? 1 : -1;
    var c = this._isRootNode(this.scrollParent[0]);
    return {top:b.top + this.offset.relative.top * a + this.offset.parent.top * a - ("fixed" === this.cssPosition ? -this.offset.scroll.top : c ? 0 : this.offset.scroll.top) * a, left:b.left + this.offset.relative.left * a + this.offset.parent.left * a - ("fixed" === this.cssPosition ? -this.offset.scroll.left : c ? 0 : this.offset.scroll.left) * a};
  }, _generatePosition:function(a, b) {
    var c, d, f, g, h = this.options, k = this._isRootNode(this.scrollParent[0]), l = a.pageX, m = a.pageY;
    return k && this.offset.scroll || (this.offset.scroll = {top:this.scrollParent.scrollTop(), left:this.scrollParent.scrollLeft()}), b && (this.containment && (this.relativeContainer ? (d = this.relativeContainer.offset(), c = [this.containment[0] + d.left, this.containment[1] + d.top, this.containment[2] + d.left, this.containment[3] + d.top]) : c = this.containment, a.pageX - this.offset.click.left < c[0] && (l = c[0] + this.offset.click.left), a.pageY - this.offset.click.top < c[1] && (m = c[1] + 
    this.offset.click.top), a.pageX - this.offset.click.left > c[2] && (l = c[2] + this.offset.click.left), a.pageY - this.offset.click.top > c[3] && (m = c[3] + this.offset.click.top)), h.grid && (f = h.grid[1] ? this.originalPageY + Math.round((m - this.originalPageY) / h.grid[1]) * h.grid[1] : this.originalPageY, m = c ? f - this.offset.click.top >= c[1] || f - this.offset.click.top > c[3] ? f : f - this.offset.click.top >= c[1] ? f - h.grid[1] : f + h.grid[1] : f, g = h.grid[0] ? this.originalPageX + 
    Math.round((l - this.originalPageX) / h.grid[0]) * h.grid[0] : this.originalPageX, l = c ? g - this.offset.click.left >= c[0] || g - this.offset.click.left > c[2] ? g : g - this.offset.click.left >= c[0] ? g - h.grid[0] : g + h.grid[0] : g), "y" === h.axis && (l = this.originalPageX), "x" === h.axis && (m = this.originalPageY)), {top:m - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.offset.scroll.top : k ? 0 : this.offset.scroll.top), 
    left:l - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.offset.scroll.left : k ? 0 : this.offset.scroll.left)};
  }, _clear:function() {
    this.helper.removeClass("ui-draggable-dragging");
    this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove();
    this.helper = null;
    this.cancelHelperRemoval = !1;
    this.destroyOnClear && this.destroy();
  }, _normalizeRightBottom:function() {
    "y" !== this.options.axis && "auto" !== this.helper.css("right") && (this.helper.width(this.helper.width()), this.helper.css("right", "auto"));
    "x" !== this.options.axis && "auto" !== this.helper.css("bottom") && (this.helper.height(this.helper.height()), this.helper.css("bottom", "auto"));
  }, _trigger:function(a, b, c) {
    return c = c || this._uiHash(), d.ui.plugin.call(this, a, [b, c, this], !0), /^(drag|start|stop)/.test(a) && (this.positionAbs = this._convertPositionTo("absolute"), c.offset = this.positionAbs), d.Widget.prototype._trigger.call(this, a, b, c);
  }, plugins:{}, _uiHash:function() {
    return {helper:this.helper, position:this.position, originalPosition:this.originalPosition, offset:this.positionAbs};
  }});
  d.ui.plugin.add("draggable", "connectToSortable", {start:function(a, b, c) {
    var e = d.extend({}, b, {item:c.element});
    c.sortables = [];
    d(c.options.connectToSortable).each(function() {
      var b = d(this).sortable("instance");
      b && !b.options.disabled && (c.sortables.push(b), b.refreshPositions(), b._trigger("activate", a, e));
    });
  }, stop:function(a, b, c) {
    var e = d.extend({}, b, {item:c.element});
    c.cancelHelperRemoval = !1;
    d.each(c.sortables, function() {
      this.isOver ? (this.isOver = 0, c.cancelHelperRemoval = !0, this.cancelHelperRemoval = !1, this._storedCSS = {position:this.placeholder.css("position"), top:this.placeholder.css("top"), left:this.placeholder.css("left")}, this._mouseStop(a), this.options.helper = this.options._helper) : (this.cancelHelperRemoval = !0, this._trigger("deactivate", a, e));
    });
  }, drag:function(a, b, c) {
    d.each(c.sortables, function() {
      var e = !1, f = this;
      f.positionAbs = c.positionAbs;
      f.helperProportions = c.helperProportions;
      f.offset.click = c.offset.click;
      f._intersectsWith(f.containerCache) && (e = !0, d.each(c.sortables, function() {
        return this.positionAbs = c.positionAbs, this.helperProportions = c.helperProportions, this.offset.click = c.offset.click, this !== f && this._intersectsWith(this.containerCache) && d.contains(f.element[0], this.element[0]) && (e = !1), e;
      }));
      e ? (f.isOver || (f.isOver = 1, c._parent = b.helper.parent(), f.currentItem = b.helper.appendTo(f.element).data("ui-sortable-item", !0), f.options._helper = f.options.helper, f.options.helper = function() {
        return b.helper[0];
      }, a.target = f.currentItem[0], f._mouseCapture(a, !0), f._mouseStart(a, !0, !0), f.offset.click.top = c.offset.click.top, f.offset.click.left = c.offset.click.left, f.offset.parent.left -= c.offset.parent.left - f.offset.parent.left, f.offset.parent.top -= c.offset.parent.top - f.offset.parent.top, c._trigger("toSortable", a), c.dropped = f.element, d.each(c.sortables, function() {
        this.refreshPositions();
      }), c.currentItem = c.element, f.fromOutside = c), f.currentItem && (f._mouseDrag(a), b.position = f.position)) : f.isOver && (f.isOver = 0, f.cancelHelperRemoval = !0, f.options._revert = f.options.revert, f.options.revert = !1, f._trigger("out", a, f._uiHash(f)), f._mouseStop(a, !0), f.options.revert = f.options._revert, f.options.helper = f.options._helper, f.placeholder && f.placeholder.remove(), b.helper.appendTo(c._parent), c._refreshOffsets(a), b.position = c._generatePosition(a, !0), 
      c._trigger("fromSortable", a), c.dropped = !1, d.each(c.sortables, function() {
        this.refreshPositions();
      }));
    });
  }});
  d.ui.plugin.add("draggable", "cursor", {start:function(a, b, c) {
    a = d("body");
    c = c.options;
    a.css("cursor") && (c._cursor = a.css("cursor"));
    a.css("cursor", c.cursor);
  }, stop:function(a, b, c) {
    a = c.options;
    a._cursor && d("body").css("cursor", a._cursor);
  }});
  d.ui.plugin.add("draggable", "opacity", {start:function(a, b, c) {
    a = d(b.helper);
    c = c.options;
    a.css("opacity") && (c._opacity = a.css("opacity"));
    a.css("opacity", c.opacity);
  }, stop:function(a, b, c) {
    a = c.options;
    a._opacity && d(b.helper).css("opacity", a._opacity);
  }});
  d.ui.plugin.add("draggable", "scroll", {start:function(a, b, c) {
    c.scrollParentNotHidden || (c.scrollParentNotHidden = c.helper.scrollParent(!1));
    c.scrollParentNotHidden[0] !== c.document[0] && "HTML" !== c.scrollParentNotHidden[0].tagName && (c.overflowOffset = c.scrollParentNotHidden.offset());
  }, drag:function(a, b, c) {
    b = c.options;
    var e = !1, f = c.scrollParentNotHidden[0], g = c.document[0];
    f !== g && "HTML" !== f.tagName ? (b.axis && "x" === b.axis || (c.overflowOffset.top + f.offsetHeight - a.pageY < b.scrollSensitivity ? f.scrollTop = e = f.scrollTop + b.scrollSpeed : a.pageY - c.overflowOffset.top < b.scrollSensitivity && (f.scrollTop = e = f.scrollTop - b.scrollSpeed)), b.axis && "y" === b.axis || (c.overflowOffset.left + f.offsetWidth - a.pageX < b.scrollSensitivity ? f.scrollLeft = e = f.scrollLeft + b.scrollSpeed : a.pageX - c.overflowOffset.left < b.scrollSensitivity && 
    (f.scrollLeft = e = f.scrollLeft - b.scrollSpeed))) : (b.axis && "x" === b.axis || (a.pageY - d(g).scrollTop() < b.scrollSensitivity ? e = d(g).scrollTop(d(g).scrollTop() - b.scrollSpeed) : d(window).height() - (a.pageY - d(g).scrollTop()) < b.scrollSensitivity && (e = d(g).scrollTop(d(g).scrollTop() + b.scrollSpeed))), b.axis && "y" === b.axis || (a.pageX - d(g).scrollLeft() < b.scrollSensitivity ? e = d(g).scrollLeft(d(g).scrollLeft() - b.scrollSpeed) : d(window).width() - (a.pageX - d(g).scrollLeft()) < 
    b.scrollSensitivity && (e = d(g).scrollLeft(d(g).scrollLeft() + b.scrollSpeed))));
    !1 !== e && d.ui.ddmanager && !b.dropBehaviour && d.ui.ddmanager.prepareOffsets(c, a);
  }});
  d.ui.plugin.add("draggable", "snap", {start:function(a, b, c) {
    a = c.options;
    c.snapElements = [];
    d(a.snap.constructor !== String ? a.snap.items || ":data(ui-draggable)" : a.snap).each(function() {
      var a = d(this), b = a.offset();
      this !== c.element[0] && c.snapElements.push({item:this, width:a.outerWidth(), height:a.outerHeight(), top:b.top, left:b.left});
    });
  }, drag:function(a, b, c) {
    var e, f, g, h, k, l, m = c.options, n = m.snapTolerance, p = b.offset.left, q = p + c.helperProportions.width, t = b.offset.top, r = t + c.helperProportions.height;
    for (k = c.snapElements.length - 1; 0 <= k; k--) {
      var u = c.snapElements[k].left - c.margins.left;
      var x = u + c.snapElements[k].width;
      var y = c.snapElements[k].top - c.margins.top;
      var z = y + c.snapElements[k].height;
      u - n > q || p > x + n || y - n > r || t > z + n || !d.contains(c.snapElements[k].item.ownerDocument, c.snapElements[k].item) ? (c.snapElements[k].snapping && c.options.snap.release && c.options.snap.release.call(c.element, a, d.extend(c._uiHash(), {snapItem:c.snapElements[k].item})), c.snapElements[k].snapping = !1) : ("inner" !== m.snapMode && (e = n >= Math.abs(y - r), f = n >= Math.abs(z - t), g = n >= Math.abs(u - q), h = n >= Math.abs(x - p), e && (b.position.top = c._convertPositionTo("relative", 
      {top:y - c.helperProportions.height, left:0}).top), f && (b.position.top = c._convertPositionTo("relative", {top:z, left:0}).top), g && (b.position.left = c._convertPositionTo("relative", {top:0, left:u - c.helperProportions.width}).left), h && (b.position.left = c._convertPositionTo("relative", {top:0, left:x}).left)), l = e || f || g || h, "outer" !== m.snapMode && (e = n >= Math.abs(y - t), f = n >= Math.abs(z - r), g = n >= Math.abs(u - p), h = n >= Math.abs(x - q), e && (b.position.top = 
      c._convertPositionTo("relative", {top:y, left:0}).top), f && (b.position.top = c._convertPositionTo("relative", {top:z - c.helperProportions.height, left:0}).top), g && (b.position.left = c._convertPositionTo("relative", {top:0, left:u}).left), h && (b.position.left = c._convertPositionTo("relative", {top:0, left:x - c.helperProportions.width}).left)), !c.snapElements[k].snapping && (e || f || g || h || l) && c.options.snap.snap && c.options.snap.snap.call(c.element, a, d.extend(c._uiHash(), 
      {snapItem:c.snapElements[k].item})), c.snapElements[k].snapping = e || f || g || h || l);
    }
  }});
  d.ui.plugin.add("draggable", "stack", {start:function(a, b, c) {
    var e;
    a = d.makeArray(d(c.options.stack)).sort(function(a, b) {
      return (parseInt(d(a).css("zIndex"), 10) || 0) - (parseInt(d(b).css("zIndex"), 10) || 0);
    });
    a.length && (e = parseInt(d(a[0]).css("zIndex"), 10) || 0, d(a).each(function(a) {
      d(this).css("zIndex", e + a);
    }), this.css("zIndex", e + a.length));
  }});
  d.ui.plugin.add("draggable", "zIndex", {start:function(a, b, c) {
    a = d(b.helper);
    c = c.options;
    a.css("zIndex") && (c._zIndex = a.css("zIndex"));
    a.css("zIndex", c.zIndex);
  }, stop:function(a, b, c) {
    a = c.options;
    a._zIndex && d(b.helper).css("zIndex", a._zIndex);
  }});
  d.ui.draggable;
  d.widget("ui.droppable", {version:"1.11.4", widgetEventPrefix:"drop", options:{accept:"*", activeClass:!1, addClasses:!0, greedy:!1, hoverClass:!1, scope:"default", tolerance:"intersect", activate:null, deactivate:null, drop:null, out:null, over:null}, _create:function() {
    var a, b = this.options, c = b.accept;
    this.isover = !1;
    this.isout = !0;
    this.accept = d.isFunction(c) ? c : function(a) {
      return a.is(c);
    };
    this.proportions = function() {
      return arguments.length ? (a = arguments[0], void 0) : a ? a : a = {width:this.element[0].offsetWidth, height:this.element[0].offsetHeight};
    };
    this._addToManager(b.scope);
    b.addClasses && this.element.addClass("ui-droppable");
  }, _addToManager:function(a) {
    d.ui.ddmanager.droppables[a] = d.ui.ddmanager.droppables[a] || [];
    d.ui.ddmanager.droppables[a].push(this);
  }, _splice:function(a) {
    for (var b = 0; a.length > b; b++) {
      a[b] === this && a.splice(b, 1);
    }
  }, _destroy:function() {
    this._splice(d.ui.ddmanager.droppables[this.options.scope]);
    this.element.removeClass("ui-droppable ui-droppable-disabled");
  }, _setOption:function(a, b) {
    "accept" === a ? this.accept = d.isFunction(b) ? b : function(a) {
      return a.is(b);
    } : "scope" === a && (this._splice(d.ui.ddmanager.droppables[this.options.scope]), this._addToManager(b));
    this._super(a, b);
  }, _activate:function(a) {
    var b = d.ui.ddmanager.current;
    this.options.activeClass && this.element.addClass(this.options.activeClass);
    b && this._trigger("activate", a, this.ui(b));
  }, _deactivate:function(a) {
    var b = d.ui.ddmanager.current;
    this.options.activeClass && this.element.removeClass(this.options.activeClass);
    b && this._trigger("deactivate", a, this.ui(b));
  }, _over:function(a) {
    var b = d.ui.ddmanager.current;
    b && (b.currentItem || b.element)[0] !== this.element[0] && this.accept.call(this.element[0], b.currentItem || b.element) && (this.options.hoverClass && this.element.addClass(this.options.hoverClass), this._trigger("over", a, this.ui(b)));
  }, _out:function(a) {
    var b = d.ui.ddmanager.current;
    b && (b.currentItem || b.element)[0] !== this.element[0] && this.accept.call(this.element[0], b.currentItem || b.element) && (this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("out", a, this.ui(b)));
  }, _drop:function(a, b) {
    var c = b || d.ui.ddmanager.current, e = !1;
    return c && (c.currentItem || c.element)[0] !== this.element[0] ? (this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function() {
      var b = d(this).droppable("instance");
      return b.options.greedy && !b.options.disabled && b.options.scope === c.options.scope && b.accept.call(b.element[0], c.currentItem || c.element) && d.ui.intersect(c, d.extend(b, {offset:b.element.offset()}), b.options.tolerance, a) ? (e = !0, !1) : void 0;
    }), e ? !1 : this.accept.call(this.element[0], c.currentItem || c.element) ? (this.options.activeClass && this.element.removeClass(this.options.activeClass), this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("drop", a, this.ui(c)), this.element) : !1) : !1;
  }, ui:function(a) {
    return {draggable:a.currentItem || a.element, helper:a.helper, position:a.position, offset:a.positionAbs};
  }});
  d.ui.intersect = function() {
    return function(a, b, c, d) {
      if (!b.offset) {
        return !1;
      }
      var e = (a.positionAbs || a.position.absolute).left + a.margins.left, g = (a.positionAbs || a.position.absolute).top + a.margins.top, h = e + a.helperProportions.width, k = g + a.helperProportions.height, l = b.offset.left, m = b.offset.top, n = l + b.proportions().width, p = m + b.proportions().height;
      switch(c) {
        case "fit":
          return e >= l && n >= h && g >= m && p >= k;
        case "intersect":
          return e + a.helperProportions.width / 2 > l && n > h - a.helperProportions.width / 2 && g + a.helperProportions.height / 2 > m && p > k - a.helperProportions.height / 2;
        case "pointer":
          a = d.pageY;
          c = b.proportions().height;
          if (m = a >= m && m + c > a) {
            d = d.pageX, b = b.proportions().width, m = d >= l && l + b > d;
          }
          return m;
        case "touch":
          return (g >= m && p >= g || k >= m && p >= k || m > g && k > p) && (e >= l && n >= e || h >= l && n >= h || l > e && h > n);
        default:
          return !1;
      }
    };
  }();
  d.ui.ddmanager = {current:null, droppables:{"default":[]}, prepareOffsets:function(a, b) {
    var c, e = d.ui.ddmanager.droppables[a.options.scope] || [], f = b ? b.type : null, g = (a.currentItem || a.element).find(":data(ui-droppable)").addBack();
    var h = 0;
    a: for (; e.length > h; h++) {
      if (!(e[h].options.disabled || a && !e[h].accept.call(e[h].element[0], a.currentItem || a.element))) {
        for (c = 0; g.length > c; c++) {
          if (g[c] === e[h].element[0]) {
            e[h].proportions().height = 0;
            continue a;
          }
        }
        e[h].visible = "none" !== e[h].element.css("display");
        e[h].visible && ("mousedown" === f && e[h]._activate.call(e[h], b), e[h].offset = e[h].element.offset(), e[h].proportions({width:e[h].element[0].offsetWidth, height:e[h].element[0].offsetHeight}));
      }
    }
  }, drop:function(a, b) {
    var c = !1;
    return d.each((d.ui.ddmanager.droppables[a.options.scope] || []).slice(), function() {
      this.options && (!this.options.disabled && this.visible && d.ui.intersect(a, this, this.options.tolerance, b) && (c = this._drop.call(this, b) || c), !this.options.disabled && this.visible && this.accept.call(this.element[0], a.currentItem || a.element) && (this.isout = !0, this.isover = !1, this._deactivate.call(this, b)));
    }), c;
  }, dragStart:function(a, b) {
    a.element.parentsUntil("body").bind("scroll.droppable", function() {
      a.options.refreshPositions || d.ui.ddmanager.prepareOffsets(a, b);
    });
  }, drag:function(a, b) {
    a.options.refreshPositions && d.ui.ddmanager.prepareOffsets(a, b);
    d.each(d.ui.ddmanager.droppables[a.options.scope] || [], function() {
      if (!this.options.disabled && !this.greedyChild && this.visible) {
        var c, e, f, g = d.ui.intersect(a, this, this.options.tolerance, b);
        (g = !g && this.isover ? "isout" : g && !this.isover ? "isover" : null) && (this.options.greedy && (e = this.options.scope, f = this.element.parents(":data(ui-droppable)").filter(function() {
          return d(this).droppable("instance").options.scope === e;
        }), f.length && (c = d(f[0]).droppable("instance"), c.greedyChild = "isover" === g)), c && "isover" === g && (c.isover = !1, c.isout = !0, c._out.call(c, b)), this[g] = !0, this["isout" === g ? "isover" : "isout"] = !1, this["isover" === g ? "_over" : "_out"].call(this, b), c && "isout" === g && (c.isout = !1, c.isover = !0, c._over.call(c, b)));
      }
    });
  }, dragStop:function(a, b) {
    a.element.parentsUntil("body").unbind("scroll.droppable");
    a.options.refreshPositions || d.ui.ddmanager.prepareOffsets(a, b);
  }};
  d.ui.droppable;
  d.widget("ui.resizable", d.ui.mouse, {version:"1.11.4", widgetEventPrefix:"resize", options:{alsoResize:!1, animate:!1, animateDuration:"slow", animateEasing:"swing", aspectRatio:!1, autoHide:!1, containment:!1, ghost:!1, grid:!1, handles:"e,s,se", helper:!1, maxHeight:null, maxWidth:null, minHeight:10, minWidth:10, zIndex:90, resize:null, start:null, stop:null}, _num:function(a) {
    return parseInt(a, 10) || 0;
  }, _isNumber:function(a) {
    return !isNaN(parseInt(a, 10));
  }, _hasScroll:function(a, b) {
    if ("hidden" === d(a).css("overflow")) {
      return !1;
    }
    b = b && "left" === b ? "scrollLeft" : "scrollTop";
    var c = !1;
    return 0 < a[b] ? !0 : (a[b] = 1, c = 0 < a[b], a[b] = 0, c);
  }, _create:function() {
    var a, b = this, c = this.options;
    if (this.element.addClass("ui-resizable"), d.extend(this, {_aspectRatio:!!c.aspectRatio, aspectRatio:c.aspectRatio, originalElement:this.element, _proportionallyResizeElements:[], _helper:c.helper || c.ghost || c.animate ? c.helper || "ui-resizable-helper" : null}), this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i) && (this.element.wrap(d("\x3cdiv class\x3d'ui-wrapper' style\x3d'overflow: hidden;'\x3e\x3c/div\x3e").css({position:this.element.css("position"), width:this.element.outerWidth(), 
    height:this.element.outerHeight(), top:this.element.css("top"), left:this.element.css("left")})), this.element = this.element.parent().data("ui-resizable", this.element.resizable("instance")), this.elementIsWrapper = !0, this.element.css({marginLeft:this.originalElement.css("marginLeft"), marginTop:this.originalElement.css("marginTop"), marginRight:this.originalElement.css("marginRight"), marginBottom:this.originalElement.css("marginBottom")}), this.originalElement.css({marginLeft:0, marginTop:0, 
    marginRight:0, marginBottom:0}), this.originalResizeStyle = this.originalElement.css("resize"), this.originalElement.css("resize", "none"), this._proportionallyResizeElements.push(this.originalElement.css({position:"static", zoom:1, display:"block"})), this.originalElement.css({margin:this.originalElement.css("margin")}), this._proportionallyResize()), this.handles = c.handles || (d(".ui-resizable-handle", this.element).length ? {n:".ui-resizable-n", e:".ui-resizable-e", s:".ui-resizable-s", 
    w:".ui-resizable-w", se:".ui-resizable-se", sw:".ui-resizable-sw", ne:".ui-resizable-ne", nw:".ui-resizable-nw"} : "e,s,se"), this._handles = d(), this.handles.constructor === String) {
      "all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw");
      var e = this.handles.split(",");
      this.handles = {};
      for (a = 0; e.length > a; a++) {
        var f = d.trim(e[a]);
        var g = "ui-resizable-" + f;
        var h = d("\x3cdiv class\x3d'ui-resizable-handle " + g + "'\x3e\x3c/div\x3e");
        h.css({zIndex:c.zIndex});
        "se" === f && h.addClass("ui-icon ui-icon-gripsmall-diagonal-se");
        this.handles[f] = ".ui-resizable-" + f;
        this.element.append(h);
      }
    }
    this._renderAxis = function(a) {
      var c, e, f, g;
      a = a || this.element;
      for (c in this.handles) {
        this.handles[c].constructor === String ? this.handles[c] = this.element.children(this.handles[c]).first().show() : (this.handles[c].jquery || this.handles[c].nodeType) && (this.handles[c] = d(this.handles[c]), this._on(this.handles[c], {mousedown:b._mouseDown})), this.elementIsWrapper && this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i) && (e = d(this.handles[c], this.element), g = /sw|ne|nw|se|n|s/.test(c) ? e.outerHeight() : e.outerWidth(), f = ["padding", /ne|nw|n/.test(c) ? 
        "Top" : /se|sw|s/.test(c) ? "Bottom" : /^e$/.test(c) ? "Right" : "Left"].join(""), a.css(f, g), this._proportionallyResize()), this._handles = this._handles.add(this.handles[c]);
      }
    };
    this._renderAxis(this.element);
    this._handles = this._handles.add(this.element.find(".ui-resizable-handle"));
    this._handles.disableSelection();
    this._handles.mouseover(function() {
      b.resizing || (this.className && (h = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)), b.axis = h && h[1] ? h[1] : "se");
    });
    c.autoHide && (this._handles.hide(), d(this.element).addClass("ui-resizable-autohide").mouseenter(function() {
      c.disabled || (d(this).removeClass("ui-resizable-autohide"), b._handles.show());
    }).mouseleave(function() {
      c.disabled || b.resizing || (d(this).addClass("ui-resizable-autohide"), b._handles.hide());
    }));
    this._mouseInit();
  }, _destroy:function() {
    this._mouseDestroy();
    var a, b = function(a) {
      d(a).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove();
    };
    return this.elementIsWrapper && (b(this.element), a = this.element, this.originalElement.css({position:a.css("position"), width:a.outerWidth(), height:a.outerHeight(), top:a.css("top"), left:a.css("left")}).insertAfter(a), a.remove()), this.originalElement.css("resize", this.originalResizeStyle), b(this.originalElement), this;
  }, _mouseCapture:function(a) {
    var b, c = !1;
    for (b in this.handles) {
      var e = d(this.handles[b])[0];
      (e === a.target || d.contains(e, a.target)) && (c = !0);
    }
    return !this.options.disabled && c;
  }, _mouseStart:function(a) {
    var b, c, e, f = this.options, g = this.element;
    return this.resizing = !0, this._renderProxy(), b = this._num(this.helper.css("left")), c = this._num(this.helper.css("top")), f.containment && (b += d(f.containment).scrollLeft() || 0, c += d(f.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = {left:b, top:c}, this.size = this._helper ? {width:this.helper.width(), height:this.helper.height()} : {width:g.width(), height:g.height()}, this.originalSize = this._helper ? {width:g.outerWidth(), height:g.outerHeight()} : 
    {width:g.width(), height:g.height()}, this.sizeDiff = {width:g.outerWidth() - g.width(), height:g.outerHeight() - g.height()}, this.originalPosition = {left:b, top:c}, this.originalMousePosition = {left:a.pageX, top:a.pageY}, this.aspectRatio = "number" == typeof f.aspectRatio ? f.aspectRatio : this.originalSize.width / this.originalSize.height || 1, e = d(".ui-resizable-" + this.axis).css("cursor"), d("body").css("cursor", "auto" === e ? this.axis + "-resize" : e), g.addClass("ui-resizable-resizing"), 
    this._propagate("start", a), !0;
  }, _mouseDrag:function(a) {
    var b, c, e = this.originalMousePosition, f = a.pageX - e.left || 0;
    e = a.pageY - e.top || 0;
    var g = this._change[this.axis];
    return this._updatePrevProperties(), g ? (b = g.apply(this, [a, f, e]), this._updateVirtualBoundaries(a.shiftKey), (this._aspectRatio || a.shiftKey) && (b = this._updateRatio(b, a)), b = this._respectSize(b, a), this._updateCache(b), this._propagate("resize", a), c = this._applyChanges(), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), d.isEmptyObject(c) || (this._updatePrevProperties(), this._trigger("resize", a, this.ui()), this._applyChanges()), 
    !1) : !1;
  }, _mouseStop:function(a) {
    this.resizing = !1;
    var b, c, e, f, g, h, k, l = this.options;
    return this._helper && (b = this._proportionallyResizeElements, c = b.length && /textarea/i.test(b[0].nodeName), e = c && this._hasScroll(b[0], "left") ? 0 : this.sizeDiff.height, f = c ? 0 : this.sizeDiff.width, g = {width:this.helper.width() - f, height:this.helper.height() - e}, h = parseInt(this.element.css("left"), 10) + (this.position.left - this.originalPosition.left) || null, k = parseInt(this.element.css("top"), 10) + (this.position.top - this.originalPosition.top) || null, l.animate || 
    this.element.css(d.extend(g, {top:k, left:h})), this.helper.height(this.size.height), this.helper.width(this.size.width), this._helper && !l.animate && this._proportionallyResize()), d("body").css("cursor", "auto"), this.element.removeClass("ui-resizable-resizing"), this._propagate("stop", a), this._helper && this.helper.remove(), !1;
  }, _updatePrevProperties:function() {
    this.prevPosition = {top:this.position.top, left:this.position.left};
    this.prevSize = {width:this.size.width, height:this.size.height};
  }, _applyChanges:function() {
    var a = {};
    return this.position.top !== this.prevPosition.top && (a.top = this.position.top + "px"), this.position.left !== this.prevPosition.left && (a.left = this.position.left + "px"), this.size.width !== this.prevSize.width && (a.width = this.size.width + "px"), this.size.height !== this.prevSize.height && (a.height = this.size.height + "px"), this.helper.css(a), a;
  }, _updateVirtualBoundaries:function(a) {
    var b, c, d, f;
    var g = this.options;
    g = {minWidth:this._isNumber(g.minWidth) ? g.minWidth : 0, maxWidth:this._isNumber(g.maxWidth) ? g.maxWidth : 1 / 0, minHeight:this._isNumber(g.minHeight) ? g.minHeight : 0, maxHeight:this._isNumber(g.maxHeight) ? g.maxHeight : 1 / 0};
    (this._aspectRatio || a) && (b = g.minHeight * this.aspectRatio, d = g.minWidth / this.aspectRatio, c = g.maxHeight * this.aspectRatio, f = g.maxWidth / this.aspectRatio, b > g.minWidth && (g.minWidth = b), d > g.minHeight && (g.minHeight = d), g.maxWidth > c && (g.maxWidth = c), g.maxHeight > f && (g.maxHeight = f));
    this._vBoundaries = g;
  }, _updateCache:function(a) {
    this.offset = this.helper.offset();
    this._isNumber(a.left) && (this.position.left = a.left);
    this._isNumber(a.top) && (this.position.top = a.top);
    this._isNumber(a.height) && (this.size.height = a.height);
    this._isNumber(a.width) && (this.size.width = a.width);
  }, _updateRatio:function(a) {
    var b = this.position, c = this.size, d = this.axis;
    return this._isNumber(a.height) ? a.width = a.height * this.aspectRatio : this._isNumber(a.width) && (a.height = a.width / this.aspectRatio), "sw" === d && (a.left = b.left + (c.width - a.width), a.top = null), "nw" === d && (a.top = b.top + (c.height - a.height), a.left = b.left + (c.width - a.width)), a;
  }, _respectSize:function(a) {
    var b = this._vBoundaries, c = this.axis, d = this._isNumber(a.width) && b.maxWidth && b.maxWidth < a.width, f = this._isNumber(a.height) && b.maxHeight && b.maxHeight < a.height, g = this._isNumber(a.width) && b.minWidth && b.minWidth > a.width, h = this._isNumber(a.height) && b.minHeight && b.minHeight > a.height, k = this.originalPosition.left + this.originalSize.width, l = this.position.top + this.size.height, m = /sw|nw|w/.test(c);
    c = /nw|ne|n/.test(c);
    return g && (a.width = b.minWidth), h && (a.height = b.minHeight), d && (a.width = b.maxWidth), f && (a.height = b.maxHeight), g && m && (a.left = k - b.minWidth), d && m && (a.left = k - b.maxWidth), h && c && (a.top = l - b.minHeight), f && c && (a.top = l - b.maxHeight), a.width || a.height || a.left || !a.top ? a.width || a.height || a.top || !a.left || (a.left = null) : a.top = null, a;
  }, _getPaddingPlusBorderDimensions:function(a) {
    var b = 0, c = [], d = [a.css("borderTopWidth"), a.css("borderRightWidth"), a.css("borderBottomWidth"), a.css("borderLeftWidth")];
    for (a = [a.css("paddingTop"), a.css("paddingRight"), a.css("paddingBottom"), a.css("paddingLeft")]; 4 > b; b++) {
      c[b] = parseInt(d[b], 10) || 0, c[b] += parseInt(a[b], 10) || 0;
    }
    return {height:c[0] + c[2], width:c[1] + c[3]};
  }, _proportionallyResize:function() {
    if (this._proportionallyResizeElements.length) {
      for (var a, b = 0, c = this.helper || this.element; this._proportionallyResizeElements.length > b; b++) {
        a = this._proportionallyResizeElements[b], this.outerDimensions || (this.outerDimensions = this._getPaddingPlusBorderDimensions(a)), a.css({height:c.height() - this.outerDimensions.height || 0, width:c.width() - this.outerDimensions.width || 0});
      }
    }
  }, _renderProxy:function() {
    var a = this.options;
    this.elementOffset = this.element.offset();
    this._helper ? (this.helper = this.helper || d("\x3cdiv style\x3d'overflow:hidden;'\x3e\x3c/div\x3e"), this.helper.addClass(this._helper).css({width:this.element.outerWidth() - 1, height:this.element.outerHeight() - 1, position:"absolute", left:this.elementOffset.left + "px", top:this.elementOffset.top + "px", zIndex:++a.zIndex}), this.helper.appendTo("body").disableSelection()) : this.helper = this.element;
  }, _change:{e:function(a, b) {
    return {width:this.originalSize.width + b};
  }, w:function(a, b) {
    return {left:this.originalPosition.left + b, width:this.originalSize.width - b};
  }, n:function(a, b, c) {
    return {top:this.originalPosition.top + c, height:this.originalSize.height - c};
  }, s:function(a, b, c) {
    return {height:this.originalSize.height + c};
  }, se:function(a, b, c) {
    return d.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [a, b, c]));
  }, sw:function(a, b, c) {
    return d.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [a, b, c]));
  }, ne:function(a, b, c) {
    return d.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [a, b, c]));
  }, nw:function(a, b, c) {
    return d.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [a, b, c]));
  }}, _propagate:function(a, b) {
    d.ui.plugin.call(this, a, [b, this.ui()]);
    "resize" !== a && this._trigger(a, b, this.ui());
  }, plugins:{}, ui:function() {
    return {originalElement:this.originalElement, element:this.element, helper:this.helper, position:this.position, size:this.size, originalSize:this.originalSize, originalPosition:this.originalPosition};
  }});
  d.ui.plugin.add("resizable", "animate", {stop:function(a) {
    var b = d(this).resizable("instance"), c = b.options, e = b._proportionallyResizeElements, f = e.length && /textarea/i.test(e[0].nodeName), g = f && b._hasScroll(e[0], "left") ? 0 : b.sizeDiff.height;
    f = {width:b.size.width - (f ? 0 : b.sizeDiff.width), height:b.size.height - g};
    g = parseInt(b.element.css("left"), 10) + (b.position.left - b.originalPosition.left) || null;
    var h = parseInt(b.element.css("top"), 10) + (b.position.top - b.originalPosition.top) || null;
    b.element.animate(d.extend(f, h && g ? {top:h, left:g} : {}), {duration:c.animateDuration, easing:c.animateEasing, step:function() {
      var c = {width:parseInt(b.element.css("width"), 10), height:parseInt(b.element.css("height"), 10), top:parseInt(b.element.css("top"), 10), left:parseInt(b.element.css("left"), 10)};
      e && e.length && d(e[0]).css({width:c.width, height:c.height});
      b._updateCache(c);
      b._propagate("resize", a);
    }});
  }});
  d.ui.plugin.add("resizable", "containment", {start:function() {
    var a, b, c, e, f, g, h, k = d(this).resizable("instance"), l = k.element, m = k.options.containment;
    (l = m instanceof d ? m.get(0) : /parent/.test(m) ? l.parent().get(0) : m) && (k.containerElement = d(l), /document/.test(m) || m === document ? (k.containerOffset = {left:0, top:0}, k.containerPosition = {left:0, top:0}, k.parentData = {element:d(document), left:0, top:0, width:d(document).width(), height:d(document).height() || document.body.parentNode.scrollHeight}) : (a = d(l), b = [], d(["Top", "Right", "Left", "Bottom"]).each(function(c, d) {
      b[c] = k._num(a.css("padding" + d));
    }), k.containerOffset = a.offset(), k.containerPosition = a.position(), k.containerSize = {height:a.innerHeight() - b[3], width:a.innerWidth() - b[1]}, c = k.containerOffset, e = k.containerSize.height, f = k.containerSize.width, g = k._hasScroll(l, "left") ? l.scrollWidth : f, h = k._hasScroll(l) ? l.scrollHeight : e, k.parentData = {element:l, left:c.left, top:c.top, width:g, height:h}));
  }, resize:function(a) {
    var b = d(this).resizable("instance");
    var c = b.options;
    var e = b.containerOffset;
    var f = b.position;
    a = b._aspectRatio || a.shiftKey;
    var g = {top:0, left:0}, h = b.containerElement, k = !0;
    h[0] !== document && /static/.test(h.css("position")) && (g = e);
    f.left < (b._helper ? e.left : 0) && (b.size.width += b._helper ? b.position.left - e.left : b.position.left - g.left, a && (b.size.height = b.size.width / b.aspectRatio, k = !1), b.position.left = c.helper ? e.left : 0);
    f.top < (b._helper ? e.top : 0) && (b.size.height += b._helper ? b.position.top - e.top : b.position.top, a && (b.size.width = b.size.height * b.aspectRatio, k = !1), b.position.top = b._helper ? e.top : 0);
    c = b.containerElement.get(0) === b.element.parent().get(0);
    f = /relative|absolute/.test(b.containerElement.css("position"));
    c && f ? (b.offset.left = b.parentData.left + b.position.left, b.offset.top = b.parentData.top + b.position.top) : (b.offset.left = b.element.offset().left, b.offset.top = b.element.offset().top);
    c = Math.abs(b.sizeDiff.width + (b._helper ? b.offset.left - g.left : b.offset.left - e.left));
    e = Math.abs(b.sizeDiff.height + (b._helper ? b.offset.top - g.top : b.offset.top - e.top));
    c + b.size.width >= b.parentData.width && (b.size.width = b.parentData.width - c, a && (b.size.height = b.size.width / b.aspectRatio, k = !1));
    e + b.size.height >= b.parentData.height && (b.size.height = b.parentData.height - e, a && (b.size.width = b.size.height * b.aspectRatio, k = !1));
    k || (b.position.left = b.prevPosition.left, b.position.top = b.prevPosition.top, b.size.width = b.prevSize.width, b.size.height = b.prevSize.height);
  }, stop:function() {
    var a = d(this).resizable("instance"), b = a.options, c = a.containerOffset, e = a.containerPosition, f = a.containerElement, g = d(a.helper), h = g.offset(), k = g.outerWidth() - a.sizeDiff.width;
    g = g.outerHeight() - a.sizeDiff.height;
    a._helper && !b.animate && /relative/.test(f.css("position")) && d(this).css({left:h.left - e.left - c.left, width:k, height:g});
    a._helper && !b.animate && /static/.test(f.css("position")) && d(this).css({left:h.left - e.left - c.left, width:k, height:g});
  }});
  d.ui.plugin.add("resizable", "alsoResize", {start:function() {
    var a = d(this).resizable("instance").options;
    d(a.alsoResize).each(function() {
      var a = d(this);
      a.data("ui-resizable-alsoresize", {width:parseInt(a.width(), 10), height:parseInt(a.height(), 10), left:parseInt(a.css("left"), 10), top:parseInt(a.css("top"), 10)});
    });
  }, resize:function(a, b) {
    a = d(this).resizable("instance");
    var c = a.originalSize, e = a.originalPosition, f = {height:a.size.height - c.height || 0, width:a.size.width - c.width || 0, top:a.position.top - e.top || 0, left:a.position.left - e.left || 0};
    d(a.options.alsoResize).each(function() {
      var a = d(this), c = d(this).data("ui-resizable-alsoresize"), e = {}, l = a.parents(b.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
      d.each(l, function(a, b) {
        (a = (c[b] || 0) + (f[b] || 0)) && 0 <= a && (e[b] = a || null);
      });
      a.css(e);
    });
  }, stop:function() {
    d(this).removeData("resizable-alsoresize");
  }});
  d.ui.plugin.add("resizable", "ghost", {start:function() {
    var a = d(this).resizable("instance"), b = a.options, c = a.size;
    a.ghost = a.originalElement.clone();
    a.ghost.css({opacity:.25, display:"block", position:"relative", height:c.height, width:c.width, margin:0, left:0, top:0}).addClass("ui-resizable-ghost").addClass("string" == typeof b.ghost ? b.ghost : "");
    a.ghost.appendTo(a.helper);
  }, resize:function() {
    var a = d(this).resizable("instance");
    a.ghost && a.ghost.css({position:"relative", height:a.size.height, width:a.size.width});
  }, stop:function() {
    var a = d(this).resizable("instance");
    a.ghost && a.helper && a.helper.get(0).removeChild(a.ghost.get(0));
  }});
  d.ui.plugin.add("resizable", "grid", {resize:function() {
    var a, b = d(this).resizable("instance"), c = b.options, e = b.size, f = b.originalSize, g = b.originalPosition, h = b.axis, k = "number" == typeof c.grid ? [c.grid, c.grid] : c.grid, l = k[0] || 1, m = k[1] || 1, n = Math.round((e.width - f.width) / l) * l;
    e = Math.round((e.height - f.height) / m) * m;
    var p = f.width + n, q = f.height + e, t = c.maxWidth && p > c.maxWidth, r = c.maxHeight && q > c.maxHeight, u = c.minWidth && c.minWidth > p, x = c.minHeight && c.minHeight > q;
    c.grid = k;
    u && (p += l);
    x && (q += m);
    t && (p -= l);
    r && (q -= m);
    /^(se|s|e)$/.test(h) ? (b.size.width = p, b.size.height = q) : /^(ne)$/.test(h) ? (b.size.width = p, b.size.height = q, b.position.top = g.top - e) : /^(sw)$/.test(h) ? (b.size.width = p, b.size.height = q, b.position.left = g.left - n) : ((0 >= q - m || 0 >= p - l) && (a = b._getPaddingPlusBorderDimensions(this)), 0 < q - m ? (b.size.height = q, b.position.top = g.top - e) : (q = m - a.height, b.size.height = q, b.position.top = g.top + f.height - q), 0 < p - l ? (b.size.width = p, b.position.left = 
    g.left - n) : (p = l - a.width, b.size.width = p, b.position.left = g.left + f.width - p));
  }});
  d.ui.resizable;
  d.widget("ui.selectable", d.ui.mouse, {version:"1.11.4", options:{appendTo:"body", autoRefresh:!0, distance:0, filter:"*", tolerance:"touch", selected:null, selecting:null, start:null, stop:null, unselected:null, unselecting:null}, _create:function() {
    var a, b = this;
    this.element.addClass("ui-selectable");
    this.dragged = !1;
    this.refresh = function() {
      a = d(b.options.filter, b.element[0]);
      a.addClass("ui-selectee");
      a.each(function() {
        var a = d(this), b = a.offset();
        d.data(this, "selectable-item", {element:this, $element:a, left:b.left, top:b.top, right:b.left + a.outerWidth(), bottom:b.top + a.outerHeight(), startselected:!1, selected:a.hasClass("ui-selected"), selecting:a.hasClass("ui-selecting"), unselecting:a.hasClass("ui-unselecting")});
      });
    };
    this.refresh();
    this.selectees = a.addClass("ui-selectee");
    this._mouseInit();
    this.helper = d("\x3cdiv class\x3d'ui-selectable-helper'\x3e\x3c/div\x3e");
  }, _destroy:function() {
    this.selectees.removeClass("ui-selectee").removeData("selectable-item");
    this.element.removeClass("ui-selectable ui-selectable-disabled");
    this._mouseDestroy();
  }, _mouseStart:function(a) {
    var b = this, c = this.options;
    this.opos = [a.pageX, a.pageY];
    this.options.disabled || (this.selectees = d(c.filter, this.element[0]), this._trigger("start", a), d(c.appendTo).append(this.helper), this.helper.css({left:a.pageX, top:a.pageY, width:0, height:0}), c.autoRefresh && this.refresh(), this.selectees.filter(".ui-selected").each(function() {
      var c = d.data(this, "selectable-item");
      c.startselected = !0;
      a.metaKey || a.ctrlKey || (c.$element.removeClass("ui-selected"), c.selected = !1, c.$element.addClass("ui-unselecting"), c.unselecting = !0, b._trigger("unselecting", a, {unselecting:c.element}));
    }), d(a.target).parents().addBack().each(function() {
      var c, f = d.data(this, "selectable-item");
      return f ? (c = !a.metaKey && !a.ctrlKey || !f.$element.hasClass("ui-selected"), f.$element.removeClass(c ? "ui-unselecting" : "ui-selected").addClass(c ? "ui-selecting" : "ui-unselecting"), f.unselecting = !c, f.selecting = c, f.selected = c, c ? b._trigger("selecting", a, {selecting:f.element}) : b._trigger("unselecting", a, {unselecting:f.element}), !1) : void 0;
    }));
  }, _mouseDrag:function(a) {
    if (this.dragged = !0, !this.options.disabled) {
      var b, c = this, e = this.options, f = this.opos[0], g = this.opos[1], h = a.pageX, k = a.pageY;
      return f > h && (b = h, h = f, f = b), g > k && (b = k, k = g, g = b), this.helper.css({left:f, top:g, width:h - f, height:k - g}), this.selectees.each(function() {
        var b = d.data(this, "selectable-item"), m = !1;
        b && b.element !== c.element[0] && ("touch" === e.tolerance ? m = !(b.left > h || f > b.right || b.top > k || g > b.bottom) : "fit" === e.tolerance && (m = b.left > f && h > b.right && b.top > g && k > b.bottom), m ? (b.selected && (b.$element.removeClass("ui-selected"), b.selected = !1), b.unselecting && (b.$element.removeClass("ui-unselecting"), b.unselecting = !1), b.selecting || (b.$element.addClass("ui-selecting"), b.selecting = !0, c._trigger("selecting", a, {selecting:b.element}))) : 
        (b.selecting && ((a.metaKey || a.ctrlKey) && b.startselected ? (b.$element.removeClass("ui-selecting"), b.selecting = !1, b.$element.addClass("ui-selected"), b.selected = !0) : (b.$element.removeClass("ui-selecting"), b.selecting = !1, b.startselected && (b.$element.addClass("ui-unselecting"), b.unselecting = !0), c._trigger("unselecting", a, {unselecting:b.element}))), b.selected && (a.metaKey || a.ctrlKey || b.startselected || (b.$element.removeClass("ui-selected"), b.selected = !1, b.$element.addClass("ui-unselecting"), 
        b.unselecting = !0, c._trigger("unselecting", a, {unselecting:b.element})))));
      }), !1;
    }
  }, _mouseStop:function(a) {
    var b = this;
    return this.dragged = !1, d(".ui-unselecting", this.element[0]).each(function() {
      var c = d.data(this, "selectable-item");
      c.$element.removeClass("ui-unselecting");
      c.unselecting = !1;
      c.startselected = !1;
      b._trigger("unselected", a, {unselected:c.element});
    }), d(".ui-selecting", this.element[0]).each(function() {
      var c = d.data(this, "selectable-item");
      c.$element.removeClass("ui-selecting").addClass("ui-selected");
      c.selecting = !1;
      c.selected = !0;
      c.startselected = !0;
      b._trigger("selected", a, {selected:c.element});
    }), this._trigger("stop", a), this.helper.remove(), !1;
  }});
  d.widget("ui.sortable", d.ui.mouse, {version:"1.11.4", widgetEventPrefix:"sort", ready:!1, options:{appendTo:"parent", axis:!1, connectWith:!1, containment:!1, cursor:"auto", cursorAt:!1, dropOnEmpty:!0, forcePlaceholderSize:!1, forceHelperSize:!1, grid:!1, handle:!1, helper:"original", items:"\x3e *", opacity:!1, placeholder:!1, revert:!1, scroll:!0, scrollSensitivity:20, scrollSpeed:20, scope:"default", tolerance:"intersect", zIndex:1e3, activate:null, beforeStop:null, change:null, deactivate:null, 
  out:null, over:null, receive:null, remove:null, sort:null, start:null, stop:null, update:null}, _isOverAxis:function(a, b, c) {
    return a >= b && b + c > a;
  }, _isFloating:function(a) {
    return /left|right/.test(a.css("float")) || /inline|table-cell/.test(a.css("display"));
  }, _create:function() {
    this.containerCache = {};
    this.element.addClass("ui-sortable");
    this.refresh();
    this.offset = this.element.offset();
    this._mouseInit();
    this._setHandleClassName();
    this.ready = !0;
  }, _setOption:function(a, b) {
    this._super(a, b);
    "handle" === a && this._setHandleClassName();
  }, _setHandleClassName:function() {
    this.element.find(".ui-sortable-handle").removeClass("ui-sortable-handle");
    d.each(this.items, function() {
      (this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item).addClass("ui-sortable-handle");
    });
  }, _destroy:function() {
    this.element.removeClass("ui-sortable ui-sortable-disabled").find(".ui-sortable-handle").removeClass("ui-sortable-handle");
    this._mouseDestroy();
    for (var a = this.items.length - 1; 0 <= a; a--) {
      this.items[a].item.removeData(this.widgetName + "-item");
    }
    return this;
  }, _mouseCapture:function(a, b) {
    var c = null, e = !1, f = this;
    return this.reverting ? !1 : this.options.disabled || "static" === this.options.type ? !1 : (this._refreshItems(a), d(a.target).parents().each(function() {
      return d.data(this, f.widgetName + "-item") === f ? (c = d(this), !1) : void 0;
    }), d.data(a.target, f.widgetName + "-item") === f && (c = d(a.target)), c ? !this.options.handle || b || (d(this.options.handle, c).find("*").addBack().each(function() {
      this === a.target && (e = !0);
    }), e) ? (this.currentItem = c, this._removeCurrentsFromItems(), !0) : !1 : !1);
  }, _mouseStart:function(a, b, c) {
    var e;
    b = this.options;
    if (this.currentContainer = this, this.refreshPositions(), this.helper = this._createHelper(a), this._cacheHelperProportions(), this._cacheMargins(), this.scrollParent = this.helper.scrollParent(), this.offset = this.currentItem.offset(), this.offset = {top:this.offset.top - this.margins.top, left:this.offset.left - this.margins.left}, d.extend(this.offset, {click:{left:a.pageX - this.offset.left, top:a.pageY - this.offset.top}, parent:this._getParentOffset(), relative:this._getRelativeOffset()}), 
    this.helper.css("position", "absolute"), this.cssPosition = this.helper.css("position"), this.originalPosition = this._generatePosition(a), this.originalPageX = a.pageX, this.originalPageY = a.pageY, b.cursorAt && this._adjustOffsetFromHelper(b.cursorAt), this.domPosition = {prev:this.currentItem.prev()[0], parent:this.currentItem.parent()[0]}, this.helper[0] !== this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), b.containment && this._setContainment(), b.cursor && "auto" !== 
    b.cursor && (e = this.document.find("body"), this.storedCursor = e.css("cursor"), e.css("cursor", b.cursor), this.storedStylesheet = d("\x3cstyle\x3e*{ cursor: " + b.cursor + " !important; }\x3c/style\x3e").appendTo(e)), b.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), this.helper.css("opacity", b.opacity)), b.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), this.helper.css("zIndex", b.zIndex)), this.scrollParent[0] !== 
    this.document[0] && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this._trigger("start", a, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(), !c) {
      for (c = this.containers.length - 1; 0 <= c; c--) {
        this.containers[c]._trigger("activate", a, this._uiHash(this));
      }
    }
    return d.ui.ddmanager && (d.ui.ddmanager.current = this), d.ui.ddmanager && !b.dropBehaviour && d.ui.ddmanager.prepareOffsets(this, a), this.dragging = !0, this.helper.addClass("ui-sortable-helper"), this._mouseDrag(a), !0;
  }, _mouseDrag:function(a) {
    var b, c, e;
    var f = this.options;
    var g = !1;
    this.position = this._generatePosition(a);
    this.positionAbs = this._convertPositionTo("absolute");
    this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs);
    this.options.scroll && (this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - a.pageY < f.scrollSensitivity ? this.scrollParent[0].scrollTop = g = this.scrollParent[0].scrollTop + f.scrollSpeed : a.pageY - this.overflowOffset.top < f.scrollSensitivity && (this.scrollParent[0].scrollTop = g = this.scrollParent[0].scrollTop - f.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - 
    a.pageX < f.scrollSensitivity ? this.scrollParent[0].scrollLeft = g = this.scrollParent[0].scrollLeft + f.scrollSpeed : a.pageX - this.overflowOffset.left < f.scrollSensitivity && (this.scrollParent[0].scrollLeft = g = this.scrollParent[0].scrollLeft - f.scrollSpeed)) : (a.pageY - this.document.scrollTop() < f.scrollSensitivity ? g = this.document.scrollTop(this.document.scrollTop() - f.scrollSpeed) : this.window.height() - (a.pageY - this.document.scrollTop()) < f.scrollSensitivity && (g = this.document.scrollTop(this.document.scrollTop() + 
    f.scrollSpeed)), a.pageX - this.document.scrollLeft() < f.scrollSensitivity ? g = this.document.scrollLeft(this.document.scrollLeft() - f.scrollSpeed) : this.window.width() - (a.pageX - this.document.scrollLeft()) < f.scrollSensitivity && (g = this.document.scrollLeft(this.document.scrollLeft() + f.scrollSpeed))), !1 !== g && d.ui.ddmanager && !f.dropBehaviour && d.ui.ddmanager.prepareOffsets(this, a));
    this.positionAbs = this._convertPositionTo("absolute");
    this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px");
    this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px");
    for (f = this.items.length - 1; 0 <= f; f--) {
      if (b = this.items[f], c = b.item[0], e = this._intersectsWithPointer(b), e && b.instance === this.currentContainer && c !== this.currentItem[0] && this.placeholder[1 === e ? "next" : "prev"]()[0] !== c && !d.contains(this.placeholder[0], c) && ("semi-dynamic" === this.options.type ? !d.contains(this.element[0], c) : !0)) {
        if (this.direction = 1 === e ? "down" : "up", "pointer" !== this.options.tolerance && !this._intersectsWithSides(b)) {
          break;
        }
        this._rearrange(a, b);
        this._trigger("change", a, this._uiHash());
        break;
      }
    }
    return this._contactContainers(a), d.ui.ddmanager && d.ui.ddmanager.drag(this, a), this._trigger("sort", a, this._uiHash()), this.lastPositionAbs = this.positionAbs, !1;
  }, _mouseStop:function(a, b) {
    if (a) {
      if (d.ui.ddmanager && !this.options.dropBehaviour && d.ui.ddmanager.drop(this, a), this.options.revert) {
        var c = this;
        b = this.placeholder.offset();
        var e = this.options.axis, f = {};
        e && "x" !== e || (f.left = b.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft));
        e && "y" !== e || (f.top = b.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop));
        this.reverting = !0;
        d(this.helper).animate(f, parseInt(this.options.revert, 10) || 500, function() {
          c._clear(a);
        });
      } else {
        this._clear(a, b);
      }
      return !1;
    }
  }, cancel:function() {
    if (this.dragging) {
      this._mouseUp({target:null});
      "original" === this.options.helper ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show();
      for (var a = this.containers.length - 1; 0 <= a; a--) {
        this.containers[a]._trigger("deactivate", null, this._uiHash(this)), this.containers[a].containerCache.over && (this.containers[a]._trigger("out", null, this._uiHash(this)), this.containers[a].containerCache.over = 0);
      }
    }
    return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), "original" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(), d.extend(this, {helper:null, dragging:!1, reverting:!1, _noFinalSort:null}), this.domPosition.prev ? d(this.domPosition.prev).after(this.currentItem) : d(this.domPosition.parent).prepend(this.currentItem)), this;
  }, serialize:function(a) {
    var b = this._getItemsAsjQuery(a && a.connected), c = [];
    return a = a || {}, d(b).each(function() {
      var b = (d(a.item || this).attr(a.attribute || "id") || "").match(a.expression || /(.+)[\-=_](.+)/);
      b && c.push((a.key || b[1] + "[]") + "\x3d" + (a.key && a.expression ? b[1] : b[2]));
    }), !c.length && a.key && c.push(a.key + "\x3d"), c.join("\x26");
  }, toArray:function(a) {
    var b = this._getItemsAsjQuery(a && a.connected), c = [];
    return a = a || {}, b.each(function() {
      c.push(d(a.item || this).attr(a.attribute || "id") || "");
    }), c;
  }, _intersectsWith:function(a) {
    var b = this.positionAbs.left, c = b + this.helperProportions.width, d = this.positionAbs.top, f = d + this.helperProportions.height, g = a.left, h = g + a.width, k = a.top, l = k + a.height, m = this.offset.click.top, n = this.offset.click.left;
    m = "x" === this.options.axis || d + m > k && l > d + m;
    n = "y" === this.options.axis || b + n > g && h > b + n;
    return "pointer" === this.options.tolerance || this.options.forcePointerForContainers || "pointer" !== this.options.tolerance && this.helperProportions[this.floating ? "width" : "height"] > a[this.floating ? "width" : "height"] ? m && n : b + this.helperProportions.width / 2 > g && h > c - this.helperProportions.width / 2 && d + this.helperProportions.height / 2 > k && l > f - this.helperProportions.height / 2;
  }, _intersectsWithPointer:function(a) {
    var b = "x" === this.options.axis || this._isOverAxis(this.positionAbs.top + this.offset.click.top, a.top, a.height);
    a = "y" === this.options.axis || this._isOverAxis(this.positionAbs.left + this.offset.click.left, a.left, a.width);
    b = b && a;
    a = this._getDragVerticalDirection();
    var c = this._getDragHorizontalDirection();
    return b ? this.floating ? c && "right" === c || "down" === a ? 2 : 1 : a && ("down" === a ? 2 : 1) : !1;
  }, _intersectsWithSides:function(a) {
    var b = this._isOverAxis(this.positionAbs.top + this.offset.click.top, a.top + a.height / 2, a.height);
    a = this._isOverAxis(this.positionAbs.left + this.offset.click.left, a.left + a.width / 2, a.width);
    var c = this._getDragVerticalDirection(), d = this._getDragHorizontalDirection();
    return this.floating && d ? "right" === d && a || "left" === d && !a : c && ("down" === c && b || "up" === c && !b);
  }, _getDragVerticalDirection:function() {
    var a = this.positionAbs.top - this.lastPositionAbs.top;
    return 0 !== a && (0 < a ? "down" : "up");
  }, _getDragHorizontalDirection:function() {
    var a = this.positionAbs.left - this.lastPositionAbs.left;
    return 0 !== a && (0 < a ? "right" : "left");
  }, refresh:function(a) {
    return this._refreshItems(a), this._setHandleClassName(), this.refreshPositions(), this;
  }, _connectWith:function() {
    var a = this.options;
    return a.connectWith.constructor === String ? [a.connectWith] : a.connectWith;
  }, _getItemsAsjQuery:function(a) {
    function b() {
      f.push(this);
    }
    var c, e, f = [], g = [], h = this._connectWith();
    if (h && a) {
      for (a = h.length - 1; 0 <= a; a--) {
        var k = d(h[a], this.document[0]);
        for (c = k.length - 1; 0 <= c; c--) {
          (e = d.data(k[c], this.widgetFullName)) && e !== this && !e.options.disabled && g.push([d.isFunction(e.options.items) ? e.options.items.call(e.element) : d(e.options.items, e.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), e]);
        }
      }
    }
    g.push([d.isFunction(this.options.items) ? this.options.items.call(this.element, null, {options:this.options, item:this.currentItem}) : d(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);
    for (a = g.length - 1; 0 <= a; a--) {
      g[a][0].each(b);
    }
    return d(f);
  }, _removeCurrentsFromItems:function() {
    var a = this.currentItem.find(":data(" + this.widgetName + "-item)");
    this.items = d.grep(this.items, function(b) {
      for (var c = 0; a.length > c; c++) {
        if (a[c] === b.item[0]) {
          return !1;
        }
      }
      return !0;
    });
  }, _refreshItems:function(a) {
    this.items = [];
    this.containers = [this];
    var b, c, e, f, g = this.items, h = [[d.isFunction(this.options.items) ? this.options.items.call(this.element[0], a, {item:this.currentItem}) : d(this.options.items, this.element), this]];
    if ((f = this._connectWith()) && this.ready) {
      for (b = f.length - 1; 0 <= b; b--) {
        var k = d(f[b], this.document[0]);
        for (c = k.length - 1; 0 <= c; c--) {
          (e = d.data(k[c], this.widgetFullName)) && e !== this && !e.options.disabled && (h.push([d.isFunction(e.options.items) ? e.options.items.call(e.element[0], a, {item:this.currentItem}) : d(e.options.items, e.element), e]), this.containers.push(e));
        }
      }
    }
    for (b = h.length - 1; 0 <= b; b--) {
      for (a = h[b][1], k = h[b][0], c = 0, f = k.length; f > c; c++) {
        e = d(k[c]), e.data(this.widgetName + "-item", a), g.push({item:e, instance:a, width:0, height:0, left:0, top:0});
      }
    }
  }, refreshPositions:function(a) {
    this.floating = this.items.length ? "x" === this.options.axis || this._isFloating(this.items[0].item) : !1;
    this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
    var b, c, e;
    for (b = this.items.length - 1; 0 <= b; b--) {
      var f = this.items[b];
      f.instance !== this.currentContainer && this.currentContainer && f.item[0] !== this.currentItem[0] || (c = this.options.toleranceElement ? d(this.options.toleranceElement, f.item) : f.item, a || (f.width = c.outerWidth(), f.height = c.outerHeight()), e = c.offset(), f.left = e.left, f.top = e.top);
    }
    if (this.options.custom && this.options.custom.refreshContainers) {
      this.options.custom.refreshContainers.call(this);
    } else {
      for (b = this.containers.length - 1; 0 <= b; b--) {
        e = this.containers[b].element.offset(), this.containers[b].containerCache.left = e.left, this.containers[b].containerCache.top = e.top, this.containers[b].containerCache.width = this.containers[b].element.outerWidth(), this.containers[b].containerCache.height = this.containers[b].element.outerHeight();
      }
    }
    return this;
  }, _createPlaceholder:function(a) {
    a = a || this;
    var b, c = a.options;
    c.placeholder && c.placeholder.constructor !== String || (b = c.placeholder, c.placeholder = {element:function() {
      var c = a.currentItem[0].nodeName.toLowerCase(), f = d("\x3c" + c + "\x3e", a.document[0]).addClass(b || a.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper");
      return "tbody" === c ? a._createTrPlaceholder(a.currentItem.find("tr").eq(0), d("\x3ctr\x3e", a.document[0]).appendTo(f)) : "tr" === c ? a._createTrPlaceholder(a.currentItem, f) : "img" === c && f.attr("src", a.currentItem.attr("src")), b || f.css("visibility", "hidden"), f;
    }, update:function(d, f) {
      (!b || c.forcePlaceholderSize) && (f.height() || f.height(a.currentItem.innerHeight() - parseInt(a.currentItem.css("paddingTop") || 0, 10) - parseInt(a.currentItem.css("paddingBottom") || 0, 10)), f.width() || f.width(a.currentItem.innerWidth() - parseInt(a.currentItem.css("paddingLeft") || 0, 10) - parseInt(a.currentItem.css("paddingRight") || 0, 10)));
    }});
    a.placeholder = d(c.placeholder.element.call(a.element, a.currentItem));
    a.currentItem.after(a.placeholder);
    c.placeholder.update(a, a.placeholder);
  }, _createTrPlaceholder:function(a, b) {
    var c = this;
    a.children().each(function() {
      d("\x3ctd\x3e\x26#160;\x3c/td\x3e", c.document[0]).attr("colspan", d(this).attr("colspan") || 1).appendTo(b);
    });
  }, _contactContainers:function(a) {
    var b, c, e, f, g, h = e = null;
    for (b = this.containers.length - 1; 0 <= b; b--) {
      d.contains(this.currentItem[0], this.containers[b].element[0]) || (this._intersectsWith(this.containers[b].containerCache) ? e && d.contains(this.containers[b].element[0], e.element[0]) || (e = this.containers[b], h = b) : this.containers[b].containerCache.over && (this.containers[b]._trigger("out", a, this._uiHash(this)), this.containers[b].containerCache.over = 0));
    }
    if (e) {
      if (1 === this.containers.length) {
        this.containers[h].containerCache.over || (this.containers[h]._trigger("over", a, this._uiHash(this)), this.containers[h].containerCache.over = 1);
      } else {
        b = 1E4;
        var k = null;
        e = (c = e.floating || this._isFloating(this.currentItem)) ? "left" : "top";
        var l = c ? "width" : "height";
        var m = c ? "clientX" : "clientY";
        for (c = this.items.length - 1; 0 <= c; c--) {
          d.contains(this.containers[h].element[0], this.items[c].item[0]) && this.items[c].item[0] !== this.currentItem[0] && (f = this.items[c].item.offset()[e], g = !1, a[m] - f > this.items[c][l] / 2 && (g = !0), b > Math.abs(a[m] - f) && (b = Math.abs(a[m] - f), k = this.items[c], this.direction = g ? "up" : "down"));
        }
        if (k || this.options.dropOnEmpty) {
          if (this.currentContainer === this.containers[h]) {
            return this.currentContainer.containerCache.over || (this.containers[h]._trigger("over", a, this._uiHash()), this.currentContainer.containerCache.over = 1), void 0;
          }
          k ? this._rearrange(a, k, null, !0) : this._rearrange(a, null, this.containers[h].element, !0);
          this._trigger("change", a, this._uiHash());
          this.containers[h]._trigger("change", a, this._uiHash(this));
          this.currentContainer = this.containers[h];
          this.options.placeholder.update(this.currentContainer, this.placeholder);
          this.containers[h]._trigger("over", a, this._uiHash(this));
          this.containers[h].containerCache.over = 1;
        }
      }
    }
  }, _createHelper:function(a) {
    var b = this.options;
    a = d.isFunction(b.helper) ? d(b.helper.apply(this.element[0], [a, this.currentItem])) : "clone" === b.helper ? this.currentItem.clone() : this.currentItem;
    return a.parents("body").length || d("parent" !== b.appendTo ? b.appendTo : this.currentItem[0].parentNode)[0].appendChild(a[0]), a[0] === this.currentItem[0] && (this._storedCSS = {width:this.currentItem[0].style.width, height:this.currentItem[0].style.height, position:this.currentItem.css("position"), top:this.currentItem.css("top"), left:this.currentItem.css("left")}), (!a[0].style.width || b.forceHelperSize) && a.width(this.currentItem.width()), (!a[0].style.height || b.forceHelperSize) && 
    a.height(this.currentItem.height()), a;
  }, _adjustOffsetFromHelper:function(a) {
    "string" == typeof a && (a = a.split(" "));
    d.isArray(a) && (a = {left:+a[0], top:+a[1] || 0});
    "left" in a && (this.offset.click.left = a.left + this.margins.left);
    "right" in a && (this.offset.click.left = this.helperProportions.width - a.right + this.margins.left);
    "top" in a && (this.offset.click.top = a.top + this.margins.top);
    "bottom" in a && (this.offset.click.top = this.helperProportions.height - a.bottom + this.margins.top);
  }, _getParentOffset:function() {
    this.offsetParent = this.helper.offsetParent();
    var a = this.offsetParent.offset();
    return "absolute" === this.cssPosition && this.scrollParent[0] !== this.document[0] && d.contains(this.scrollParent[0], this.offsetParent[0]) && (a.left += this.scrollParent.scrollLeft(), a.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === this.document[0].body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && d.ui.ie) && (a = {top:0, left:0}), {top:a.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left:a.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 
    10) || 0)};
  }, _getRelativeOffset:function() {
    if ("relative" === this.cssPosition) {
      var a = this.currentItem.position();
      return {top:a.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(), left:a.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()};
    }
    return {top:0, left:0};
  }, _cacheMargins:function() {
    this.margins = {left:parseInt(this.currentItem.css("marginLeft"), 10) || 0, top:parseInt(this.currentItem.css("marginTop"), 10) || 0};
  }, _cacheHelperProportions:function() {
    this.helperProportions = {width:this.helper.outerWidth(), height:this.helper.outerHeight()};
  }, _setContainment:function() {
    var a, b, c, e = this.options;
    "parent" === e.containment && (e.containment = this.helper[0].parentNode);
    "document" !== e.containment && "window" !== e.containment || (this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, "document" === e.containment ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left, ("document" === e.containment ? this.document.width() : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]);
    /^(document|window|parent)$/.test(e.containment) || (a = d(e.containment)[0], b = d(e.containment).offset(), c = "hidden" !== d(a).css("overflow"), this.containment = [b.left + (parseInt(d(a).css("borderLeftWidth"), 10) || 0) + (parseInt(d(a).css("paddingLeft"), 10) || 0) - this.margins.left, b.top + (parseInt(d(a).css("borderTopWidth"), 10) || 0) + (parseInt(d(a).css("paddingTop"), 10) || 0) - this.margins.top, b.left + (c ? Math.max(a.scrollWidth, a.offsetWidth) : a.offsetWidth) - (parseInt(d(a).css("borderLeftWidth"), 
    10) || 0) - (parseInt(d(a).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, b.top + (c ? Math.max(a.scrollHeight, a.offsetHeight) : a.offsetHeight) - (parseInt(d(a).css("borderTopWidth"), 10) || 0) - (parseInt(d(a).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]);
  }, _convertPositionTo:function(a, b) {
    b || (b = this.position);
    a = "absolute" === a ? 1 : -1;
    var c = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && d.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, e = /(html|body)/i.test(c[0].tagName);
    return {top:b.top + this.offset.relative.top * a + this.offset.parent.top * a - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : e ? 0 : c.scrollTop()) * a, left:b.left + this.offset.relative.left * a + this.offset.parent.left * a - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : e ? 0 : c.scrollLeft()) * a};
  }, _generatePosition:function(a) {
    var b, c, e = this.options, f = a.pageX, g = a.pageY, h = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && d.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, k = /(html|body)/i.test(h[0].tagName);
    return "relative" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()), this.originalPosition && (this.containment && (a.pageX - this.offset.click.left < this.containment[0] && (f = this.containment[0] + this.offset.click.left), a.pageY - this.offset.click.top < this.containment[1] && (g = this.containment[1] + this.offset.click.top), a.pageX - this.offset.click.left > this.containment[2] && 
    (f = this.containment[2] + this.offset.click.left), a.pageY - this.offset.click.top > this.containment[3] && (g = this.containment[3] + this.offset.click.top)), e.grid && (b = this.originalPageY + Math.round((g - this.originalPageY) / e.grid[1]) * e.grid[1], g = this.containment ? b - this.offset.click.top >= this.containment[1] && b - this.offset.click.top <= this.containment[3] ? b : b - this.offset.click.top >= this.containment[1] ? b - e.grid[1] : b + e.grid[1] : b, c = this.originalPageX + 
    Math.round((f - this.originalPageX) / e.grid[0]) * e.grid[0], f = this.containment ? c - this.offset.click.left >= this.containment[0] && c - this.offset.click.left <= this.containment[2] ? c : c - this.offset.click.left >= this.containment[0] ? c - e.grid[0] : c + e.grid[0] : c)), {top:g - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : k ? 0 : h.scrollTop()), left:f - this.offset.click.left - this.offset.relative.left - 
    this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : k ? 0 : h.scrollLeft())};
  }, _rearrange:function(a, b, c, d) {
    c ? c[0].appendChild(this.placeholder[0]) : b.item[0].parentNode.insertBefore(this.placeholder[0], "down" === this.direction ? b.item[0] : b.item[0].nextSibling);
    var e = this.counter = this.counter ? ++this.counter : 1;
    this._delay(function() {
      e === this.counter && this.refreshPositions(!d);
    });
  }, _clear:function(a, b) {
    function c(a, b, c) {
      return function(d) {
        c._trigger(a, d, b._uiHash(b));
      };
    }
    this.reverting = !1;
    var d, f = [];
    if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null, this.helper[0] === this.currentItem[0]) {
      for (d in this._storedCSS) {
        "auto" !== this._storedCSS[d] && "static" !== this._storedCSS[d] || (this._storedCSS[d] = "");
      }
      this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper");
    } else {
      this.currentItem.show();
    }
    this.fromOutside && !b && f.push(function(a) {
      this._trigger("receive", a, this._uiHash(this.fromOutside));
    });
    !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(".ui-sortable-helper")[0] && this.domPosition.parent === this.currentItem.parent()[0] || b || f.push(function(a) {
      this._trigger("update", a, this._uiHash());
    });
    this !== this.currentContainer && (b || (f.push(function(a) {
      this._trigger("remove", a, this._uiHash());
    }), f.push(function(a) {
      return function(b) {
        a._trigger("receive", b, this._uiHash(this));
      };
    }.call(this, this.currentContainer)), f.push(function(a) {
      return function(b) {
        a._trigger("update", b, this._uiHash(this));
      };
    }.call(this, this.currentContainer))));
    for (d = this.containers.length - 1; 0 <= d; d--) {
      b || f.push(c("deactivate", this, this.containers[d])), this.containers[d].containerCache.over && (f.push(c("out", this, this.containers[d])), this.containers[d].containerCache.over = 0);
    }
    if (this.storedCursor && (this.document.find("body").css("cursor", this.storedCursor), this.storedStylesheet.remove()), this._storedOpacity && this.helper.css("opacity", this._storedOpacity), this._storedZIndex && this.helper.css("zIndex", "auto" === this._storedZIndex ? "" : this._storedZIndex), this.dragging = !1, b || this._trigger("beforeStop", a, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.cancelHelperRemoval || (this.helper[0] !== this.currentItem[0] && 
    this.helper.remove(), this.helper = null), !b) {
      for (d = 0; f.length > d; d++) {
        f[d].call(this, a);
      }
      this._trigger("stop", a, this._uiHash());
    }
    return this.fromOutside = !1, !this.cancelHelperRemoval;
  }, _trigger:function() {
    !1 === d.Widget.prototype._trigger.apply(this, arguments) && this.cancel();
  }, _uiHash:function(a) {
    var b = a || this;
    return {helper:b.helper, placeholder:b.placeholder || d([]), position:b.position, originalPosition:b.originalPosition, offset:b.positionAbs, item:b.currentItem, sender:a ? a.element : null};
  }});
  d.widget("ui.accordion", {version:"1.11.4", options:{active:0, animate:{}, collapsible:!1, event:"click", header:"\x3e li \x3e :first-child,\x3e :not(li):even", heightStyle:"auto", icons:{activeHeader:"ui-icon-triangle-1-s", header:"ui-icon-triangle-1-e"}, activate:null, beforeActivate:null}, hideProps:{borderTopWidth:"hide", borderBottomWidth:"hide", paddingTop:"hide", paddingBottom:"hide", height:"hide"}, showProps:{borderTopWidth:"show", borderBottomWidth:"show", paddingTop:"show", paddingBottom:"show", 
  height:"show"}, _create:function() {
    var a = this.options;
    this.prevShow = this.prevHide = d();
    this.element.addClass("ui-accordion ui-widget ui-helper-reset").attr("role", "tablist");
    a.collapsible || !1 !== a.active && null != a.active || (a.active = 0);
    this._processPanels();
    0 > a.active && (a.active += this.headers.length);
    this._refresh();
  }, _getCreateEventData:function() {
    return {header:this.active, panel:this.active.length ? this.active.next() : d()};
  }, _createIcons:function() {
    var a = this.options.icons;
    a && (d("\x3cspan\x3e").addClass("ui-accordion-header-icon ui-icon " + a.header).prependTo(this.headers), this.active.children(".ui-accordion-header-icon").removeClass(a.header).addClass(a.activeHeader), this.headers.addClass("ui-accordion-icons"));
  }, _destroyIcons:function() {
    this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove();
  }, _destroy:function() {
    this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role");
    this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").removeUniqueId();
    this._destroyIcons();
    var a = this.headers.next().removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").css("display", "").removeAttr("role").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeUniqueId();
    "content" !== this.options.heightStyle && a.css("height", "");
  }, _setOption:function(a, b) {
    return "active" === a ? (this._activate(b), void 0) : ("event" === a && (this.options.event && this._off(this.headers, this.options.event), this._setupEvents(b)), this._super(a, b), "collapsible" !== a || b || !1 !== this.options.active || this._activate(0), "icons" === a && (this._destroyIcons(), b && this._createIcons()), "disabled" === a && (this.element.toggleClass("ui-state-disabled", !!b).attr("aria-disabled", b), this.headers.add(this.headers.next()).toggleClass("ui-state-disabled", !!b)), 
    void 0);
  }, _keydown:function(a) {
    if (!a.altKey && !a.ctrlKey) {
      var b = d.ui.keyCode, c = this.headers.length, e = this.headers.index(a.target), f = !1;
      switch(a.keyCode) {
        case b.RIGHT:
        case b.DOWN:
          f = this.headers[(e + 1) % c];
          break;
        case b.LEFT:
        case b.UP:
          f = this.headers[(e - 1 + c) % c];
          break;
        case b.SPACE:
        case b.ENTER:
          this._eventHandler(a);
          break;
        case b.HOME:
          f = this.headers[0];
          break;
        case b.END:
          f = this.headers[c - 1];
      }
      f && (d(a.target).attr("tabIndex", -1), d(f).attr("tabIndex", 0), f.focus(), a.preventDefault());
    }
  }, _panelKeyDown:function(a) {
    a.keyCode === d.ui.keyCode.UP && a.ctrlKey && d(a.currentTarget).prev().focus();
  }, refresh:function() {
    var a = this.options;
    this._processPanels();
    !1 === a.active && !0 === a.collapsible || !this.headers.length ? (a.active = !1, this.active = d()) : !1 === a.active ? this._activate(0) : this.active.length && !d.contains(this.element[0], this.active[0]) ? this.headers.length === this.headers.find(".ui-state-disabled").length ? (a.active = !1, this.active = d()) : this._activate(Math.max(0, a.active - 1)) : a.active = this.headers.index(this.active);
    this._destroyIcons();
    this._refresh();
  }, _processPanels:function() {
    var a = this.headers, b = this.panels;
    this.headers = this.element.find(this.options.header).addClass("ui-accordion-header ui-state-default ui-corner-all");
    this.panels = this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").filter(":not(.ui-accordion-content-active)").hide();
    b && (this._off(a.not(this.headers)), this._off(b.not(this.panels)));
  }, _refresh:function() {
    var a, b = this.options, c = b.heightStyle, e = this.element.parent();
    this.active = this._findActive(b.active).addClass("ui-accordion-header-active ui-state-active ui-corner-top").removeClass("ui-corner-all");
    this.active.next().addClass("ui-accordion-content-active").show();
    this.headers.attr("role", "tab").each(function() {
      var a = d(this), b = a.uniqueId().attr("id"), c = a.next(), e = c.uniqueId().attr("id");
      a.attr("aria-controls", e);
      c.attr("aria-labelledby", b);
    }).next().attr("role", "tabpanel");
    this.headers.not(this.active).attr({"aria-selected":"false", "aria-expanded":"false", tabIndex:-1}).next().attr({"aria-hidden":"true"}).hide();
    this.active.length ? this.active.attr({"aria-selected":"true", "aria-expanded":"true", tabIndex:0}).next().attr({"aria-hidden":"false"}) : this.headers.eq(0).attr("tabIndex", 0);
    this._createIcons();
    this._setupEvents(b.event);
    "fill" === c ? (a = e.height(), this.element.siblings(":visible").each(function() {
      var b = d(this), c = b.css("position");
      "absolute" !== c && "fixed" !== c && (a -= b.outerHeight(!0));
    }), this.headers.each(function() {
      a -= d(this).outerHeight(!0);
    }), this.headers.next().each(function() {
      d(this).height(Math.max(0, a - d(this).innerHeight() + d(this).height()));
    }).css("overflow", "auto")) : "auto" === c && (a = 0, this.headers.next().each(function() {
      a = Math.max(a, d(this).css("height", "").height());
    }).height(a));
  }, _activate:function(a) {
    a = this._findActive(a)[0];
    a !== this.active[0] && (a = a || this.active[0], this._eventHandler({target:a, currentTarget:a, preventDefault:d.noop}));
  }, _findActive:function(a) {
    return "number" == typeof a ? this.headers.eq(a) : d();
  }, _setupEvents:function(a) {
    var b = {keydown:"_keydown"};
    a && d.each(a.split(" "), function(a, d) {
      b[d] = "_eventHandler";
    });
    this._off(this.headers.add(this.headers.next()));
    this._on(this.headers, b);
    this._on(this.headers.next(), {keydown:"_panelKeyDown"});
    this._hoverable(this.headers);
    this._focusable(this.headers);
  }, _eventHandler:function(a) {
    var b = this.options, c = this.active, e = d(a.currentTarget), f = e[0] === c[0], g = f && b.collapsible, h = g ? d() : e.next(), k = c.next();
    h = {oldHeader:c, oldPanel:k, newHeader:g ? d() : e, newPanel:h};
    a.preventDefault();
    f && !b.collapsible || !1 === this._trigger("beforeActivate", a, h) || (b.active = g ? !1 : this.headers.index(e), this.active = f ? d() : e, this._toggle(h), c.removeClass("ui-accordion-header-active ui-state-active"), b.icons && c.children(".ui-accordion-header-icon").removeClass(b.icons.activeHeader).addClass(b.icons.header), f || (e.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"), b.icons && e.children(".ui-accordion-header-icon").removeClass(b.icons.header).addClass(b.icons.activeHeader), 
    e.next().addClass("ui-accordion-content-active")));
  }, _toggle:function(a) {
    var b = a.newPanel, c = this.prevShow.length ? this.prevShow : a.oldPanel;
    this.prevShow.add(this.prevHide).stop(!0, !0);
    this.prevShow = b;
    this.prevHide = c;
    this.options.animate ? this._animate(b, c, a) : (c.hide(), b.show(), this._toggleComplete(a));
    c.attr({"aria-hidden":"true"});
    c.prev().attr({"aria-selected":"false", "aria-expanded":"false"});
    b.length && c.length ? c.prev().attr({tabIndex:-1, "aria-expanded":"false"}) : b.length && this.headers.filter(function() {
      return 0 === parseInt(d(this).attr("tabIndex"), 10);
    }).attr("tabIndex", -1);
    b.attr("aria-hidden", "false").prev().attr({"aria-selected":"true", "aria-expanded":"true", tabIndex:0});
  }, _animate:function(a, b, c) {
    var d, f, g, h = this, k = 0, l = a.css("box-sizing"), m = a.length && (!b.length || a.index() < b.index()), n = this.options.animate || {};
    m = m && n.down || n;
    var p = function() {
      h._toggleComplete(c);
    };
    return "number" == typeof m && (g = m), "string" == typeof m && (f = m), f = f || m.easing || n.easing, g = g || m.duration || n.duration, b.length ? a.length ? (d = a.show().outerHeight(), b.animate(this.hideProps, {duration:g, easing:f, step:function(a, b) {
      b.now = Math.round(a);
    }}), a.hide().animate(this.showProps, {duration:g, easing:f, complete:p, step:function(a, c) {
      c.now = Math.round(a);
      "height" !== c.prop ? "content-box" === l && (k += c.now) : "content" !== h.options.heightStyle && (c.now = Math.round(d - b.outerHeight() - k), k = 0);
    }}), void 0) : b.animate(this.hideProps, g, f, p) : a.animate(this.showProps, g, f, p);
  }, _toggleComplete:function(a) {
    var b = a.oldPanel;
    b.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all");
    b.length && (b.parent()[0].className = b.parent()[0].className);
    this._trigger("activate", null, a);
  }});
  d.widget("ui.menu", {version:"1.11.4", defaultElement:"\x3cul\x3e", delay:300, options:{icons:{submenu:"ui-icon-carat-1-e"}, items:"\x3e *", menus:"ul", position:{my:"left-1 top", at:"right top"}, role:"menu", blur:null, focus:null, select:null}, _create:function() {
    this.activeMenu = this.element;
    this.mouseHandled = !1;
    this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content").toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length).attr({role:this.options.role, tabIndex:0});
    this.options.disabled && this.element.addClass("ui-state-disabled").attr("aria-disabled", "true");
    this._on({"mousedown .ui-menu-item":function(a) {
      a.preventDefault();
    }, "click .ui-menu-item":function(a) {
      var b = d(a.target);
      !this.mouseHandled && b.not(".ui-state-disabled").length && (this.select(a), a.isPropagationStopped() || (this.mouseHandled = !0), b.has(".ui-menu").length ? this.expand(a) : !this.element.is(":focus") && d(this.document[0].activeElement).closest(".ui-menu").length && (this.element.trigger("focus", [!0]), this.active && 1 === this.active.parents(".ui-menu").length && clearTimeout(this.timer)));
    }, "mouseenter .ui-menu-item":function(a) {
      if (!this.previousFilter) {
        var b = d(a.currentTarget);
        b.siblings(".ui-state-active").removeClass("ui-state-active");
        this.focus(a, b);
      }
    }, mouseleave:"collapseAll", "mouseleave .ui-menu":"collapseAll", focus:function(a, b) {
      var c = this.active || this.element.find(this.options.items).eq(0);
      b || this.focus(a, c);
    }, blur:function(a) {
      this._delay(function() {
        d.contains(this.element[0], this.document[0].activeElement) || this.collapseAll(a);
      });
    }, keydown:"_keydown"});
    this.refresh();
    this._on(this.document, {click:function(a) {
      this._closeOnDocumentClick(a) && this.collapseAll(a);
      this.mouseHandled = !1;
    }});
  }, _destroy:function() {
    this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-menu-icons ui-front").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show();
    this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").removeUniqueId().removeClass("ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function() {
      var a = d(this);
      a.data("ui-menu-submenu-carat") && a.remove();
    });
    this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content");
  }, _keydown:function(a) {
    var b = !0;
    switch(a.keyCode) {
      case d.ui.keyCode.PAGE_UP:
        this.previousPage(a);
        break;
      case d.ui.keyCode.PAGE_DOWN:
        this.nextPage(a);
        break;
      case d.ui.keyCode.HOME:
        this._move("first", "first", a);
        break;
      case d.ui.keyCode.END:
        this._move("last", "last", a);
        break;
      case d.ui.keyCode.UP:
        this.previous(a);
        break;
      case d.ui.keyCode.DOWN:
        this.next(a);
        break;
      case d.ui.keyCode.LEFT:
        this.collapse(a);
        break;
      case d.ui.keyCode.RIGHT:
        this.active && !this.active.is(".ui-state-disabled") && this.expand(a);
        break;
      case d.ui.keyCode.ENTER:
      case d.ui.keyCode.SPACE:
        this._activate(a);
        break;
      case d.ui.keyCode.ESCAPE:
        this.collapse(a);
        break;
      default:
        b = !1;
        var c = this.previousFilter || "";
        var e = String.fromCharCode(a.keyCode);
        var f = !1;
        clearTimeout(this.filterTimer);
        e === c ? f = !0 : e = c + e;
        c = this._filterMenuItems(e);
        c = f && -1 !== c.index(this.active.next()) ? this.active.nextAll(".ui-menu-item") : c;
        c.length || (e = String.fromCharCode(a.keyCode), c = this._filterMenuItems(e));
        c.length ? (this.focus(a, c), this.previousFilter = e, this.filterTimer = this._delay(function() {
          delete this.previousFilter;
        }, 1E3)) : delete this.previousFilter;
    }
    b && a.preventDefault();
  }, _activate:function(a) {
    this.active.is(".ui-state-disabled") || (this.active.is("[aria-haspopup\x3d'true']") ? this.expand(a) : this.select(a));
  }, refresh:function() {
    var a = this, b = this.options.icons.submenu;
    var c = this.element.find(this.options.menus);
    this.element.toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length);
    c.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-front").hide().attr({role:this.options.role, "aria-hidden":"true", "aria-expanded":"false"}).each(function() {
      var a = d(this), c = a.parent(), g = d("\x3cspan\x3e").addClass("ui-menu-icon ui-icon " + b).data("ui-menu-submenu-carat", !0);
      c.attr("aria-haspopup", "true").prepend(g);
      a.attr("aria-labelledby", c.attr("id"));
    });
    c = c.add(this.element).find(this.options.items);
    c.not(".ui-menu-item").each(function() {
      var b = d(this);
      a._isDivider(b) && b.addClass("ui-widget-content ui-menu-divider");
    });
    c.not(".ui-menu-item, .ui-menu-divider").addClass("ui-menu-item").uniqueId().attr({tabIndex:-1, role:this._itemRole()});
    c.filter(".ui-state-disabled").attr("aria-disabled", "true");
    this.active && !d.contains(this.element[0], this.active[0]) && this.blur();
  }, _itemRole:function() {
    return {menu:"menuitem", listbox:"option"}[this.options.role];
  }, _setOption:function(a, b) {
    "icons" === a && this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(b.submenu);
    "disabled" === a && this.element.toggleClass("ui-state-disabled", !!b).attr("aria-disabled", b);
    this._super(a, b);
  }, focus:function(a, b) {
    this.blur(a, a && "focus" === a.type);
    this._scrollIntoView(b);
    this.active = b.first();
    var c = this.active.addClass("ui-state-focus").removeClass("ui-state-active");
    this.options.role && this.element.attr("aria-activedescendant", c.attr("id"));
    this.active.parent().closest(".ui-menu-item").addClass("ui-state-active");
    a && "keydown" === a.type ? this._close() : this.timer = this._delay(function() {
      this._close();
    }, this.delay);
    c = b.children(".ui-menu");
    c.length && a && /^mouse/.test(a.type) && this._startOpening(c);
    this.activeMenu = b.parent();
    this._trigger("focus", a, {item:b});
  }, _scrollIntoView:function(a) {
    var b, c, e, f, g, h;
    this._hasScroll() && (b = parseFloat(d.css(this.activeMenu[0], "borderTopWidth")) || 0, c = parseFloat(d.css(this.activeMenu[0], "paddingTop")) || 0, e = a.offset().top - this.activeMenu.offset().top - b - c, f = this.activeMenu.scrollTop(), g = this.activeMenu.height(), h = a.outerHeight(), 0 > e ? this.activeMenu.scrollTop(f + e) : e + h > g && this.activeMenu.scrollTop(f + e - g + h));
  }, blur:function(a, b) {
    b || clearTimeout(this.timer);
    this.active && (this.active.removeClass("ui-state-focus"), this.active = null, this._trigger("blur", a, {item:this.active}));
  }, _startOpening:function(a) {
    clearTimeout(this.timer);
    "true" === a.attr("aria-hidden") && (this.timer = this._delay(function() {
      this._close();
      this._open(a);
    }, this.delay));
  }, _open:function(a) {
    var b = d.extend({of:this.active}, this.options.position);
    clearTimeout(this.timer);
    this.element.find(".ui-menu").not(a.parents(".ui-menu")).hide().attr("aria-hidden", "true");
    a.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(b);
  }, collapseAll:function(a, b) {
    clearTimeout(this.timer);
    this.timer = this._delay(function() {
      var c = b ? this.element : d(a && a.target).closest(this.element.find(".ui-menu"));
      c.length || (c = this.element);
      this._close(c);
      this.blur(a);
      this.activeMenu = c;
    }, this.delay);
  }, _close:function(a) {
    a || (a = this.active ? this.active.parent() : this.element);
    a.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false").end().find(".ui-state-active").not(".ui-state-focus").removeClass("ui-state-active");
  }, _closeOnDocumentClick:function(a) {
    return !d(a.target).closest(".ui-menu").length;
  }, _isDivider:function(a) {
    return !/[^\-\u2014\u2013\s]/.test(a.text());
  }, collapse:function(a) {
    var b = this.active && this.active.parent().closest(".ui-menu-item", this.element);
    b && b.length && (this._close(), this.focus(a, b));
  }, expand:function(a) {
    var b = this.active && this.active.children(".ui-menu ").find(this.options.items).first();
    b && b.length && (this._open(b.parent()), this._delay(function() {
      this.focus(a, b);
    }));
  }, next:function(a) {
    this._move("next", "first", a);
  }, previous:function(a) {
    this._move("prev", "last", a);
  }, isFirstItem:function() {
    return this.active && !this.active.prevAll(".ui-menu-item").length;
  }, isLastItem:function() {
    return this.active && !this.active.nextAll(".ui-menu-item").length;
  }, _move:function(a, b, c) {
    var d;
    this.active && (d = "first" === a || "last" === a ? this.active["first" === a ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1) : this.active[a + "All"](".ui-menu-item").eq(0));
    d && d.length && this.active || (d = this.activeMenu.find(this.options.items)[b]());
    this.focus(c, d);
  }, nextPage:function(a) {
    var b, c, e;
    return this.active ? (this.isLastItem() || (this._hasScroll() ? (c = this.active.offset().top, e = this.element.height(), this.active.nextAll(".ui-menu-item").each(function() {
      return b = d(this), 0 > b.offset().top - c - e;
    }), this.focus(a, b)) : this.focus(a, this.activeMenu.find(this.options.items)[this.active ? "last" : "first"]())), void 0) : (this.next(a), void 0);
  }, previousPage:function(a) {
    var b, c, e;
    return this.active ? (this.isFirstItem() || (this._hasScroll() ? (c = this.active.offset().top, e = this.element.height(), this.active.prevAll(".ui-menu-item").each(function() {
      return b = d(this), 0 < b.offset().top - c + e;
    }), this.focus(a, b)) : this.focus(a, this.activeMenu.find(this.options.items).first())), void 0) : (this.next(a), void 0);
  }, _hasScroll:function() {
    return this.element.outerHeight() < this.element.prop("scrollHeight");
  }, select:function(a) {
    this.active = this.active || d(a.target).closest(".ui-menu-item");
    var b = {item:this.active};
    this.active.has(".ui-menu").length || this.collapseAll(a, !0);
    this._trigger("select", a, b);
  }, _filterMenuItems:function(a) {
    a = a.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$\x26");
    var b = RegExp("^" + a, "i");
    return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function() {
      return b.test(d.trim(d(this).text()));
    });
  }});
  d.widget("ui.autocomplete", {version:"1.11.4", defaultElement:"\x3cinput\x3e", options:{appendTo:null, autoFocus:!1, delay:300, minLength:1, position:{my:"left top", at:"left bottom", collision:"none"}, source:null, change:null, close:null, focus:null, open:null, response:null, search:null, select:null}, requestIndex:0, pending:0, _create:function() {
    var a, b, c, e = this.element[0].nodeName.toLowerCase(), f = "textarea" === e;
    e = "input" === e;
    this.isMultiLine = f ? !0 : e ? !1 : this.element.prop("isContentEditable");
    this.valueMethod = this.element[f || e ? "val" : "text"];
    this.isNewMenu = !0;
    this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off");
    this._on(this.element, {keydown:function(e) {
      if (this.element.prop("readOnly")) {
        return a = !0, c = !0, b = !0, void 0;
      }
      b = c = a = !1;
      var f = d.ui.keyCode;
      switch(e.keyCode) {
        case f.PAGE_UP:
          a = !0;
          this._move("previousPage", e);
          break;
        case f.PAGE_DOWN:
          a = !0;
          this._move("nextPage", e);
          break;
        case f.UP:
          a = !0;
          this._keyEvent("previous", e);
          break;
        case f.DOWN:
          a = !0;
          this._keyEvent("next", e);
          break;
        case f.ENTER:
          this.menu.active && (a = !0, e.preventDefault(), this.menu.select(e));
          break;
        case f.TAB:
          this.menu.active && this.menu.select(e);
          break;
        case f.ESCAPE:
          this.menu.element.is(":visible") && (this.isMultiLine || this._value(this.term), this.close(e), e.preventDefault());
          break;
        default:
          b = !0, this._searchTimeout(e);
      }
    }, keypress:function(c) {
      if (a) {
        return a = !1, (!this.isMultiLine || this.menu.element.is(":visible")) && c.preventDefault(), void 0;
      }
      if (!b) {
        var e = d.ui.keyCode;
        switch(c.keyCode) {
          case e.PAGE_UP:
            this._move("previousPage", c);
            break;
          case e.PAGE_DOWN:
            this._move("nextPage", c);
            break;
          case e.UP:
            this._keyEvent("previous", c);
            break;
          case e.DOWN:
            this._keyEvent("next", c);
        }
      }
    }, input:function(a) {
      return c ? (c = !1, a.preventDefault(), void 0) : (this._searchTimeout(a), void 0);
    }, focus:function() {
      this.selectedItem = null;
      this.previous = this._value();
    }, blur:function(a) {
      return this.cancelBlur ? (delete this.cancelBlur, void 0) : (clearTimeout(this.searching), this.close(a), this._change(a), void 0);
    }});
    this._initSource();
    this.menu = d("\x3cul\x3e").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({role:null}).hide().menu("instance");
    this._on(this.menu.element, {mousedown:function(a) {
      a.preventDefault();
      this.cancelBlur = !0;
      this._delay(function() {
        delete this.cancelBlur;
      });
      var b = this.menu.element[0];
      d(a.target).closest(".ui-menu-item").length || this._delay(function() {
        var a = this;
        this.document.one("mousedown", function(c) {
          c.target === a.element[0] || c.target === b || d.contains(b, c.target) || a.close();
        });
      });
    }, menufocus:function(a, b) {
      var c, e;
      return this.isNewMenu && (this.isNewMenu = !1, a.originalEvent && /^mouse/.test(a.originalEvent.type)) ? (this.menu.blur(), this.document.one("mousemove", function() {
        d(a.target).trigger(a.originalEvent);
      }), void 0) : (e = b.item.data("ui-autocomplete-item"), !1 !== this._trigger("focus", a, {item:e}) && a.originalEvent && /^key/.test(a.originalEvent.type) && this._value(e.value), c = b.item.attr("aria-label") || e.value, c && d.trim(c).length && (this.liveRegion.children().hide(), d("\x3cdiv\x3e").text(c).appendTo(this.liveRegion)), void 0);
    }, menuselect:function(a, b) {
      var c = b.item.data("ui-autocomplete-item"), d = this.previous;
      this.element[0] !== this.document[0].activeElement && (this.element.focus(), this.previous = d, this._delay(function() {
        this.previous = d;
        this.selectedItem = c;
      }));
      !1 !== this._trigger("select", a, {item:c}) && this._value(c.value);
      this.term = this._value();
      this.close(a);
      this.selectedItem = c;
    }});
    this.liveRegion = d("\x3cspan\x3e", {role:"status", "aria-live":"assertive", "aria-relevant":"additions"}).addClass("ui-helper-hidden-accessible").appendTo(this.document[0].body);
    this._on(this.window, {beforeunload:function() {
      this.element.removeAttr("autocomplete");
    }});
  }, _destroy:function() {
    clearTimeout(this.searching);
    this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete");
    this.menu.element.remove();
    this.liveRegion.remove();
  }, _setOption:function(a, b) {
    this._super(a, b);
    "source" === a && this._initSource();
    "appendTo" === a && this.menu.element.appendTo(this._appendTo());
    "disabled" === a && b && this.xhr && this.xhr.abort();
  }, _appendTo:function() {
    var a = this.options.appendTo;
    return a && (a = a.jquery || a.nodeType ? d(a) : this.document.find(a).eq(0)), a && a[0] || (a = this.element.closest(".ui-front")), a.length || (a = this.document[0].body), a;
  }, _initSource:function() {
    var a, b, c = this;
    d.isArray(this.options.source) ? (a = this.options.source, this.source = function(b, c) {
      c(d.ui.autocomplete.filter(a, b.term));
    }) : "string" == typeof this.options.source ? (b = this.options.source, this.source = function(a, f) {
      c.xhr && c.xhr.abort();
      c.xhr = d.ajax({url:b, data:a, dataType:"json", success:function(a) {
        f(a);
      }, error:function() {
        f([]);
      }});
    }) : this.source = this.options.source;
  }, _searchTimeout:function(a) {
    clearTimeout(this.searching);
    this.searching = this._delay(function() {
      var b = this.term === this._value(), c = this.menu.element.is(":visible"), d = a.altKey || a.ctrlKey || a.metaKey || a.shiftKey;
      b && (!b || c || d) || (this.selectedItem = null, this.search(null, a));
    }, this.options.delay);
  }, search:function(a, b) {
    return a = null != a ? a : this._value(), this.term = this._value(), a.length < this.options.minLength ? this.close(b) : !1 !== this._trigger("search", b) ? this._search(a) : void 0;
  }, _search:function(a) {
    this.pending++;
    this.element.addClass("ui-autocomplete-loading");
    this.cancelSearch = !1;
    this.source({term:a}, this._response());
  }, _response:function() {
    var a = ++this.requestIndex;
    return d.proxy(function(b) {
      a === this.requestIndex && this.__response(b);
      this.pending--;
      this.pending || this.element.removeClass("ui-autocomplete-loading");
    }, this);
  }, __response:function(a) {
    a && (a = this._normalize(a));
    this._trigger("response", null, {content:a});
    !this.options.disabled && a && a.length && !this.cancelSearch ? (this._suggest(a), this._trigger("open")) : this._close();
  }, close:function(a) {
    this.cancelSearch = !0;
    this._close(a);
  }, _close:function(a) {
    this.menu.element.is(":visible") && (this.menu.element.hide(), this.menu.blur(), this.isNewMenu = !0, this._trigger("close", a));
  }, _change:function(a) {
    this.previous !== this._value() && this._trigger("change", a, {item:this.selectedItem});
  }, _normalize:function(a) {
    return a.length && a[0].label && a[0].value ? a : d.map(a, function(a) {
      return "string" == typeof a ? {label:a, value:a} : d.extend({}, a, {label:a.label || a.value, value:a.value || a.label});
    });
  }, _suggest:function(a) {
    var b = this.menu.element.empty();
    this._renderMenu(b, a);
    this.isNewMenu = !0;
    this.menu.refresh();
    b.show();
    this._resizeMenu();
    b.position(d.extend({of:this.element}, this.options.position));
    this.options.autoFocus && this.menu.next();
  }, _resizeMenu:function() {
    var a = this.menu.element;
    a.outerWidth(Math.max(a.width("").outerWidth() + 1, this.element.outerWidth()));
  }, _renderMenu:function(a, b) {
    var c = this;
    d.each(b, function(b, d) {
      c._renderItemData(a, d);
    });
  }, _renderItemData:function(a, b) {
    return this._renderItem(a, b).data("ui-autocomplete-item", b);
  }, _renderItem:function(a, b) {
    return d("\x3cli\x3e").text(b.label).appendTo(a);
  }, _move:function(a, b) {
    return this.menu.element.is(":visible") ? this.menu.isFirstItem() && /^previous/.test(a) || this.menu.isLastItem() && /^next/.test(a) ? (this.isMultiLine || this._value(this.term), this.menu.blur(), void 0) : (this.menu[a](b), void 0) : (this.search(null, b), void 0);
  }, widget:function() {
    return this.menu.element;
  }, _value:function() {
    return this.valueMethod.apply(this.element, arguments);
  }, _keyEvent:function(a, b) {
    this.isMultiLine && !this.menu.element.is(":visible") || (this._move(a, b), b.preventDefault());
  }});
  d.extend(d.ui.autocomplete, {escapeRegex:function(a) {
    return a.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$\x26");
  }, filter:function(a, b) {
    var c = RegExp(d.ui.autocomplete.escapeRegex(b), "i");
    return d.grep(a, function(a) {
      return c.test(a.label || a.value || a);
    });
  }});
  d.widget("ui.autocomplete", d.ui.autocomplete, {options:{messages:{noResults:"No search results.", results:function(a) {
    return a + (1 < a ? " results are" : " result is") + " available, use up and down arrow keys to navigate.";
  }}}, __response:function(a) {
    var b;
    this._superApply(arguments);
    this.options.disabled || this.cancelSearch || (b = a && a.length ? this.options.messages.results(a.length) : this.options.messages.noResults, this.liveRegion.children().hide(), d("\x3cdiv\x3e").text(b).appendTo(this.liveRegion));
  }});
  d.ui.autocomplete;
  var K, Z = function() {
    var a = d(this);
    setTimeout(function() {
      a.find(":ui-button").button("refresh");
    }, 1);
  }, V = function(a) {
    var b = a.name, c = a.form, e = d([]);
    return b && (b = b.replace(/'/g, "\\'"), e = c ? d(c).find("[name\x3d'" + b + "'][type\x3dradio]") : d("[name\x3d'" + b + "'][type\x3dradio]", a.ownerDocument).filter(function() {
      return !this.form;
    })), e;
  };
  d.widget("ui.button", {version:"1.11.4", defaultElement:"\x3cbutton\x3e", options:{disabled:null, text:!0, label:null, icons:{primary:null, secondary:null}}, _create:function() {
    this.element.closest("form").unbind("reset" + this.eventNamespace).bind("reset" + this.eventNamespace, Z);
    "boolean" != typeof this.options.disabled ? this.options.disabled = !!this.element.prop("disabled") : this.element.prop("disabled", this.options.disabled);
    this._determineButtonType();
    this.hasTitle = !!this.buttonElement.attr("title");
    var a = this, b = this.options, c = "checkbox" === this.type || "radio" === this.type, e = c ? "" : "ui-state-active";
    null === b.label && (b.label = "input" === this.type ? this.buttonElement.val() : this.buttonElement.html());
    this._hoverable(this.buttonElement);
    this.buttonElement.addClass("ui-button ui-widget ui-state-default ui-corner-all").attr("role", "button").bind("mouseenter" + this.eventNamespace, function() {
      b.disabled || this === K && d(this).addClass("ui-state-active");
    }).bind("mouseleave" + this.eventNamespace, function() {
      b.disabled || d(this).removeClass(e);
    }).bind("click" + this.eventNamespace, function(a) {
      b.disabled && (a.preventDefault(), a.stopImmediatePropagation());
    });
    this._on({focus:function() {
      this.buttonElement.addClass("ui-state-focus");
    }, blur:function() {
      this.buttonElement.removeClass("ui-state-focus");
    }});
    c && this.element.bind("change" + this.eventNamespace, function() {
      a.refresh();
    });
    "checkbox" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function() {
      return b.disabled ? !1 : void 0;
    }) : "radio" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function() {
      if (b.disabled) {
        return !1;
      }
      d(this).addClass("ui-state-active");
      a.buttonElement.attr("aria-pressed", "true");
      var c = a.element[0];
      V(c).not(c).map(function() {
        return d(this).button("widget")[0];
      }).removeClass("ui-state-active").attr("aria-pressed", "false");
    }) : (this.buttonElement.bind("mousedown" + this.eventNamespace, function() {
      return b.disabled ? !1 : (d(this).addClass("ui-state-active"), K = this, a.document.one("mouseup", function() {
        K = null;
      }), void 0);
    }).bind("mouseup" + this.eventNamespace, function() {
      return b.disabled ? !1 : (d(this).removeClass("ui-state-active"), void 0);
    }).bind("keydown" + this.eventNamespace, function(a) {
      return b.disabled ? !1 : ((a.keyCode === d.ui.keyCode.SPACE || a.keyCode === d.ui.keyCode.ENTER) && d(this).addClass("ui-state-active"), void 0);
    }).bind("keyup" + this.eventNamespace + " blur" + this.eventNamespace, function() {
      d(this).removeClass("ui-state-active");
    }), this.buttonElement.is("a") && this.buttonElement.keyup(function(a) {
      a.keyCode === d.ui.keyCode.SPACE && d(this).click();
    }));
    this._setOption("disabled", b.disabled);
    this._resetButton();
  }, _determineButtonType:function() {
    var a, b, c;
    this.type = this.element.is("[type\x3dcheckbox]") ? "checkbox" : this.element.is("[type\x3dradio]") ? "radio" : this.element.is("input") ? "input" : "button";
    "checkbox" === this.type || "radio" === this.type ? (a = this.element.parents().last(), b = "label[for\x3d'" + this.element.attr("id") + "']", this.buttonElement = a.find(b), this.buttonElement.length || (a = a.length ? a.siblings() : this.element.siblings(), this.buttonElement = a.filter(b), this.buttonElement.length || (this.buttonElement = a.find(b))), this.element.addClass("ui-helper-hidden-accessible"), c = this.element.is(":checked"), c && this.buttonElement.addClass("ui-state-active"), 
    this.buttonElement.prop("aria-pressed", c)) : this.buttonElement = this.element;
  }, widget:function() {
    return this.buttonElement;
  }, _destroy:function() {
    this.element.removeClass("ui-helper-hidden-accessible");
    this.buttonElement.removeClass("ui-button ui-widget ui-state-default ui-corner-all ui-state-active ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only").removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html());
    this.hasTitle || this.buttonElement.removeAttr("title");
  }, _setOption:function(a, b) {
    return this._super(a, b), "disabled" === a ? (this.widget().toggleClass("ui-state-disabled", !!b), this.element.prop("disabled", !!b), b && ("checkbox" === this.type || "radio" === this.type ? this.buttonElement.removeClass("ui-state-focus") : this.buttonElement.removeClass("ui-state-focus ui-state-active")), void 0) : (this._resetButton(), void 0);
  }, refresh:function() {
    var a = this.element.is("input, button") ? this.element.is(":disabled") : this.element.hasClass("ui-button-disabled");
    a !== this.options.disabled && this._setOption("disabled", a);
    "radio" === this.type ? V(this.element[0]).each(function() {
      d(this).is(":checked") ? d(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true") : d(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false");
    }) : "checkbox" === this.type && (this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true") : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false"));
  }, _resetButton:function() {
    if ("input" === this.type) {
      return this.options.label && this.element.val(this.options.label), void 0;
    }
    var a = this.buttonElement.removeClass("ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only"), b = d("\x3cspan\x3e\x3c/span\x3e", this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(a.empty()).text(), c = this.options.icons, e = c.primary && c.secondary, f = [];
    c.primary || c.secondary ? (this.options.text && f.push("ui-button-text-icon" + (e ? "s" : c.primary ? "-primary" : "-secondary")), c.primary && a.prepend("\x3cspan class\x3d'ui-button-icon-primary ui-icon " + c.primary + "'\x3e\x3c/span\x3e"), c.secondary && a.append("\x3cspan class\x3d'ui-button-icon-secondary ui-icon " + c.secondary + "'\x3e\x3c/span\x3e"), this.options.text || (f.push(e ? "ui-button-icons-only" : "ui-button-icon-only"), this.hasTitle || a.attr("title", d.trim(b)))) : f.push("ui-button-text-only");
    a.addClass(f.join(" "));
  }});
  d.widget("ui.buttonset", {version:"1.11.4", options:{items:"button, input[type\x3dbutton], input[type\x3dsubmit], input[type\x3dreset], input[type\x3dcheckbox], input[type\x3dradio], a, :data(ui-button)"}, _create:function() {
    this.element.addClass("ui-buttonset");
  }, _init:function() {
    this.refresh();
  }, _setOption:function(a, b) {
    "disabled" === a && this.buttons.button("option", a, b);
    this._super(a, b);
  }, refresh:function() {
    var a = "rtl" === this.element.css("direction"), b = this.element.find(this.options.items), c = b.filter(":ui-button");
    b.not(":ui-button").button();
    c.button("refresh");
    this.buttons = b.map(function() {
      return d(this).button("widget")[0];
    }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(a ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(a ? "ui-corner-left" : "ui-corner-right").end().end();
  }, _destroy:function() {
    this.element.removeClass("ui-buttonset");
    this.buttons.map(function() {
      return d(this).button("widget")[0];
    }).removeClass("ui-corner-left ui-corner-right").end().button("destroy");
  }});
  d.ui.button;
  d.extend(d.ui, {datepicker:{version:"1.11.4"}});
  var D;
  d.extend(Q.prototype, {markerClassName:"hasDatepicker", maxRows:4, _widgetDatepicker:function() {
    return this.dpDiv;
  }, setDefaults:function(a) {
    return H(this._defaults, a || {}), this;
  }, _attachDatepicker:function(a, b) {
    var c = a.nodeName.toLowerCase();
    var e = "div" === c || "span" === c;
    a.id || (this.uuid += 1, a.id = "dp" + this.uuid);
    var f = this._newInst(d(a), e);
    f.settings = d.extend({}, b || {});
    "input" === c ? this._connectDatepicker(a, f) : e && this._inlineDatepicker(a, f);
  }, _newInst:function(a, b) {
    return {id:a[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"), input:a, selectedDay:0, selectedMonth:0, selectedYear:0, drawMonth:0, drawYear:0, inline:b, dpDiv:b ? R(d("\x3cdiv class\x3d'" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'\x3e\x3c/div\x3e")) : this.dpDiv};
  }, _connectDatepicker:function(a, b) {
    var c = d(a);
    b.append = d([]);
    b.trigger = d([]);
    c.hasClass(this.markerClassName) || (this._attachments(c, b), c.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp), this._autoSize(b), d.data(a, "datepicker", b), b.settings.disabled && this._disableDatepicker(a));
  }, _attachments:function(a, b) {
    var c, e;
    var f = this._get(b, "appendText");
    var g = this._get(b, "isRTL");
    b.append && b.append.remove();
    f && (b.append = d("\x3cspan class\x3d'" + this._appendClass + "'\x3e" + f + "\x3c/span\x3e"), a[g ? "before" : "after"](b.append));
    a.unbind("focus", this._showDatepicker);
    b.trigger && b.trigger.remove();
    f = this._get(b, "showOn");
    "focus" !== f && "both" !== f || a.focus(this._showDatepicker);
    "button" !== f && "both" !== f || (c = this._get(b, "buttonText"), e = this._get(b, "buttonImage"), b.trigger = d(this._get(b, "buttonImageOnly") ? d("\x3cimg/\x3e").addClass(this._triggerClass).attr({src:e, alt:c, title:c}) : d("\x3cbutton type\x3d'button'\x3e\x3c/button\x3e").addClass(this._triggerClass).html(e ? d("\x3cimg/\x3e").attr({src:e, alt:c, title:c}) : c)), a[g ? "before" : "after"](b.trigger), b.trigger.click(function() {
      return d.datepicker._datepickerShowing && d.datepicker._lastInput === a[0] ? d.datepicker._hideDatepicker() : d.datepicker._datepickerShowing && d.datepicker._lastInput !== a[0] ? (d.datepicker._hideDatepicker(), d.datepicker._showDatepicker(a[0])) : d.datepicker._showDatepicker(a[0]), !1;
    }));
  }, _autoSize:function(a) {
    if (this._get(a, "autoSize") && !a.inline) {
      var b, c, d, f, g = new Date(2009, 11, 20), h = this._get(a, "dateFormat");
      h.match(/[DM]/) && (b = function(a) {
        for (f = d = c = 0; a.length > f; f++) {
          a[f].length > c && (c = a[f].length, d = f);
        }
        return d;
      }, g.setMonth(b(this._get(a, h.match(/MM/) ? "monthNames" : "monthNamesShort"))), g.setDate(b(this._get(a, h.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - g.getDay()));
      a.input.attr("size", this._formatDate(a, g).length);
    }
  }, _inlineDatepicker:function(a, b) {
    var c = d(a);
    c.hasClass(this.markerClassName) || (c.addClass(this.markerClassName).append(b.dpDiv), d.data(a, "datepicker", b), this._setDate(b, this._getDefaultDate(b), !0), this._updateDatepicker(b), this._updateAlternate(b), b.settings.disabled && this._disableDatepicker(a), b.dpDiv.css("display", "block"));
  }, _dialogDatepicker:function(a, b, c, e, f) {
    var g, h, k, l, m;
    a = this._dialogInst;
    return a || (this.uuid += 1, g = "dp" + this.uuid, this._dialogInput = d("\x3cinput type\x3d'text' id\x3d'" + g + "' style\x3d'position: absolute; top: -100px; width: 0px;'/\x3e"), this._dialogInput.keydown(this._doKeyDown), d("body").append(this._dialogInput), a = this._dialogInst = this._newInst(this._dialogInput, !1), a.settings = {}, d.data(this._dialogInput[0], "datepicker", a)), H(a.settings, e || {}), b = b && b.constructor === Date ? this._formatDate(a, b) : b, this._dialogInput.val(b), 
    this._pos = f ? f.length ? f : [f.pageX, f.pageY] : null, this._pos || (h = document.documentElement.clientWidth, k = document.documentElement.clientHeight, l = document.documentElement.scrollLeft || document.body.scrollLeft, m = document.documentElement.scrollTop || document.body.scrollTop, this._pos = [h / 2 - 100 + l, k / 2 - 150 + m]), this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"), a.settings.onSelect = c, this._inDialog = !0, this.dpDiv.addClass(this._dialogClass), 
    this._showDatepicker(this._dialogInput[0]), d.blockUI && d.blockUI(this.dpDiv), d.data(this._dialogInput[0], "datepicker", a), this;
  }, _destroyDatepicker:function(a) {
    var b, c = d(a), e = d.data(a, "datepicker");
    c.hasClass(this.markerClassName) && (b = a.nodeName.toLowerCase(), d.removeData(a, "datepicker"), "input" === b ? (e.append.remove(), e.trigger.remove(), c.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)) : ("div" === b || "span" === b) && c.removeClass(this.markerClassName).empty(), D === e && (D = null));
  }, _enableDatepicker:function(a) {
    var b, c, e = d(a), f = d.data(a, "datepicker");
    e.hasClass(this.markerClassName) && (b = a.nodeName.toLowerCase(), "input" === b ? (a.disabled = !1, f.trigger.filter("button").each(function() {
      this.disabled = !1;
    }).end().filter("img").css({opacity:"1.0", cursor:""})) : ("div" === b || "span" === b) && (c = e.children("." + this._inlineClass), c.children().removeClass("ui-state-disabled"), c.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !1)), this._disabledInputs = d.map(this._disabledInputs, function(b) {
      return b === a ? null : b;
    }));
  }, _disableDatepicker:function(a) {
    var b, c, e = d(a), f = d.data(a, "datepicker");
    e.hasClass(this.markerClassName) && (b = a.nodeName.toLowerCase(), "input" === b ? (a.disabled = !0, f.trigger.filter("button").each(function() {
      this.disabled = !0;
    }).end().filter("img").css({opacity:"0.5", cursor:"default"})) : ("div" === b || "span" === b) && (c = e.children("." + this._inlineClass), c.children().addClass("ui-state-disabled"), c.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !0)), this._disabledInputs = d.map(this._disabledInputs, function(b) {
      return b === a ? null : b;
    }), this._disabledInputs[this._disabledInputs.length] = a);
  }, _isDisabledDatepicker:function(a) {
    if (!a) {
      return !1;
    }
    for (var b = 0; this._disabledInputs.length > b; b++) {
      if (this._disabledInputs[b] === a) {
        return !0;
      }
    }
    return !1;
  }, _getInst:function(a) {
    try {
      return d.data(a, "datepicker");
    } catch (b) {
      throw "Missing instance data for this datepicker";
    }
  }, _optionDatepicker:function(a, b, c) {
    var e, f, g, h, k = this._getInst(a);
    return 2 === arguments.length && "string" == typeof b ? "defaults" === b ? d.extend({}, d.datepicker._defaults) : k ? "all" === b ? d.extend({}, k.settings) : this._get(k, b) : null : (e = b || {}, "string" == typeof b && (e = {}, e[b] = c), k && (this._curInst === k && this._hideDatepicker(), f = this._getDateDatepicker(a, !0), g = this._getMinMaxDate(k, "min"), h = this._getMinMaxDate(k, "max"), H(k.settings, e), null !== g && void 0 !== e.dateFormat && void 0 === e.minDate && (k.settings.minDate = 
    this._formatDate(k, g)), null !== h && void 0 !== e.dateFormat && void 0 === e.maxDate && (k.settings.maxDate = this._formatDate(k, h)), "disabled" in e && (e.disabled ? this._disableDatepicker(a) : this._enableDatepicker(a)), this._attachments(d(a), k), this._autoSize(k), this._setDate(k, f), this._updateAlternate(k), this._updateDatepicker(k)), void 0);
  }, _changeDatepicker:function(a, b, c) {
    this._optionDatepicker(a, b, c);
  }, _refreshDatepicker:function(a) {
    (a = this._getInst(a)) && this._updateDatepicker(a);
  }, _setDateDatepicker:function(a, b) {
    (a = this._getInst(a)) && (this._setDate(a, b), this._updateDatepicker(a), this._updateAlternate(a));
  }, _getDateDatepicker:function(a, b) {
    a = this._getInst(a);
    return a && !a.inline && this._setDateFromField(a, b), a ? this._getDate(a) : null;
  }, _doKeyDown:function(a) {
    var b, c, e, f = d.datepicker._getInst(a.target), g = !0, h = f.dpDiv.is(".ui-datepicker-rtl");
    if (f._keyEvent = !0, d.datepicker._datepickerShowing) {
      switch(a.keyCode) {
        case 9:
          d.datepicker._hideDatepicker();
          g = !1;
          break;
        case 13:
          return e = d("td." + d.datepicker._dayOverClass + ":not(." + d.datepicker._currentClass + ")", f.dpDiv), e[0] && d.datepicker._selectDay(a.target, f.selectedMonth, f.selectedYear, e[0]), b = d.datepicker._get(f, "onSelect"), b ? (c = d.datepicker._formatDate(f), b.apply(f.input ? f.input[0] : null, [c, f])) : d.datepicker._hideDatepicker(), !1;
        case 27:
          d.datepicker._hideDatepicker();
          break;
        case 33:
          d.datepicker._adjustDate(a.target, a.ctrlKey ? -d.datepicker._get(f, "stepBigMonths") : -d.datepicker._get(f, "stepMonths"), "M");
          break;
        case 34:
          d.datepicker._adjustDate(a.target, a.ctrlKey ? +d.datepicker._get(f, "stepBigMonths") : +d.datepicker._get(f, "stepMonths"), "M");
          break;
        case 35:
          (a.ctrlKey || a.metaKey) && d.datepicker._clearDate(a.target);
          g = a.ctrlKey || a.metaKey;
          break;
        case 36:
          (a.ctrlKey || a.metaKey) && d.datepicker._gotoToday(a.target);
          g = a.ctrlKey || a.metaKey;
          break;
        case 37:
          (a.ctrlKey || a.metaKey) && d.datepicker._adjustDate(a.target, h ? 1 : -1, "D");
          g = a.ctrlKey || a.metaKey;
          a.originalEvent.altKey && d.datepicker._adjustDate(a.target, a.ctrlKey ? -d.datepicker._get(f, "stepBigMonths") : -d.datepicker._get(f, "stepMonths"), "M");
          break;
        case 38:
          (a.ctrlKey || a.metaKey) && d.datepicker._adjustDate(a.target, -7, "D");
          g = a.ctrlKey || a.metaKey;
          break;
        case 39:
          (a.ctrlKey || a.metaKey) && d.datepicker._adjustDate(a.target, h ? -1 : 1, "D");
          g = a.ctrlKey || a.metaKey;
          a.originalEvent.altKey && d.datepicker._adjustDate(a.target, a.ctrlKey ? +d.datepicker._get(f, "stepBigMonths") : +d.datepicker._get(f, "stepMonths"), "M");
          break;
        case 40:
          (a.ctrlKey || a.metaKey) && d.datepicker._adjustDate(a.target, 7, "D");
          g = a.ctrlKey || a.metaKey;
          break;
        default:
          g = !1;
      }
    } else {
      36 === a.keyCode && a.ctrlKey ? d.datepicker._showDatepicker(this) : g = !1;
    }
    g && (a.preventDefault(), a.stopPropagation());
  }, _doKeyPress:function(a) {
    var b, c, e = d.datepicker._getInst(a.target);
    return d.datepicker._get(e, "constrainInput") ? (b = d.datepicker._possibleChars(d.datepicker._get(e, "dateFormat")), c = String.fromCharCode(null == a.charCode ? a.keyCode : a.charCode), a.ctrlKey || a.metaKey || " " > c || !b || -1 < b.indexOf(c)) : void 0;
  }, _doKeyUp:function(a) {
    var b;
    a = d.datepicker._getInst(a.target);
    if (a.input.val() !== a.lastVal) {
      try {
        (b = d.datepicker.parseDate(d.datepicker._get(a, "dateFormat"), a.input ? a.input.val() : null, d.datepicker._getFormatConfig(a))) && (d.datepicker._setDateFromField(a), d.datepicker._updateAlternate(a), d.datepicker._updateDatepicker(a));
      } catch (c) {
      }
    }
    return !0;
  }, _showDatepicker:function(a) {
    if (a = a.target || a, "input" !== a.nodeName.toLowerCase() && (a = d("input", a.parentNode)[0]), !d.datepicker._isDisabledDatepicker(a) && d.datepicker._lastInput !== a) {
      var b, c, e, f;
      var g = d.datepicker._getInst(a);
      d.datepicker._curInst && d.datepicker._curInst !== g && (d.datepicker._curInst.dpDiv.stop(!0, !0), g && d.datepicker._datepickerShowing && d.datepicker._hideDatepicker(d.datepicker._curInst.input[0]));
      var h = (h = d.datepicker._get(g, "beforeShow")) ? h.apply(a, [a, g]) : {};
      !1 !== h && (H(g.settings, h), g.lastVal = null, d.datepicker._lastInput = a, d.datepicker._setDateFromField(g), d.datepicker._inDialog && (a.value = ""), d.datepicker._pos || (d.datepicker._pos = d.datepicker._findPos(a), d.datepicker._pos[1] += a.offsetHeight), b = !1, d(a).parents().each(function() {
        return b |= "fixed" === d(this).css("position"), !b;
      }), c = {left:d.datepicker._pos[0], top:d.datepicker._pos[1]}, d.datepicker._pos = null, g.dpDiv.empty(), g.dpDiv.css({position:"absolute", display:"block", top:"-1000px"}), d.datepicker._updateDatepicker(g), c = d.datepicker._checkOffset(g, c, b), g.dpDiv.css({position:d.datepicker._inDialog && d.blockUI ? "static" : b ? "fixed" : "absolute", display:"none", left:c.left + "px", top:c.top + "px"}), g.inline || (e = d.datepicker._get(g, "showAnim"), f = d.datepicker._get(g, "duration"), g.dpDiv.css("z-index", 
      W(d(a)) + 1), d.datepicker._datepickerShowing = !0, d.effects && d.effects.effect[e] ? g.dpDiv.show(e, d.datepicker._get(g, "showOptions"), f) : g.dpDiv[e || "show"](e ? f : null), d.datepicker._shouldFocusInput(g) && g.input.focus(), d.datepicker._curInst = g));
    }
  }, _updateDatepicker:function(a) {
    this.maxRows = 4;
    D = a;
    a.dpDiv.empty().append(this._generateHTML(a));
    this._attachHandlers(a);
    var b, c = this._getNumberOfMonths(a), e = c[1], f = a.dpDiv.find("." + this._dayOverClass + " a");
    0 < f.length && S.apply(f.get(0));
    a.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
    1 < e && a.dpDiv.addClass("ui-datepicker-multi-" + e).css("width", 17 * e + "em");
    a.dpDiv[(1 !== c[0] || 1 !== c[1] ? "add" : "remove") + "Class"]("ui-datepicker-multi");
    a.dpDiv[(this._get(a, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl");
    a === d.datepicker._curInst && d.datepicker._datepickerShowing && d.datepicker._shouldFocusInput(a) && a.input.focus();
    a.yearshtml && (b = a.yearshtml, setTimeout(function() {
      b === a.yearshtml && a.yearshtml && a.dpDiv.find("select.ui-datepicker-year:first").replaceWith(a.yearshtml);
      b = a.yearshtml = null;
    }, 0));
  }, _shouldFocusInput:function(a) {
    return a.input && a.input.is(":visible") && !a.input.is(":disabled") && !a.input.is(":focus");
  }, _checkOffset:function(a, b, c) {
    var e = a.dpDiv.outerWidth(), f = a.dpDiv.outerHeight(), g = a.input ? a.input.outerWidth() : 0, h = a.input ? a.input.outerHeight() : 0, k = document.documentElement.clientWidth + (c ? 0 : d(document).scrollLeft()), l = document.documentElement.clientHeight + (c ? 0 : d(document).scrollTop());
    return b.left -= this._get(a, "isRTL") ? e - g : 0, b.left -= c && b.left === a.input.offset().left ? d(document).scrollLeft() : 0, b.top -= c && b.top === a.input.offset().top + h ? d(document).scrollTop() : 0, b.left -= Math.min(b.left, b.left + e > k && k > e ? Math.abs(b.left + e - k) : 0), b.top -= Math.min(b.top, b.top + f > l && l > f ? Math.abs(f + h) : 0), b;
  }, _findPos:function(a) {
    var b, c = this._getInst(a);
    for (c = this._get(c, "isRTL"); a && ("hidden" === a.type || 1 !== a.nodeType || d.expr.filters.hidden(a));) {
      a = a[c ? "previousSibling" : "nextSibling"];
    }
    return b = d(a).offset(), [b.left, b.top];
  }, _hideDatepicker:function(a) {
    var b, c, e, f, g = this._curInst;
    !g || a && g !== d.data(a, "datepicker") || this._datepickerShowing && (b = this._get(g, "showAnim"), c = this._get(g, "duration"), e = function() {
      d.datepicker._tidyDialog(g);
    }, d.effects && (d.effects.effect[b] || d.effects[b]) ? g.dpDiv.hide(b, d.datepicker._get(g, "showOptions"), c, e) : g.dpDiv["slideDown" === b ? "slideUp" : "fadeIn" === b ? "fadeOut" : "hide"](b ? c : null, e), b || e(), this._datepickerShowing = !1, f = this._get(g, "onClose"), f && f.apply(g.input ? g.input[0] : null, [g.input ? g.input.val() : "", g]), this._lastInput = null, this._inDialog && (this._dialogInput.css({position:"absolute", left:"0", top:"-100px"}), d.blockUI && (d.unblockUI(), 
    d("body").append(this.dpDiv))), this._inDialog = !1);
  }, _tidyDialog:function(a) {
    a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar");
  }, _checkExternalClick:function(a) {
    if (d.datepicker._curInst) {
      a = d(a.target);
      var b = d.datepicker._getInst(a[0]);
      (!(a[0].id === d.datepicker._mainDivId || 0 !== a.parents("#" + d.datepicker._mainDivId).length || a.hasClass(d.datepicker.markerClassName) || a.closest("." + d.datepicker._triggerClass).length || !d.datepicker._datepickerShowing || d.datepicker._inDialog && d.blockUI) || a.hasClass(d.datepicker.markerClassName) && d.datepicker._curInst !== b) && d.datepicker._hideDatepicker();
    }
  }, _adjustDate:function(a, b, c) {
    a = d(a);
    var e = this._getInst(a[0]);
    this._isDisabledDatepicker(a[0]) || (this._adjustInstDate(e, b + ("M" === c ? this._get(e, "showCurrentAtPos") : 0), c), this._updateDatepicker(e));
  }, _gotoToday:function(a) {
    var b;
    a = d(a);
    var c = this._getInst(a[0]);
    this._get(c, "gotoCurrent") && c.currentDay ? (c.selectedDay = c.currentDay, c.drawMonth = c.selectedMonth = c.currentMonth, c.drawYear = c.selectedYear = c.currentYear) : (b = new Date, c.selectedDay = b.getDate(), c.drawMonth = c.selectedMonth = b.getMonth(), c.drawYear = c.selectedYear = b.getFullYear());
    this._notifyChange(c);
    this._adjustDate(a);
  }, _selectMonthYear:function(a, b, c) {
    a = d(a);
    var e = this._getInst(a[0]);
    e["selected" + ("M" === c ? "Month" : "Year")] = e["draw" + ("M" === c ? "Month" : "Year")] = parseInt(b.options[b.selectedIndex].value, 10);
    this._notifyChange(e);
    this._adjustDate(a);
  }, _selectDay:function(a, b, c, e) {
    var f, g = d(a);
    d(e).hasClass(this._unselectableClass) || this._isDisabledDatepicker(g[0]) || (f = this._getInst(g[0]), f.selectedDay = f.currentDay = d("a", e).html(), f.selectedMonth = f.currentMonth = b, f.selectedYear = f.currentYear = c, this._selectDate(a, this._formatDate(f, f.currentDay, f.currentMonth, f.currentYear)));
  }, _clearDate:function(a) {
    a = d(a);
    this._selectDate(a, "");
  }, _selectDate:function(a, b) {
    a = d(a);
    var c = this._getInst(a[0]);
    b = null != b ? b : this._formatDate(c);
    c.input && c.input.val(b);
    this._updateAlternate(c);
    (a = this._get(c, "onSelect")) ? a.apply(c.input ? c.input[0] : null, [b, c]) : c.input && c.input.trigger("change");
    c.inline ? this._updateDatepicker(c) : (this._hideDatepicker(), this._lastInput = c.input[0], "object" != typeof c.input[0] && c.input.focus(), this._lastInput = null);
  }, _updateAlternate:function(a) {
    var b, c, e, f = this._get(a, "altField");
    f && (b = this._get(a, "altFormat") || this._get(a, "dateFormat"), c = this._getDate(a), e = this.formatDate(b, c, this._getFormatConfig(a)), d(f).each(function() {
      d(this).val(e);
    }));
  }, noWeekends:function(a) {
    a = a.getDay();
    return [0 < a && 6 > a, ""];
  }, iso8601Week:function(a) {
    var b;
    a = new Date(a.getTime());
    return a.setDate(a.getDate() + 4 - (a.getDay() || 7)), b = a.getTime(), a.setMonth(0), a.setDate(1), Math.floor(Math.round((b - a) / 864E5) / 7) + 1;
  }, parseDate:function(a, b, c) {
    if (null == a || null == b) {
      throw "Invalid arguments";
    }
    if (b = "object" == typeof b ? "" + b : b + "", "" === b) {
      return null;
    }
    var e, f, g, h = 0, k = (c ? c.shortYearCutoff : null) || this._defaults.shortYearCutoff;
    k = "string" != typeof k ? k : (new Date).getFullYear() % 100 + parseInt(k, 10);
    var l = (c ? c.dayNamesShort : null) || this._defaults.dayNamesShort, m = (c ? c.dayNames : null) || this._defaults.dayNames, n = (c ? c.monthNamesShort : null) || this._defaults.monthNamesShort;
    c = (c ? c.monthNames : null) || this._defaults.monthNames;
    var p = -1, q = -1, t = -1, r = -1, u = !1, x = function(b) {
      b = a.length > e + 1 && a.charAt(e + 1) === b;
      return b && e++, b;
    }, y = function(a) {
      var c = x(a);
      c = "@" === a ? 14 : "!" === a ? 20 : "y" === a && c ? 4 : "o" === a ? 3 : 2;
      a = RegExp("^\\d{" + ("y" === a ? c : 1) + "," + c + "}");
      a = b.substring(h).match(a);
      if (!a) {
        throw "Missing number at position " + h;
      }
      return h += a[0].length, parseInt(a[0], 10);
    }, z = function(a, c, e) {
      var f = -1;
      a = d.map(x(a) ? e : c, function(a, b) {
        return [[b, a]];
      }).sort(function(a, b) {
        return -(a[1].length - b[1].length);
      });
      if (d.each(a, function(a, c) {
        a = c[1];
        return b.substr(h, a.length).toLowerCase() === a.toLowerCase() ? (f = c[0], h += a.length, !1) : void 0;
      }), -1 !== f) {
        return f + 1;
      }
      throw "Unknown name at position " + h;
    }, v = function() {
      if (b.charAt(h) !== a.charAt(e)) {
        throw "Unexpected literal at position " + h;
      }
      h++;
    };
    for (e = 0; a.length > e; e++) {
      if (u) {
        "'" !== a.charAt(e) || x("'") ? v() : u = !1;
      } else {
        switch(a.charAt(e)) {
          case "d":
            t = y("d");
            break;
          case "D":
            z("D", l, m);
            break;
          case "o":
            r = y("o");
            break;
          case "m":
            q = y("m");
            break;
          case "M":
            q = z("M", n, c);
            break;
          case "y":
            p = y("y");
            break;
          case "@":
            var w = new Date(y("@"));
            p = w.getFullYear();
            q = w.getMonth() + 1;
            t = w.getDate();
            break;
          case "!":
            w = new Date((y("!") - this._ticksTo1970) / 1E4);
            p = w.getFullYear();
            q = w.getMonth() + 1;
            t = w.getDate();
            break;
          case "'":
            x("'") ? v() : u = !0;
            break;
          default:
            v();
        }
      }
    }
    if (b.length > h && (g = b.substr(h), !/^\s+/.test(g))) {
      throw "Extra/unparsed characters found in date: " + g;
    }
    if (-1 === p ? p = (new Date).getFullYear() : 100 > p && (p += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (k >= p ? 0 : -100)), -1 < r) {
      for (q = 1, t = r; !(f = this._getDaysInMonth(p, q - 1), f >= t);) {
        q++, t -= f;
      }
    }
    if (w = this._daylightSavingAdjust(new Date(p, q - 1, t)), w.getFullYear() !== p || w.getMonth() + 1 !== q || w.getDate() !== t) {
      throw "Invalid date";
    }
    return w;
  }, ATOM:"yy-mm-dd", COOKIE:"D, dd M yy", ISO_8601:"yy-mm-dd", RFC_822:"D, d M y", RFC_850:"DD, dd-M-y", RFC_1036:"D, d M y", RFC_1123:"D, d M yy", RFC_2822:"D, d M yy", RSS:"D, d M y", TICKS:"!", TIMESTAMP:"@", W3C:"yy-mm-dd", _ticksTo1970:864E9 * 719162, formatDate:function(a, b, c) {
    if (!b) {
      return "";
    }
    var d, f = (c ? c.dayNamesShort : null) || this._defaults.dayNamesShort, g = (c ? c.dayNames : null) || this._defaults.dayNames, h = (c ? c.monthNamesShort : null) || this._defaults.monthNamesShort;
    c = (c ? c.monthNames : null) || this._defaults.monthNames;
    var k = function(b) {
      b = a.length > d + 1 && a.charAt(d + 1) === b;
      return b && d++, b;
    }, l = function(a, b, c) {
      b = "" + b;
      if (k(a)) {
        for (; c > b.length;) {
          b = "0" + b;
        }
      }
      return b;
    }, m = function(a, b, c, d) {
      return k(a) ? d[b] : c[b];
    }, n = "", p = !1;
    if (b) {
      for (d = 0; a.length > d; d++) {
        if (p) {
          "'" !== a.charAt(d) || k("'") ? n += a.charAt(d) : p = !1;
        } else {
          switch(a.charAt(d)) {
            case "d":
              n += l("d", b.getDate(), 2);
              break;
            case "D":
              n += m("D", b.getDay(), f, g);
              break;
            case "o":
              n += l("o", Math.round(((new Date(b.getFullYear(), b.getMonth(), b.getDate())).getTime() - (new Date(b.getFullYear(), 0, 0)).getTime()) / 864E5), 3);
              break;
            case "m":
              n += l("m", b.getMonth() + 1, 2);
              break;
            case "M":
              n += m("M", b.getMonth(), h, c);
              break;
            case "y":
              n += k("y") ? b.getFullYear() : (10 > b.getYear() % 100 ? "0" : "") + b.getYear() % 100;
              break;
            case "@":
              n += b.getTime();
              break;
            case "!":
              n += 1E4 * b.getTime() + this._ticksTo1970;
              break;
            case "'":
              k("'") ? n += "'" : p = !0;
              break;
            default:
              n += a.charAt(d);
          }
        }
      }
    }
    return n;
  }, _possibleChars:function(a) {
    var b, c = "", d = !1, f = function(c) {
      c = a.length > b + 1 && a.charAt(b + 1) === c;
      return c && b++, c;
    };
    for (b = 0; a.length > b; b++) {
      if (d) {
        "'" !== a.charAt(b) || f("'") ? c += a.charAt(b) : d = !1;
      } else {
        switch(a.charAt(b)) {
          case "d":
          case "m":
          case "y":
          case "@":
            c += "0123456789";
            break;
          case "D":
          case "M":
            return null;
          case "'":
            f("'") ? c += "'" : d = !0;
            break;
          default:
            c += a.charAt(b);
        }
      }
    }
    return c;
  }, _get:function(a, b) {
    return void 0 !== a.settings[b] ? a.settings[b] : this._defaults[b];
  }, _setDateFromField:function(a, b) {
    if (a.input.val() !== a.lastVal) {
      var c = this._get(a, "dateFormat"), d = a.lastVal = a.input ? a.input.val() : null, f = this._getDefaultDate(a), g = f, h = this._getFormatConfig(a);
      try {
        g = this.parseDate(c, d, h) || f;
      } catch (k) {
        d = b ? "" : d;
      }
      a.selectedDay = g.getDate();
      a.drawMonth = a.selectedMonth = g.getMonth();
      a.drawYear = a.selectedYear = g.getFullYear();
      a.currentDay = d ? g.getDate() : 0;
      a.currentMonth = d ? g.getMonth() : 0;
      a.currentYear = d ? g.getFullYear() : 0;
      this._adjustInstDate(a);
    }
  }, _getDefaultDate:function(a) {
    return this._restrictMinMax(a, this._determineDate(a, this._get(a, "defaultDate"), new Date));
  }, _determineDate:function(a, b, c) {
    var e = function(a) {
      var b = new Date;
      return b.setDate(b.getDate() + a), b;
    }, f = function(b) {
      try {
        return d.datepicker.parseDate(d.datepicker._get(a, "dateFormat"), b, d.datepicker._getFormatConfig(a));
      } catch (p) {
      }
      var c = (b.toLowerCase().match(/^c/) ? d.datepicker._getDate(a) : null) || new Date, e = c.getFullYear(), f = c.getMonth();
      c = c.getDate();
      for (var g = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, n = g.exec(b); n;) {
        switch(n[2] || "d") {
          case "d":
          case "D":
            c += parseInt(n[1], 10);
            break;
          case "w":
          case "W":
            c += 7 * parseInt(n[1], 10);
            break;
          case "m":
          case "M":
            f += parseInt(n[1], 10);
            c = Math.min(c, d.datepicker._getDaysInMonth(e, f));
            break;
          case "y":
          case "Y":
            e += parseInt(n[1], 10), c = Math.min(c, d.datepicker._getDaysInMonth(e, f));
        }
        n = g.exec(b);
      }
      return new Date(e, f, c);
    };
    b = null == b || "" === b ? c : "string" == typeof b ? f(b) : "number" == typeof b ? isNaN(b) ? c : e(b) : new Date(b.getTime());
    return b = b && "Invalid Date" == "" + b ? c : b, b && (b.setHours(0), b.setMinutes(0), b.setSeconds(0), b.setMilliseconds(0)), this._daylightSavingAdjust(b);
  }, _daylightSavingAdjust:function(a) {
    return a ? (a.setHours(12 < a.getHours() ? a.getHours() + 2 : 0), a) : null;
  }, _setDate:function(a, b, c) {
    var d = !b, f = a.selectedMonth, g = a.selectedYear;
    b = this._restrictMinMax(a, this._determineDate(a, b, new Date));
    a.selectedDay = a.currentDay = b.getDate();
    a.drawMonth = a.selectedMonth = a.currentMonth = b.getMonth();
    a.drawYear = a.selectedYear = a.currentYear = b.getFullYear();
    f === a.selectedMonth && g === a.selectedYear || c || this._notifyChange(a);
    this._adjustInstDate(a);
    a.input && a.input.val(d ? "" : this._formatDate(a));
  }, _getDate:function(a) {
    return !a.currentYear || a.input && "" === a.input.val() ? null : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay));
  }, _attachHandlers:function(a) {
    var b = this._get(a, "stepMonths"), c = "#" + a.id.replace(/\\\\/g, "\\");
    a.dpDiv.find("[data-handler]").map(function() {
      d(this).bind(this.getAttribute("data-event"), {prev:function() {
        d.datepicker._adjustDate(c, -b, "M");
      }, next:function() {
        d.datepicker._adjustDate(c, +b, "M");
      }, hide:function() {
        d.datepicker._hideDatepicker();
      }, today:function() {
        d.datepicker._gotoToday(c);
      }, selectDay:function() {
        return d.datepicker._selectDay(c, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this), !1;
      }, selectMonth:function() {
        return d.datepicker._selectMonthYear(c, this, "M"), !1;
      }, selectYear:function() {
        return d.datepicker._selectMonthYear(c, this, "Y"), !1;
      }}[this.getAttribute("data-handler")]);
    });
  }, _generateHTML:function(a) {
    var b, c, d, f, g, h, k, l = new Date;
    l = this._daylightSavingAdjust(new Date(l.getFullYear(), l.getMonth(), l.getDate()));
    var m = this._get(a, "isRTL");
    var n = this._get(a, "showButtonPanel");
    var p = this._get(a, "hideIfNoPrevNext");
    var q = this._get(a, "navigationAsDateFormat");
    var t = this._getNumberOfMonths(a), r = this._get(a, "showCurrentAtPos");
    var u = this._get(a, "stepMonths");
    var x = 1 !== t[0] || 1 !== t[1], y = this._daylightSavingAdjust(a.currentDay ? new Date(a.currentYear, a.currentMonth, a.currentDay) : new Date(9999, 9, 9)), z = this._getMinMaxDate(a, "min"), v = this._getMinMaxDate(a, "max");
    r = a.drawMonth - r;
    var w = a.drawYear;
    if (0 > r && (r += 12, w--), v) {
      var B = this._daylightSavingAdjust(new Date(v.getFullYear(), v.getMonth() - t[0] * t[1] + 1, v.getDate()));
      for (B = z && z > B ? z : B; this._daylightSavingAdjust(new Date(w, r, 1)) > B;) {
        r--, 0 > r && (r = 11, w--);
      }
    }
    a.drawMonth = r;
    a.drawYear = w;
    B = this._get(a, "prevText");
    B = q ? this.formatDate(B, this._daylightSavingAdjust(new Date(w, r - u, 1)), this._getFormatConfig(a)) : B;
    B = this._canAdjustMonth(a, -1, w, r) ? "\x3ca class\x3d'ui-datepicker-prev ui-corner-all' data-handler\x3d'prev' data-event\x3d'click' title\x3d'" + B + "'\x3e\x3cspan class\x3d'ui-icon ui-icon-circle-triangle-" + (m ? "e" : "w") + "'\x3e" + B + "\x3c/span\x3e\x3c/a\x3e" : p ? "" : "\x3ca class\x3d'ui-datepicker-prev ui-corner-all ui-state-disabled' title\x3d'" + B + "'\x3e\x3cspan class\x3d'ui-icon ui-icon-circle-triangle-" + (m ? "e" : "w") + "'\x3e" + B + "\x3c/span\x3e\x3c/a\x3e";
    var C = this._get(a, "nextText");
    C = q ? this.formatDate(C, this._daylightSavingAdjust(new Date(w, r + u, 1)), this._getFormatConfig(a)) : C;
    p = this._canAdjustMonth(a, 1, w, r) ? "\x3ca class\x3d'ui-datepicker-next ui-corner-all' data-handler\x3d'next' data-event\x3d'click' title\x3d'" + C + "'\x3e\x3cspan class\x3d'ui-icon ui-icon-circle-triangle-" + (m ? "w" : "e") + "'\x3e" + C + "\x3c/span\x3e\x3c/a\x3e" : p ? "" : "\x3ca class\x3d'ui-datepicker-next ui-corner-all ui-state-disabled' title\x3d'" + C + "'\x3e\x3cspan class\x3d'ui-icon ui-icon-circle-triangle-" + (m ? "w" : "e") + "'\x3e" + C + "\x3c/span\x3e\x3c/a\x3e";
    u = this._get(a, "currentText");
    C = this._get(a, "gotoCurrent") && a.currentDay ? y : l;
    u = q ? this.formatDate(u, C, this._getFormatConfig(a)) : u;
    q = a.inline ? "" : "\x3cbutton type\x3d'button' class\x3d'ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler\x3d'hide' data-event\x3d'click'\x3e" + this._get(a, "closeText") + "\x3c/button\x3e";
    n = n ? "\x3cdiv class\x3d'ui-datepicker-buttonpane ui-widget-content'\x3e" + (m ? q : "") + (this._isInRange(a, C) ? "\x3cbutton type\x3d'button' class\x3d'ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler\x3d'today' data-event\x3d'click'\x3e" + u + "\x3c/button\x3e" : "") + (m ? "" : q) + "\x3c/div\x3e" : "";
    q = parseInt(this._get(a, "firstDay"), 10);
    q = isNaN(q) ? 0 : q;
    u = this._get(a, "showWeek");
    C = this._get(a, "dayNames");
    var I = this._get(a, "dayNamesMin");
    var L = this._get(a, "monthNames");
    var Y = this._get(a, "monthNamesShort");
    var U = this._get(a, "beforeShowDay");
    var D = this._get(a, "showOtherMonths");
    var F = this._get(a, "selectOtherMonths");
    var H = this._getDefaultDate(a);
    var G = "";
    for (c = 0; t[0] > c; c++) {
      var K = "";
      this.maxRows = 4;
      for (d = 0; t[1] > d; d++) {
        if (f = this._daylightSavingAdjust(new Date(w, r, a.selectedDay)), b = " ui-corner-all", g = "", x) {
          if (g += "\x3cdiv class\x3d'ui-datepicker-group", 1 < t[1]) {
            switch(d) {
              case 0:
                g += " ui-datepicker-group-first";
                b = " ui-corner-" + (m ? "right" : "left");
                break;
              case t[1] - 1:
                g += " ui-datepicker-group-last";
                b = " ui-corner-" + (m ? "left" : "right");
                break;
              default:
                g += " ui-datepicker-group-middle", b = "";
            }
          }
          g += "'\x3e";
        }
        g += "\x3cdiv class\x3d'ui-datepicker-header ui-widget-header ui-helper-clearfix" + b + "'\x3e" + (/all|left/.test(b) && 0 === c ? m ? p : B : "") + (/all|right/.test(b) && 0 === c ? m ? B : p : "") + this._generateMonthYearHeader(a, r, w, z, v, 0 < c || 0 < d, L, Y) + "\x3c/div\x3e\x3ctable class\x3d'ui-datepicker-calendar'\x3e\x3cthead\x3e\x3ctr\x3e";
        var E = u ? "\x3cth class\x3d'ui-datepicker-week-col'\x3e" + this._get(a, "weekHeader") + "\x3c/th\x3e" : "";
        for (b = 0; 7 > b; b++) {
          var A = (b + q) % 7;
          E += "\x3cth scope\x3d'col'" + (5 <= (b + q + 6) % 7 ? " class\x3d'ui-datepicker-week-end'" : "") + "\x3e\x3cspan title\x3d'" + C[A] + "'\x3e" + I[A] + "\x3c/span\x3e\x3c/th\x3e";
        }
        g += E + "\x3c/tr\x3e\x3c/thead\x3e\x3ctbody\x3e";
        E = this._getDaysInMonth(w, r);
        w === a.selectedYear && r === a.selectedMonth && (a.selectedDay = Math.min(a.selectedDay, E));
        b = (this._getFirstDayOfMonth(w, r) - q + 7) % 7;
        E = Math.ceil((b + E) / 7);
        this.maxRows = E = x ? this.maxRows > E ? this.maxRows : E : E;
        A = this._daylightSavingAdjust(new Date(w, r, 1 - b));
        for (h = 0; E > h; h++) {
          g += "\x3ctr\x3e";
          var J = u ? "\x3ctd class\x3d'ui-datepicker-week-col'\x3e" + this._get(a, "calculateWeek")(A) + "\x3c/td\x3e" : "";
          for (b = 0; 7 > b; b++) {
            var M = U ? U.apply(a.input ? a.input[0] : null, [A]) : [!0, ""];
            var N = (k = A.getMonth() !== r) && !F || !M[0] || z && z > A || v && A > v;
            J += "\x3ctd class\x3d'" + (5 <= (b + q + 6) % 7 ? " ui-datepicker-week-end" : "") + (k ? " ui-datepicker-other-month" : "") + (A.getTime() === f.getTime() && r === a.selectedMonth && a._keyEvent || H.getTime() === A.getTime() && H.getTime() === f.getTime() ? " " + this._dayOverClass : "") + (N ? " " + this._unselectableClass + " ui-state-disabled" : "") + (k && !D ? "" : " " + M[1] + (A.getTime() === y.getTime() ? " " + this._currentClass : "") + (A.getTime() === l.getTime() ? " ui-datepicker-today" : 
            "")) + "'" + (k && !D || !M[2] ? "" : " title\x3d'" + M[2].replace(/'/g, "\x26#39;") + "'") + (N ? "" : " data-handler\x3d'selectDay' data-event\x3d'click' data-month\x3d'" + A.getMonth() + "' data-year\x3d'" + A.getFullYear() + "'") + "\x3e" + (k && !D ? "\x26#xa0;" : N ? "\x3cspan class\x3d'ui-state-default'\x3e" + A.getDate() + "\x3c/span\x3e" : "\x3ca class\x3d'ui-state-default" + (A.getTime() === l.getTime() ? " ui-state-highlight" : "") + (A.getTime() === y.getTime() ? " ui-state-active" : 
            "") + (k ? " ui-priority-secondary" : "") + "' href\x3d'#'\x3e" + A.getDate() + "\x3c/a\x3e") + "\x3c/td\x3e";
            A.setDate(A.getDate() + 1);
            A = this._daylightSavingAdjust(A);
          }
          g += J + "\x3c/tr\x3e";
        }
        r++;
        11 < r && (r = 0, w++);
        g += "\x3c/tbody\x3e\x3c/table\x3e" + (x ? "\x3c/div\x3e" + (0 < t[0] && d === t[1] - 1 ? "\x3cdiv class\x3d'ui-datepicker-row-break'\x3e\x3c/div\x3e" : "") : "");
        K += g;
      }
      G += K;
    }
    return G += n, a._keyEvent = !1, G;
  }, _generateMonthYearHeader:function(a, b, c, d, f, g, h, k) {
    var e, m = this._get(a, "changeMonth"), n = this._get(a, "changeYear"), p = this._get(a, "showMonthAfterYear"), q = "\x3cdiv class\x3d'ui-datepicker-title'\x3e", t = "";
    if (g || !m) {
      t += "\x3cspan class\x3d'ui-datepicker-month'\x3e" + h[b] + "\x3c/span\x3e";
    } else {
      h = d && d.getFullYear() === c;
      var r = f && f.getFullYear() === c;
      t += "\x3cselect class\x3d'ui-datepicker-month' data-handler\x3d'selectMonth' data-event\x3d'change'\x3e";
      for (e = 0; 12 > e; e++) {
        (!h || e >= d.getMonth()) && (!r || f.getMonth() >= e) && (t += "\x3coption value\x3d'" + e + "'" + (e === b ? " selected\x3d'selected'" : "") + "\x3e" + k[e] + "\x3c/option\x3e");
      }
      t += "\x3c/select\x3e";
    }
    if (p || (q += t + (!g && m && n ? "" : "\x26#xa0;")), !a.yearshtml) {
      if (a.yearshtml = "", g || !n) {
        q += "\x3cspan class\x3d'ui-datepicker-year'\x3e" + c + "\x3c/span\x3e";
      } else {
        k = this._get(a, "yearRange").split(":");
        var u = (new Date).getFullYear();
        h = function(a) {
          a = a.match(/c[+\-].*/) ? c + parseInt(a.substring(1), 10) : a.match(/[+\-].*/) ? u + parseInt(a, 10) : parseInt(a, 10);
          return isNaN(a) ? u : a;
        };
        b = h(k[0]);
        k = Math.max(b, h(k[1] || ""));
        b = d ? Math.max(b, d.getFullYear()) : b;
        k = f ? Math.min(k, f.getFullYear()) : k;
        for (a.yearshtml += "\x3cselect class\x3d'ui-datepicker-year' data-handler\x3d'selectYear' data-event\x3d'change'\x3e"; k >= b; b++) {
          a.yearshtml += "\x3coption value\x3d'" + b + "'" + (b === c ? " selected\x3d'selected'" : "") + "\x3e" + b + "\x3c/option\x3e";
        }
        a.yearshtml += "\x3c/select\x3e";
        q += a.yearshtml;
        a.yearshtml = null;
      }
    }
    return q += this._get(a, "yearSuffix"), p && (q += (!g && m && n ? "" : "\x26#xa0;") + t), q += "\x3c/div\x3e";
  }, _adjustInstDate:function(a, b, c) {
    var d = a.drawYear + ("Y" === c ? b : 0), f = a.drawMonth + ("M" === c ? b : 0);
    b = Math.min(a.selectedDay, this._getDaysInMonth(d, f)) + ("D" === c ? b : 0);
    d = this._restrictMinMax(a, this._daylightSavingAdjust(new Date(d, f, b)));
    a.selectedDay = d.getDate();
    a.drawMonth = a.selectedMonth = d.getMonth();
    a.drawYear = a.selectedYear = d.getFullYear();
    "M" !== c && "Y" !== c || this._notifyChange(a);
  }, _restrictMinMax:function(a, b) {
    var c = this._getMinMaxDate(a, "min");
    a = this._getMinMaxDate(a, "max");
    b = c && c > b ? c : b;
    return a && b > a ? a : b;
  }, _notifyChange:function(a) {
    var b = this._get(a, "onChangeMonthYear");
    b && b.apply(a.input ? a.input[0] : null, [a.selectedYear, a.selectedMonth + 1, a]);
  }, _getNumberOfMonths:function(a) {
    a = this._get(a, "numberOfMonths");
    return null == a ? [1, 1] : "number" == typeof a ? [1, a] : a;
  }, _getMinMaxDate:function(a, b) {
    return this._determineDate(a, this._get(a, b + "Date"), null);
  }, _getDaysInMonth:function(a, b) {
    return 32 - this._daylightSavingAdjust(new Date(a, b, 32)).getDate();
  }, _getFirstDayOfMonth:function(a, b) {
    return (new Date(a, b, 1)).getDay();
  }, _canAdjustMonth:function(a, b, c, d) {
    var e = this._getNumberOfMonths(a);
    c = this._daylightSavingAdjust(new Date(c, d + (0 > b ? b : e[0] * e[1]), 1));
    return 0 > b && c.setDate(this._getDaysInMonth(c.getFullYear(), c.getMonth())), this._isInRange(a, c);
  }, _isInRange:function(a, b) {
    var c, d, f = this._getMinMaxDate(a, "min"), g = this._getMinMaxDate(a, "max"), h = null, k = null;
    a = this._get(a, "yearRange");
    return a && (c = a.split(":"), d = (new Date).getFullYear(), h = parseInt(c[0], 10), k = parseInt(c[1], 10), c[0].match(/[+\-].*/) && (h += d), c[1].match(/[+\-].*/) && (k += d)), (!f || b.getTime() >= f.getTime()) && (!g || b.getTime() <= g.getTime()) && (!h || b.getFullYear() >= h) && (!k || k >= b.getFullYear());
  }, _getFormatConfig:function(a) {
    var b = this._get(a, "shortYearCutoff");
    return b = "string" != typeof b ? b : (new Date).getFullYear() % 100 + parseInt(b, 10), {shortYearCutoff:b, dayNamesShort:this._get(a, "dayNamesShort"), dayNames:this._get(a, "dayNames"), monthNamesShort:this._get(a, "monthNamesShort"), monthNames:this._get(a, "monthNames")};
  }, _formatDate:function(a, b, c, d) {
    b || (a.currentDay = a.selectedDay, a.currentMonth = a.selectedMonth, a.currentYear = a.selectedYear);
    b = b ? "object" == typeof b ? b : this._daylightSavingAdjust(new Date(d, c, b)) : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay));
    return this.formatDate(this._get(a, "dateFormat"), b, this._getFormatConfig(a));
  }});
  d.fn.datepicker = function(a) {
    if (!this.length) {
      return this;
    }
    d.datepicker.initialized || (d(document).mousedown(d.datepicker._checkExternalClick), d.datepicker.initialized = !0);
    0 === d("#" + d.datepicker._mainDivId).length && d("body").append(d.datepicker.dpDiv);
    var b = Array.prototype.slice.call(arguments, 1);
    return "string" != typeof a || "isDisabled" !== a && "getDate" !== a && "widget" !== a ? "option" === a && 2 === arguments.length && "string" == typeof arguments[1] ? d.datepicker["_" + a + "Datepicker"].apply(d.datepicker, [this[0]].concat(b)) : this.each(function() {
      "string" == typeof a ? d.datepicker["_" + a + "Datepicker"].apply(d.datepicker, [this].concat(b)) : d.datepicker._attachDatepicker(this, a);
    }) : d.datepicker["_" + a + "Datepicker"].apply(d.datepicker, [this[0]].concat(b));
  };
  d.datepicker = new Q;
  d.datepicker.initialized = !1;
  d.datepicker.uuid = (new Date).getTime();
  d.datepicker.version = "1.11.4";
  d.datepicker;
  d.widget("ui.dialog", {version:"1.11.4", options:{appendTo:"body", autoOpen:!0, buttons:[], closeOnEscape:!0, closeText:"Close", dialogClass:"", draggable:!0, hide:null, height:"auto", maxHeight:null, maxWidth:null, minHeight:150, minWidth:150, modal:!1, position:{my:"center", at:"center", of:window, collision:"fit", using:function(a) {
    var b = d(this).css(a).offset().top;
    0 > b && d(this).css("top", a.top - b);
  }}, resizable:!0, show:null, title:null, width:300, beforeClose:null, close:null, drag:null, dragStart:null, dragStop:null, focus:null, open:null, resize:null, resizeStart:null, resizeStop:null}, sizeRelatedOptions:{buttons:!0, height:!0, maxHeight:!0, maxWidth:!0, minHeight:!0, minWidth:!0, width:!0}, resizableRelatedOptions:{maxHeight:!0, maxWidth:!0, minHeight:!0, minWidth:!0}, _create:function() {
    this.originalCss = {display:this.element[0].style.display, width:this.element[0].style.width, minHeight:this.element[0].style.minHeight, maxHeight:this.element[0].style.maxHeight, height:this.element[0].style.height};
    this.originalPosition = {parent:this.element.parent(), index:this.element.parent().children().index(this.element)};
    this.originalTitle = this.element.attr("title");
    this.options.title = this.options.title || this.originalTitle;
    this._createWrapper();
    this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(this.uiDialog);
    this._createTitlebar();
    this._createButtonPane();
    this.options.draggable && d.fn.draggable && this._makeDraggable();
    this.options.resizable && d.fn.resizable && this._makeResizable();
    this._isOpen = !1;
    this._trackFocus();
  }, _init:function() {
    this.options.autoOpen && this.open();
  }, _appendTo:function() {
    var a = this.options.appendTo;
    return a && (a.jquery || a.nodeType) ? d(a) : this.document.find(a || "body").eq(0);
  }, _destroy:function() {
    var a = this.originalPosition;
    this._untrackInstance();
    this._destroyOverlay();
    this.element.removeUniqueId().removeClass("ui-dialog-content ui-widget-content").css(this.originalCss).detach();
    this.uiDialog.stop(!0, !0).remove();
    this.originalTitle && this.element.attr("title", this.originalTitle);
    var b = a.parent.children().eq(a.index);
    b.length && b[0] !== this.element[0] ? b.before(this.element) : a.parent.append(this.element);
  }, widget:function() {
    return this.uiDialog;
  }, disable:d.noop, enable:d.noop, close:function(a) {
    var b, c = this;
    if (this._isOpen && !1 !== this._trigger("beforeClose", a)) {
      if (this._isOpen = !1, this._focusedElement = null, this._destroyOverlay(), this._untrackInstance(), !this.opener.filter(":focusable").focus().length) {
        try {
          (b = this.document[0].activeElement) && "body" !== b.nodeName.toLowerCase() && d(b).blur();
        } catch (e) {
        }
      }
      this._hide(this.uiDialog, this.options.hide, function() {
        c._trigger("close", a);
      });
    }
  }, isOpen:function() {
    return this._isOpen;
  }, moveToTop:function() {
    this._moveToTop();
  }, _moveToTop:function(a, b) {
    var c = !1, e = this.uiDialog.siblings(".ui-front:visible").map(function() {
      return +d(this).css("z-index");
    }).get();
    e = Math.max.apply(null, e);
    return e >= +this.uiDialog.css("z-index") && (this.uiDialog.css("z-index", e + 1), c = !0), c && !b && this._trigger("focus", a), c;
  }, open:function() {
    var a = this;
    return this._isOpen ? (this._moveToTop() && this._focusTabbable(), void 0) : (this._isOpen = !0, this.opener = d(this.document[0].activeElement), this._size(), this._position(), this._createOverlay(), this._moveToTop(null, !0), this.overlay && this.overlay.css("z-index", this.uiDialog.css("z-index") - 1), this._show(this.uiDialog, this.options.show, function() {
      a._focusTabbable();
      a._trigger("focus");
    }), this._makeFocusTarget(), this._trigger("open"), void 0);
  }, _focusTabbable:function() {
    var a = this._focusedElement;
    a || (a = this.element.find("[autofocus]"));
    a.length || (a = this.element.find(":tabbable"));
    a.length || (a = this.uiDialogButtonPane.find(":tabbable"));
    a.length || (a = this.uiDialogTitlebarClose.filter(":tabbable"));
    a.length || (a = this.uiDialog);
    a.eq(0).focus();
  }, _keepFocus:function(a) {
    function b() {
      var a = this.document[0].activeElement;
      this.uiDialog[0] === a || d.contains(this.uiDialog[0], a) || this._focusTabbable();
    }
    a.preventDefault();
    b.call(this);
    this._delay(b);
  }, _createWrapper:function() {
    this.uiDialog = d("\x3cdiv\x3e").addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front " + this.options.dialogClass).hide().attr({tabIndex:-1, role:"dialog"}).appendTo(this._appendTo());
    this._on(this.uiDialog, {keydown:function(a) {
      if (this.options.closeOnEscape && !a.isDefaultPrevented() && a.keyCode && a.keyCode === d.ui.keyCode.ESCAPE) {
        return a.preventDefault(), this.close(a), void 0;
      }
      if (a.keyCode === d.ui.keyCode.TAB && !a.isDefaultPrevented()) {
        var b = this.uiDialog.find(":tabbable"), c = b.filter(":first"), e = b.filter(":last");
        a.target !== e[0] && a.target !== this.uiDialog[0] || a.shiftKey ? a.target !== c[0] && a.target !== this.uiDialog[0] || !a.shiftKey || (this._delay(function() {
          e.focus();
        }), a.preventDefault()) : (this._delay(function() {
          c.focus();
        }), a.preventDefault());
      }
    }, mousedown:function(a) {
      this._moveToTop(a) && this._focusTabbable();
    }});
    this.element.find("[aria-describedby]").length || this.uiDialog.attr({"aria-describedby":this.element.uniqueId().attr("id")});
  }, _createTitlebar:function() {
    this.uiDialogTitlebar = d("\x3cdiv\x3e").addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(this.uiDialog);
    this._on(this.uiDialogTitlebar, {mousedown:function(a) {
      d(a.target).closest(".ui-dialog-titlebar-close") || this.uiDialog.focus();
    }});
    this.uiDialogTitlebarClose = d("\x3cbutton type\x3d'button'\x3e\x3c/button\x3e").button({label:this.options.closeText, icons:{primary:"ui-icon-closethick"}, text:!1}).addClass("ui-dialog-titlebar-close").appendTo(this.uiDialogTitlebar);
    this._on(this.uiDialogTitlebarClose, {click:function(a) {
      a.preventDefault();
      this.close(a);
    }});
    var a = d("\x3cspan\x3e").uniqueId().addClass("ui-dialog-title").prependTo(this.uiDialogTitlebar);
    this._title(a);
    this.uiDialog.attr({"aria-labelledby":a.attr("id")});
  }, _title:function(a) {
    this.options.title || a.html("\x26#160;");
    a.text(this.options.title);
  }, _createButtonPane:function() {
    this.uiDialogButtonPane = d("\x3cdiv\x3e").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix");
    this.uiButtonSet = d("\x3cdiv\x3e").addClass("ui-dialog-buttonset").appendTo(this.uiDialogButtonPane);
    this._createButtons();
  }, _createButtons:function() {
    var a = this, b = this.options.buttons;
    return this.uiDialogButtonPane.remove(), this.uiButtonSet.empty(), d.isEmptyObject(b) || d.isArray(b) && !b.length ? (this.uiDialog.removeClass("ui-dialog-buttons"), void 0) : (d.each(b, function(b, e) {
      e = d.isFunction(e) ? {click:e, text:b} : e;
      e = d.extend({type:"button"}, e);
      var c = e.click;
      e.click = function() {
        c.apply(a.element[0], arguments);
      };
      b = {icons:e.icons, text:e.showText};
      delete e.icons;
      delete e.showText;
      d("\x3cbutton\x3e\x3c/button\x3e", e).button(b).appendTo(a.uiButtonSet);
    }), this.uiDialog.addClass("ui-dialog-buttons"), this.uiDialogButtonPane.appendTo(this.uiDialog), void 0);
  }, _makeDraggable:function() {
    function a(a) {
      return {position:a.position, offset:a.offset};
    }
    var b = this, c = this.options;
    this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close", handle:".ui-dialog-titlebar", containment:"document", start:function(c, f) {
      d(this).addClass("ui-dialog-dragging");
      b._blockFrames();
      b._trigger("dragStart", c, a(f));
    }, drag:function(c, d) {
      b._trigger("drag", c, a(d));
    }, stop:function(e, f) {
      var g = f.offset.left - b.document.scrollLeft(), h = f.offset.top - b.document.scrollTop();
      c.position = {my:"left top", at:"left" + (0 <= g ? "+" : "") + g + " top" + (0 <= h ? "+" : "") + h, of:b.window};
      d(this).removeClass("ui-dialog-dragging");
      b._unblockFrames();
      b._trigger("dragStop", e, a(f));
    }});
  }, _makeResizable:function() {
    function a(a) {
      return {originalPosition:a.originalPosition, originalSize:a.originalSize, position:a.position, size:a.size};
    }
    var b = this, c = this.options, e = c.resizable, f = this.uiDialog.css("position");
    e = "string" == typeof e ? e : "n,e,s,w,se,sw,ne,nw";
    this.uiDialog.resizable({cancel:".ui-dialog-content", containment:"document", alsoResize:this.element, maxWidth:c.maxWidth, maxHeight:c.maxHeight, minWidth:c.minWidth, minHeight:this._minHeight(), handles:e, start:function(c, e) {
      d(this).addClass("ui-dialog-resizing");
      b._blockFrames();
      b._trigger("resizeStart", c, a(e));
    }, resize:function(c, d) {
      b._trigger("resize", c, a(d));
    }, stop:function(e, f) {
      var g = b.uiDialog.offset(), h = g.left - b.document.scrollLeft();
      g = g.top - b.document.scrollTop();
      c.height = b.uiDialog.height();
      c.width = b.uiDialog.width();
      c.position = {my:"left top", at:"left" + (0 <= h ? "+" : "") + h + " top" + (0 <= g ? "+" : "") + g, of:b.window};
      d(this).removeClass("ui-dialog-resizing");
      b._unblockFrames();
      b._trigger("resizeStop", e, a(f));
    }}).css("position", f);
  }, _trackFocus:function() {
    this._on(this.widget(), {focusin:function(a) {
      this._makeFocusTarget();
      this._focusedElement = d(a.target);
    }});
  }, _makeFocusTarget:function() {
    this._untrackInstance();
    this._trackingInstances().unshift(this);
  }, _untrackInstance:function() {
    var a = this._trackingInstances(), b = d.inArray(this, a);
    -1 !== b && a.splice(b, 1);
  }, _trackingInstances:function() {
    var a = this.document.data("ui-dialog-instances");
    return a || (a = [], this.document.data("ui-dialog-instances", a)), a;
  }, _minHeight:function() {
    var a = this.options;
    return "auto" === a.height ? a.minHeight : Math.min(a.minHeight, a.height);
  }, _position:function() {
    var a = this.uiDialog.is(":visible");
    a || this.uiDialog.show();
    this.uiDialog.position(this.options.position);
    a || this.uiDialog.hide();
  }, _setOptions:function(a) {
    var b = this, c = !1, e = {};
    d.each(a, function(a, d) {
      b._setOption(a, d);
      a in b.sizeRelatedOptions && (c = !0);
      a in b.resizableRelatedOptions && (e[a] = d);
    });
    c && (this._size(), this._position());
    this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", e);
  }, _setOption:function(a, b) {
    var c, d, f = this.uiDialog;
    "dialogClass" === a && f.removeClass(this.options.dialogClass).addClass(b);
    "disabled" !== a && (this._super(a, b), "appendTo" === a && this.uiDialog.appendTo(this._appendTo()), "buttons" === a && this._createButtons(), "closeText" === a && this.uiDialogTitlebarClose.button({label:"" + b}), "draggable" === a && (c = f.is(":data(ui-draggable)"), c && !b && f.draggable("destroy"), !c && b && this._makeDraggable()), "position" === a && this._position(), "resizable" === a && (d = f.is(":data(ui-resizable)"), d && !b && f.resizable("destroy"), d && "string" == typeof b && 
    f.resizable("option", "handles", b), d || !1 === b || this._makeResizable()), "title" === a && this._title(this.uiDialogTitlebar.find(".ui-dialog-title")));
  }, _size:function() {
    var a = this.options;
    this.element.show().css({width:"auto", minHeight:0, maxHeight:"none", height:0});
    a.minWidth > a.width && (a.width = a.minWidth);
    var b = this.uiDialog.css({height:"auto", width:a.width}).outerHeight();
    var c = Math.max(0, a.minHeight - b);
    var d = "number" == typeof a.maxHeight ? Math.max(0, a.maxHeight - b) : "none";
    "auto" === a.height ? this.element.css({minHeight:c, maxHeight:d, height:"auto"}) : this.element.height(Math.max(0, a.height - b));
    this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight());
  }, _blockFrames:function() {
    this.iframeBlocks = this.document.find("iframe").map(function() {
      var a = d(this);
      return d("\x3cdiv\x3e").css({position:"absolute", width:a.outerWidth(), height:a.outerHeight()}).appendTo(a.parent()).offset(a.offset())[0];
    });
  }, _unblockFrames:function() {
    this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks);
  }, _allowInteraction:function(a) {
    return d(a.target).closest(".ui-dialog").length ? !0 : !!d(a.target).closest(".ui-datepicker").length;
  }, _createOverlay:function() {
    if (this.options.modal) {
      var a = !0;
      this._delay(function() {
        a = !1;
      });
      this.document.data("ui-dialog-overlays") || this._on(this.document, {focusin:function(b) {
        a || this._allowInteraction(b) || (b.preventDefault(), this._trackingInstances()[0]._focusTabbable());
      }});
      this.overlay = d("\x3cdiv\x3e").addClass("ui-widget-overlay ui-front").appendTo(this._appendTo());
      this._on(this.overlay, {mousedown:"_keepFocus"});
      this.document.data("ui-dialog-overlays", (this.document.data("ui-dialog-overlays") || 0) + 1);
    }
  }, _destroyOverlay:function() {
    if (this.options.modal && this.overlay) {
      var a = this.document.data("ui-dialog-overlays") - 1;
      a ? this.document.data("ui-dialog-overlays", a) : this.document.unbind("focusin").removeData("ui-dialog-overlays");
      this.overlay.remove();
      this.overlay = null;
    }
  }});
  d.widget("ui.progressbar", {version:"1.11.4", options:{max:100, value:0, change:null, complete:null}, min:0, _create:function() {
    this.oldValue = this.options.value = this._constrainedValue();
    this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar", "aria-valuemin":this.min});
    this.valueDiv = d("\x3cdiv class\x3d'ui-progressbar-value ui-widget-header ui-corner-left'\x3e\x3c/div\x3e").appendTo(this.element);
    this._refreshValue();
  }, _destroy:function() {
    this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
    this.valueDiv.remove();
  }, value:function(a) {
    return void 0 === a ? this.options.value : (this.options.value = this._constrainedValue(a), this._refreshValue(), void 0);
  }, _constrainedValue:function(a) {
    return void 0 === a && (a = this.options.value), this.indeterminate = !1 === a, "number" != typeof a && (a = 0), this.indeterminate ? !1 : Math.min(this.options.max, Math.max(this.min, a));
  }, _setOptions:function(a) {
    var b = a.value;
    delete a.value;
    this._super(a);
    this.options.value = this._constrainedValue(b);
    this._refreshValue();
  }, _setOption:function(a, b) {
    "max" === a && (b = Math.max(this.min, b));
    "disabled" === a && this.element.toggleClass("ui-state-disabled", !!b).attr("aria-disabled", b);
    this._super(a, b);
  }, _percentage:function() {
    return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min);
  }, _refreshValue:function() {
    var a = this.options.value, b = this._percentage();
    this.valueDiv.toggle(this.indeterminate || a > this.min).toggleClass("ui-corner-right", a === this.options.max).width(b.toFixed(0) + "%");
    this.element.toggleClass("ui-progressbar-indeterminate", this.indeterminate);
    this.indeterminate ? (this.element.removeAttr("aria-valuenow"), this.overlayDiv || (this.overlayDiv = d("\x3cdiv class\x3d'ui-progressbar-overlay'\x3e\x3c/div\x3e").appendTo(this.valueDiv))) : (this.element.attr({"aria-valuemax":this.options.max, "aria-valuenow":a}), this.overlayDiv && (this.overlayDiv.remove(), this.overlayDiv = null));
    this.oldValue !== a && (this.oldValue = a, this._trigger("change"));
    a === this.options.max && this._trigger("complete");
  }});
  d.widget("ui.selectmenu", {version:"1.11.4", defaultElement:"\x3cselect\x3e", options:{appendTo:null, disabled:null, icons:{button:"ui-icon-triangle-1-s"}, position:{my:"left top", at:"left bottom", collision:"none"}, width:null, change:null, close:null, focus:null, open:null, select:null}, _create:function() {
    var a = this.element.uniqueId().attr("id");
    this.ids = {element:a, button:a + "-button", menu:a + "-menu"};
    this._drawButton();
    this._drawMenu();
    this.options.disabled && this.disable();
  }, _drawButton:function() {
    var a = this;
    this.label = d("label[for\x3d'" + this.ids.element + "']").attr("for", this.ids.button);
    this._on(this.label, {click:function(a) {
      this.button.focus();
      a.preventDefault();
    }});
    this.element.hide();
    this.button = d("\x3cspan\x3e", {"class":"ui-selectmenu-button ui-widget ui-state-default ui-corner-all", tabindex:this.options.disabled ? -1 : 0, id:this.ids.button, role:"combobox", "aria-expanded":"false", "aria-autocomplete":"list", "aria-owns":this.ids.menu, "aria-haspopup":"true"}).insertAfter(this.element);
    d("\x3cspan\x3e", {"class":"ui-icon " + this.options.icons.button}).prependTo(this.button);
    this.buttonText = d("\x3cspan\x3e", {"class":"ui-selectmenu-text"}).appendTo(this.button);
    this._setText(this.buttonText, this.element.find("option:selected").text());
    this._resizeButton();
    this._on(this.button, this._buttonEvents);
    this.button.one("focusin", function() {
      a.menuItems || a._refreshMenu();
    });
    this._hoverable(this.button);
    this._focusable(this.button);
  }, _drawMenu:function() {
    var a = this;
    this.menu = d("\x3cul\x3e", {"aria-hidden":"true", "aria-labelledby":this.ids.button, id:this.ids.menu});
    this.menuWrap = d("\x3cdiv\x3e", {"class":"ui-selectmenu-menu ui-front"}).append(this.menu).appendTo(this._appendTo());
    this.menuInstance = this.menu.menu({role:"listbox", select:function(b, c) {
      b.preventDefault();
      a._setSelection();
      a._select(c.item.data("ui-selectmenu-item"), b);
    }, focus:function(b, c) {
      c = c.item.data("ui-selectmenu-item");
      null != a.focusIndex && c.index !== a.focusIndex && (a._trigger("focus", b, {item:c}), a.isOpen || a._select(c, b));
      a.focusIndex = c.index;
      a.button.attr("aria-activedescendant", a.menuItems.eq(c.index).attr("id"));
    }}).menu("instance");
    this.menu.addClass("ui-corner-bottom").removeClass("ui-corner-all");
    this.menuInstance._off(this.menu, "mouseleave");
    this.menuInstance._closeOnDocumentClick = function() {
      return !1;
    };
    this.menuInstance._isDivider = function() {
      return !1;
    };
  }, refresh:function() {
    this._refreshMenu();
    this._setText(this.buttonText, this._getSelectedItem().text());
    this.options.width || this._resizeButton();
  }, _refreshMenu:function() {
    this.menu.empty();
    var a, b = this.element.find("option");
    b.length && (this._parseOptions(b), this._renderMenu(this.menu, this.items), this.menuInstance.refresh(), this.menuItems = this.menu.find("li").not(".ui-selectmenu-optgroup"), a = this._getSelectedItem(), this.menuInstance.focus(null, a), this._setAria(a.data("ui-selectmenu-item")), this._setOption("disabled", this.element.prop("disabled")));
  }, open:function(a) {
    this.options.disabled || (this.menuItems ? (this.menu.find(".ui-state-focus").removeClass("ui-state-focus"), this.menuInstance.focus(null, this._getSelectedItem())) : this._refreshMenu(), this.isOpen = !0, this._toggleAttr(), this._resizeMenu(), this._position(), this._on(this.document, this._documentClick), this._trigger("open", a));
  }, _position:function() {
    this.menuWrap.position(d.extend({of:this.button}, this.options.position));
  }, close:function(a) {
    this.isOpen && (this.isOpen = !1, this._toggleAttr(), this.range = null, this._off(this.document), this._trigger("close", a));
  }, widget:function() {
    return this.button;
  }, menuWidget:function() {
    return this.menu;
  }, _renderMenu:function(a, b) {
    var c = this, e = "";
    d.each(b, function(b, g) {
      g.optgroup !== e && (d("\x3cli\x3e", {"class":"ui-selectmenu-optgroup ui-menu-divider" + (g.element.parent("optgroup").prop("disabled") ? " ui-state-disabled" : ""), text:g.optgroup}).appendTo(a), e = g.optgroup);
      c._renderItemData(a, g);
    });
  }, _renderItemData:function(a, b) {
    return this._renderItem(a, b).data("ui-selectmenu-item", b);
  }, _renderItem:function(a, b) {
    var c = d("\x3cli\x3e");
    return b.disabled && c.addClass("ui-state-disabled"), this._setText(c, b.label), c.appendTo(a);
  }, _setText:function(a, b) {
    b ? a.text(b) : a.html("\x26#160;");
  }, _move:function(a, b) {
    var c, d = ".ui-menu-item";
    this.isOpen ? c = this.menuItems.eq(this.focusIndex) : (c = this.menuItems.eq(this.element[0].selectedIndex), d += ":not(.ui-state-disabled)");
    a = "first" === a || "last" === a ? c["first" === a ? "prevAll" : "nextAll"](d).eq(-1) : c[a + "All"](d).eq(0);
    a.length && this.menuInstance.focus(b, a);
  }, _getSelectedItem:function() {
    return this.menuItems.eq(this.element[0].selectedIndex);
  }, _toggle:function(a) {
    this[this.isOpen ? "close" : "open"](a);
  }, _setSelection:function() {
    var a;
    this.range && (window.getSelection ? (a = window.getSelection(), a.removeAllRanges(), a.addRange(this.range)) : this.range.select(), this.button.focus());
  }, _documentClick:{mousedown:function(a) {
    this.isOpen && (d(a.target).closest(".ui-selectmenu-menu, #" + this.ids.button).length || this.close(a));
  }}, _buttonEvents:{mousedown:function() {
    var a;
    window.getSelection ? (a = window.getSelection(), a.rangeCount && (this.range = a.getRangeAt(0))) : this.range = document.selection.createRange();
  }, click:function(a) {
    this._setSelection();
    this._toggle(a);
  }, keydown:function(a) {
    var b = !0;
    switch(a.keyCode) {
      case d.ui.keyCode.TAB:
      case d.ui.keyCode.ESCAPE:
        this.close(a);
        b = !1;
        break;
      case d.ui.keyCode.ENTER:
        this.isOpen && this._selectFocusedItem(a);
        break;
      case d.ui.keyCode.UP:
        a.altKey ? this._toggle(a) : this._move("prev", a);
        break;
      case d.ui.keyCode.DOWN:
        a.altKey ? this._toggle(a) : this._move("next", a);
        break;
      case d.ui.keyCode.SPACE:
        this.isOpen ? this._selectFocusedItem(a) : this._toggle(a);
        break;
      case d.ui.keyCode.LEFT:
        this._move("prev", a);
        break;
      case d.ui.keyCode.RIGHT:
        this._move("next", a);
        break;
      case d.ui.keyCode.HOME:
      case d.ui.keyCode.PAGE_UP:
        this._move("first", a);
        break;
      case d.ui.keyCode.END:
      case d.ui.keyCode.PAGE_DOWN:
        this._move("last", a);
        break;
      default:
        this.menu.trigger(a), b = !1;
    }
    b && a.preventDefault();
  }}, _selectFocusedItem:function(a) {
    var b = this.menuItems.eq(this.focusIndex);
    b.hasClass("ui-state-disabled") || this._select(b.data("ui-selectmenu-item"), a);
  }, _select:function(a, b) {
    var c = this.element[0].selectedIndex;
    this.element[0].selectedIndex = a.index;
    this._setText(this.buttonText, a.label);
    this._setAria(a);
    this._trigger("select", b, {item:a});
    a.index !== c && this._trigger("change", b, {item:a});
    this.close(b);
  }, _setAria:function(a) {
    a = this.menuItems.eq(a.index).attr("id");
    this.button.attr({"aria-labelledby":a, "aria-activedescendant":a});
    this.menu.attr("aria-activedescendant", a);
  }, _setOption:function(a, b) {
    "icons" === a && this.button.find("span.ui-icon").removeClass(this.options.icons.button).addClass(b.button);
    this._super(a, b);
    "appendTo" === a && this.menuWrap.appendTo(this._appendTo());
    "disabled" === a && (this.menuInstance.option("disabled", b), this.button.toggleClass("ui-state-disabled", b).attr("aria-disabled", b), this.element.prop("disabled", b), b ? (this.button.attr("tabindex", -1), this.close()) : this.button.attr("tabindex", 0));
    "width" === a && this._resizeButton();
  }, _appendTo:function() {
    var a = this.options.appendTo;
    return a && (a = a.jquery || a.nodeType ? d(a) : this.document.find(a).eq(0)), a && a[0] || (a = this.element.closest(".ui-front")), a.length || (a = this.document[0].body), a;
  }, _toggleAttr:function() {
    this.button.toggleClass("ui-corner-top", this.isOpen).toggleClass("ui-corner-all", !this.isOpen).attr("aria-expanded", this.isOpen);
    this.menuWrap.toggleClass("ui-selectmenu-open", this.isOpen);
    this.menu.attr("aria-hidden", !this.isOpen);
  }, _resizeButton:function() {
    var a = this.options.width;
    a || (a = this.element.show().outerWidth(), this.element.hide());
    this.button.outerWidth(a);
  }, _resizeMenu:function() {
    this.menu.outerWidth(Math.max(this.button.outerWidth(), this.menu.width("").outerWidth() + 1));
  }, _getCreateOptions:function() {
    return {disabled:this.element.prop("disabled")};
  }, _parseOptions:function(a) {
    var b = [];
    a.each(function(a, e) {
      e = d(e);
      var c = e.parent("optgroup");
      b.push({element:e, index:a, value:e.val(), label:e.text(), optgroup:c.attr("label") || "", disabled:c.prop("disabled") || e.prop("disabled")});
    });
    this.items = b;
  }, _destroy:function() {
    this.menuWrap.remove();
    this.button.remove();
    this.element.show();
    this.element.removeUniqueId();
    this.label.attr("for", this.ids.element);
  }});
  d.widget("ui.slider", d.ui.mouse, {version:"1.11.4", widgetEventPrefix:"slide", options:{animate:!1, distance:0, max:100, min:0, orientation:"horizontal", range:!1, step:1, value:0, values:null, change:null, slide:null, start:null, stop:null}, numPages:5, _create:function() {
    this._mouseSliding = this._keySliding = !1;
    this._animateOff = !0;
    this._handleIndex = null;
    this._detectOrientation();
    this._mouseInit();
    this._calculateNewMax();
    this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all");
    this._refresh();
    this._setOption("disabled", this.options.disabled);
    this._animateOff = !1;
  }, _refresh:function() {
    this._createRange();
    this._createHandles();
    this._setupEvents();
    this._refreshValue();
  }, _createHandles:function() {
    var a = this.options;
    var b = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"), c = [];
    var e = a.values && a.values.length || 1;
    b.length > e && (b.slice(e).remove(), b = b.slice(0, e));
    for (a = b.length; e > a; a++) {
      c.push("\x3cspan class\x3d'ui-slider-handle ui-state-default ui-corner-all' tabindex\x3d'0'\x3e\x3c/span\x3e");
    }
    this.handles = b.add(d(c.join("")).appendTo(this.element));
    this.handle = this.handles.eq(0);
    this.handles.each(function(a) {
      d(this).data("ui-slider-handle-index", a);
    });
  }, _createRange:function() {
    var a = this.options, b = "";
    a.range ? (!0 === a.range && (a.values ? a.values.length && 2 !== a.values.length ? a.values = [a.values[0], a.values[0]] : d.isArray(a.values) && (a.values = a.values.slice(0)) : a.values = [this._valueMin(), this._valueMin()]), this.range && this.range.length ? this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({left:"", bottom:""}) : (this.range = d("\x3cdiv\x3e\x3c/div\x3e").appendTo(this.element), b = "ui-slider-range ui-widget-header ui-corner-all"), this.range.addClass(b + 
    ("min" === a.range || "max" === a.range ? " ui-slider-range-" + a.range : ""))) : (this.range && this.range.remove(), this.range = null);
  }, _setupEvents:function() {
    this._off(this.handles);
    this._on(this.handles, this._handleEvents);
    this._hoverable(this.handles);
    this._focusable(this.handles);
  }, _destroy:function() {
    this.handles.remove();
    this.range && this.range.remove();
    this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all");
    this._mouseDestroy();
  }, _mouseCapture:function(a) {
    var b, c, e, f, g, h, k, l, m = this, n = this.options;
    return n.disabled ? !1 : (this.elementSize = {width:this.element.outerWidth(), height:this.element.outerHeight()}, this.elementOffset = this.element.offset(), b = {x:a.pageX, y:a.pageY}, c = this._normValueFromMouse(b), e = this._valueMax() - this._valueMin() + 1, this.handles.each(function(a) {
      var b = Math.abs(c - m.values(a));
      (e > b || e === b && (a === m._lastChangedValue || m.values(a) === n.min)) && (e = b, f = d(this), g = a);
    }), h = this._start(a, g), !1 === h ? !1 : (this._mouseSliding = !0, this._handleIndex = g, f.addClass("ui-state-active").focus(), k = f.offset(), l = !d(a.target).parents().addBack().is(".ui-slider-handle"), this._clickOffset = l ? {left:0, top:0} : {left:a.pageX - k.left - f.width() / 2, top:a.pageY - k.top - f.height() / 2 - (parseInt(f.css("borderTopWidth"), 10) || 0) - (parseInt(f.css("borderBottomWidth"), 10) || 0) + (parseInt(f.css("marginTop"), 10) || 0)}, this.handles.hasClass("ui-state-hover") || 
    this._slide(a, g, c), this._animateOff = !0, !0));
  }, _mouseStart:function() {
    return !0;
  }, _mouseDrag:function(a) {
    var b = this._normValueFromMouse({x:a.pageX, y:a.pageY});
    return this._slide(a, this._handleIndex, b), !1;
  }, _mouseStop:function(a) {
    return this.handles.removeClass("ui-state-active"), this._mouseSliding = !1, this._stop(a, this._handleIndex), this._change(a, this._handleIndex), this._handleIndex = null, this._clickOffset = null, this._animateOff = !1, !1;
  }, _detectOrientation:function() {
    this.orientation = "vertical" === this.options.orientation ? "vertical" : "horizontal";
  }, _normValueFromMouse:function(a) {
    var b, c, d, f, g;
    return "horizontal" === this.orientation ? (b = this.elementSize.width, c = a.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (b = this.elementSize.height, c = a.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)), d = c / b, 1 < d && (d = 1), 0 > d && (d = 0), "vertical" === this.orientation && (d = 1 - d), f = this._valueMax() - this._valueMin(), g = this._valueMin() + d * f, this._trimAlignValue(g);
  }, _start:function(a, b) {
    var c = {handle:this.handles[b], value:this.value()};
    return this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values()), this._trigger("start", a, c);
  }, _slide:function(a, b, c) {
    var d, f, g;
    this.options.values && this.options.values.length ? (d = this.values(b ? 0 : 1), 2 === this.options.values.length && !0 === this.options.range && (0 === b && c > d || 1 === b && d > c) && (c = d), c !== this.values(b) && (f = this.values(), f[b] = c, g = this._trigger("slide", a, {handle:this.handles[b], value:c, values:f}), this.values(b ? 0 : 1), !1 !== g && this.values(b, c))) : c !== this.value() && (g = this._trigger("slide", a, {handle:this.handles[b], value:c}), !1 !== g && this.value(c));
  }, _stop:function(a, b) {
    var c = {handle:this.handles[b], value:this.value()};
    this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values());
    this._trigger("stop", a, c);
  }, _change:function(a, b) {
    if (!this._keySliding && !this._mouseSliding) {
      var c = {handle:this.handles[b], value:this.value()};
      this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values());
      this._lastChangedValue = b;
      this._trigger("change", a, c);
    }
  }, value:function(a) {
    return arguments.length ? (this.options.value = this._trimAlignValue(a), this._refreshValue(), this._change(null, 0), void 0) : this._value();
  }, values:function(a, b) {
    var c;
    if (1 < arguments.length) {
      return this.options.values[a] = this._trimAlignValue(b), this._refreshValue(), this._change(null, a), void 0;
    }
    if (!arguments.length) {
      return this._values();
    }
    if (!d.isArray(arguments[0])) {
      return this.options.values && this.options.values.length ? this._values(a) : this.value();
    }
    var e = this.options.values;
    var f = arguments[0];
    for (c = 0; e.length > c; c += 1) {
      e[c] = this._trimAlignValue(f[c]), this._change(null, c);
    }
    this._refreshValue();
  }, _setOption:function(a, b) {
    var c = 0;
    switch("range" === a && !0 === this.options.range && ("min" === b ? (this.options.value = this._values(0), this.options.values = null) : "max" === b && (this.options.value = this._values(this.options.values.length - 1), this.options.values = null)), d.isArray(this.options.values) && (c = this.options.values.length), "disabled" === a && this.element.toggleClass("ui-state-disabled", !!b), this._super(a, b), a) {
      case "orientation":
        this._detectOrientation();
        this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation);
        this._refreshValue();
        this.handles.css("horizontal" === b ? "bottom" : "left", "");
        break;
      case "value":
        this._animateOff = !0;
        this._refreshValue();
        this._change(null, 0);
        this._animateOff = !1;
        break;
      case "values":
        this._animateOff = !0;
        this._refreshValue();
        for (a = 0; c > a; a += 1) {
          this._change(null, a);
        }
        this._animateOff = !1;
        break;
      case "step":
      case "min":
      case "max":
        this._animateOff = !0;
        this._calculateNewMax();
        this._refreshValue();
        this._animateOff = !1;
        break;
      case "range":
        this._animateOff = !0, this._refresh(), this._animateOff = !1;
    }
  }, _value:function() {
    return this._trimAlignValue(this.options.value);
  }, _values:function(a) {
    var b, c;
    if (arguments.length) {
      return b = this.options.values[a], this._trimAlignValue(b);
    }
    if (this.options.values && this.options.values.length) {
      b = this.options.values.slice();
      for (c = 0; b.length > c; c += 1) {
        b[c] = this._trimAlignValue(b[c]);
      }
      return b;
    }
    return [];
  }, _trimAlignValue:function(a) {
    if (this._valueMin() >= a) {
      return this._valueMin();
    }
    if (a >= this._valueMax()) {
      return this._valueMax();
    }
    var b = 0 < this.options.step ? this.options.step : 1, c = (a - this._valueMin()) % b;
    a -= c;
    return 2 * Math.abs(c) >= b && (a += 0 < c ? b : -b), parseFloat(a.toFixed(5));
  }, _calculateNewMax:function() {
    var a = this.options.max, b = this._valueMin(), c = this.options.step;
    a = Math.floor(+(a - b).toFixed(this._precision()) / c) * c + b;
    this.max = parseFloat(a.toFixed(this._precision()));
  }, _precision:function() {
    var a = this._precisionOf(this.options.step);
    return null !== this.options.min && (a = Math.max(a, this._precisionOf(this.options.min))), a;
  }, _precisionOf:function(a) {
    a = "" + a;
    var b = a.indexOf(".");
    return -1 === b ? 0 : a.length - b - 1;
  }, _valueMin:function() {
    return this.options.min;
  }, _valueMax:function() {
    return this.max;
  }, _refreshValue:function() {
    var a, b, c, e, f, g = this.options.range, h = this.options, k = this, l = this._animateOff ? !1 : h.animate, m = {};
    this.options.values && this.options.values.length ? this.handles.each(function(c) {
      b = 100 * ((k.values(c) - k._valueMin()) / (k._valueMax() - k._valueMin()));
      m["horizontal" === k.orientation ? "left" : "bottom"] = b + "%";
      d(this).stop(1, 1)[l ? "animate" : "css"](m, h.animate);
      !0 === k.options.range && ("horizontal" === k.orientation ? (0 === c && k.range.stop(1, 1)[l ? "animate" : "css"]({left:b + "%"}, h.animate), 1 === c && k.range[l ? "animate" : "css"]({width:b - a + "%"}, {queue:!1, duration:h.animate})) : (0 === c && k.range.stop(1, 1)[l ? "animate" : "css"]({bottom:b + "%"}, h.animate), 1 === c && k.range[l ? "animate" : "css"]({height:b - a + "%"}, {queue:!1, duration:h.animate})));
      a = b;
    }) : (c = this.value(), e = this._valueMin(), f = this._valueMax(), b = f !== e ? (c - e) / (f - e) * 100 : 0, m["horizontal" === this.orientation ? "left" : "bottom"] = b + "%", this.handle.stop(1, 1)[l ? "animate" : "css"](m, h.animate), "min" === g && "horizontal" === this.orientation && this.range.stop(1, 1)[l ? "animate" : "css"]({width:b + "%"}, h.animate), "max" === g && "horizontal" === this.orientation && this.range[l ? "animate" : "css"]({width:100 - b + "%"}, {queue:!1, duration:h.animate}), 
    "min" === g && "vertical" === this.orientation && this.range.stop(1, 1)[l ? "animate" : "css"]({height:b + "%"}, h.animate), "max" === g && "vertical" === this.orientation && this.range[l ? "animate" : "css"]({height:100 - b + "%"}, {queue:!1, duration:h.animate}));
  }, _handleEvents:{keydown:function(a) {
    var b, c, e, f = d(a.target).data("ui-slider-handle-index");
    switch(a.keyCode) {
      case d.ui.keyCode.HOME:
      case d.ui.keyCode.END:
      case d.ui.keyCode.PAGE_UP:
      case d.ui.keyCode.PAGE_DOWN:
      case d.ui.keyCode.UP:
      case d.ui.keyCode.RIGHT:
      case d.ui.keyCode.DOWN:
      case d.ui.keyCode.LEFT:
        if (a.preventDefault(), !this._keySliding && (this._keySliding = !0, d(a.target).addClass("ui-state-active"), b = this._start(a, f), !1 === b)) {
          return;
        }
    }
    switch(e = this.options.step, b = c = this.options.values && this.options.values.length ? this.values(f) : this.value(), a.keyCode) {
      case d.ui.keyCode.HOME:
        c = this._valueMin();
        break;
      case d.ui.keyCode.END:
        c = this._valueMax();
        break;
      case d.ui.keyCode.PAGE_UP:
        c = this._trimAlignValue(b + (this._valueMax() - this._valueMin()) / this.numPages);
        break;
      case d.ui.keyCode.PAGE_DOWN:
        c = this._trimAlignValue(b - (this._valueMax() - this._valueMin()) / this.numPages);
        break;
      case d.ui.keyCode.UP:
      case d.ui.keyCode.RIGHT:
        if (b === this._valueMax()) {
          return;
        }
        c = this._trimAlignValue(b + e);
        break;
      case d.ui.keyCode.DOWN:
      case d.ui.keyCode.LEFT:
        if (b === this._valueMin()) {
          return;
        }
        c = this._trimAlignValue(b - e);
    }
    this._slide(a, f, c);
  }, keyup:function(a) {
    var b = d(a.target).data("ui-slider-handle-index");
    this._keySliding && (this._keySliding = !1, this._stop(a, b), this._change(a, b), d(a.target).removeClass("ui-state-active"));
  }}});
  d.widget("ui.spinner", {version:"1.11.4", defaultElement:"\x3cinput\x3e", widgetEventPrefix:"spin", options:{culture:null, icons:{down:"ui-icon-triangle-1-s", up:"ui-icon-triangle-1-n"}, incremental:!0, max:null, min:null, numberFormat:null, page:10, step:1, change:null, spin:null, start:null, stop:null}, _create:function() {
    this._setOption("max", this.options.max);
    this._setOption("min", this.options.min);
    this._setOption("step", this.options.step);
    "" !== this.value() && this._value(this.element.val(), !0);
    this._draw();
    this._on(this._events);
    this._refresh();
    this._on(this.window, {beforeunload:function() {
      this.element.removeAttr("autocomplete");
    }});
  }, _getCreateOptions:function() {
    var a = {}, b = this.element;
    return d.each(["min", "max", "step"], function(c, d) {
      c = b.attr(d);
      void 0 !== c && c.length && (a[d] = c);
    }), a;
  }, _events:{keydown:function(a) {
    this._start(a) && this._keydown(a) && a.preventDefault();
  }, keyup:"_stop", focus:function() {
    this.previous = this.element.val();
  }, blur:function(a) {
    return this.cancelBlur ? (delete this.cancelBlur, void 0) : (this._stop(), this._refresh(), this.previous !== this.element.val() && this._trigger("change", a), void 0);
  }, mousewheel:function(a, b) {
    if (b) {
      if (!this.spinning && !this._start(a)) {
        return !1;
      }
      this._spin((0 < b ? 1 : -1) * this.options.step, a);
      clearTimeout(this.mousewheelTimer);
      this.mousewheelTimer = this._delay(function() {
        this.spinning && this._stop(a);
      }, 100);
      a.preventDefault();
    }
  }, "mousedown .ui-spinner-button":function(a) {
    function b() {
      this.element[0] === this.document[0].activeElement || (this.element.focus(), this.previous = c, this._delay(function() {
        this.previous = c;
      }));
    }
    var c = this.element[0] === this.document[0].activeElement ? this.previous : this.element.val();
    a.preventDefault();
    b.call(this);
    this.cancelBlur = !0;
    this._delay(function() {
      delete this.cancelBlur;
      b.call(this);
    });
    !1 !== this._start(a) && this._repeat(null, d(a.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, a);
  }, "mouseup .ui-spinner-button":"_stop", "mouseenter .ui-spinner-button":function(a) {
    return d(a.currentTarget).hasClass("ui-state-active") ? !1 === this._start(a) ? !1 : (this._repeat(null, d(a.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, a), void 0) : void 0;
  }, "mouseleave .ui-spinner-button":"_stop"}, _draw:function() {
    var a = this.uiSpinner = this.element.addClass("ui-spinner-input").attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());
    this.element.attr("role", "spinbutton");
    this.buttons = a.find(".ui-spinner-button").attr("tabIndex", -1).button().removeClass("ui-corner-all");
    this.buttons.height() > Math.ceil(.5 * a.height()) && 0 < a.height() && a.height(a.height());
    this.options.disabled && this.disable();
  }, _keydown:function(a) {
    var b = this.options, c = d.ui.keyCode;
    switch(a.keyCode) {
      case c.UP:
        return this._repeat(null, 1, a), !0;
      case c.DOWN:
        return this._repeat(null, -1, a), !0;
      case c.PAGE_UP:
        return this._repeat(null, b.page, a), !0;
      case c.PAGE_DOWN:
        return this._repeat(null, -b.page, a), !0;
    }
    return !1;
  }, _uiSpinnerHtml:function() {
    return "\x3cspan class\x3d'ui-spinner ui-widget ui-widget-content ui-corner-all'\x3e\x3c/span\x3e";
  }, _buttonHtml:function() {
    return "\x3ca class\x3d'ui-spinner-button ui-spinner-up ui-corner-tr'\x3e\x3cspan class\x3d'ui-icon " + this.options.icons.up + "'\x3e\x26#9650;\x3c/span\x3e\x3c/a\x3e\x3ca class\x3d'ui-spinner-button ui-spinner-down ui-corner-br'\x3e\x3cspan class\x3d'ui-icon " + this.options.icons.down + "'\x3e\x26#9660;\x3c/span\x3e\x3c/a\x3e";
  }, _start:function(a) {
    return this.spinning || !1 !== this._trigger("start", a) ? (this.counter || (this.counter = 1), this.spinning = !0, !0) : !1;
  }, _repeat:function(a, b, c) {
    a = a || 500;
    clearTimeout(this.timer);
    this.timer = this._delay(function() {
      this._repeat(40, b, c);
    }, a);
    this._spin(b * this.options.step, c);
  }, _spin:function(a, b) {
    var c = this.value() || 0;
    this.counter || (this.counter = 1);
    c = this._adjustValue(c + a * this._increment(this.counter));
    this.spinning && !1 === this._trigger("spin", b, {value:c}) || (this._value(c), this.counter++);
  }, _increment:function(a) {
    var b = this.options.incremental;
    return b ? d.isFunction(b) ? b(a) : Math.floor(a * a * a / 5e4 - a * a / 500 + 17 * a / 200 + 1) : 1;
  }, _precision:function() {
    var a = this._precisionOf(this.options.step);
    return null !== this.options.min && (a = Math.max(a, this._precisionOf(this.options.min))), a;
  }, _precisionOf:function(a) {
    a = "" + a;
    var b = a.indexOf(".");
    return -1 === b ? 0 : a.length - b - 1;
  }, _adjustValue:function(a) {
    var b, c, d = this.options;
    return b = null !== d.min ? d.min : 0, c = a - b, c = Math.round(c / d.step) * d.step, a = b + c, a = parseFloat(a.toFixed(this._precision())), null !== d.max && a > d.max ? d.max : null !== d.min && d.min > a ? d.min : a;
  }, _stop:function(a) {
    this.spinning && (clearTimeout(this.timer), clearTimeout(this.mousewheelTimer), this.counter = 0, this.spinning = !1, this._trigger("stop", a));
  }, _setOption:function(a, b) {
    if ("culture" === a || "numberFormat" === a) {
      var c = this._parse(this.element.val());
      return this.options[a] = b, this.element.val(this._format(c)), void 0;
    }
    "max" !== a && "min" !== a && "step" !== a || "string" != typeof b || (b = this._parse(b));
    "icons" === a && (this.buttons.first().find(".ui-icon").removeClass(this.options.icons.up).addClass(b.up), this.buttons.last().find(".ui-icon").removeClass(this.options.icons.down).addClass(b.down));
    this._super(a, b);
    "disabled" === a && (this.widget().toggleClass("ui-state-disabled", !!b), this.element.prop("disabled", !!b), this.buttons.button(b ? "disable" : "enable"));
  }, _setOptions:F(function(a) {
    this._super(a);
  }), _parse:function(a) {
    return "string" == typeof a && "" !== a && (a = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(a, 10, this.options.culture) : +a), "" === a || isNaN(a) ? null : a;
  }, _format:function(a) {
    return "" === a ? "" : window.Globalize && this.options.numberFormat ? Globalize.format(a, this.options.numberFormat, this.options.culture) : a;
  }, _refresh:function() {
    this.element.attr({"aria-valuemin":this.options.min, "aria-valuemax":this.options.max, "aria-valuenow":this._parse(this.element.val())});
  }, isValid:function() {
    var a = this.value();
    return null === a ? !1 : a === this._adjustValue(a);
  }, _value:function(a, b) {
    var c;
    "" !== a && (c = this._parse(a), null !== c && (b || (c = this._adjustValue(c)), a = this._format(c)));
    this.element.val(a);
    this._refresh();
  }, _destroy:function() {
    this.element.removeClass("ui-spinner-input").prop("disabled", !1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
    this.uiSpinner.replaceWith(this.element);
  }, stepUp:F(function(a) {
    this._stepUp(a);
  }), _stepUp:function(a) {
    this._start() && (this._spin((a || 1) * this.options.step), this._stop());
  }, stepDown:F(function(a) {
    this._stepDown(a);
  }), _stepDown:function(a) {
    this._start() && (this._spin((a || 1) * -this.options.step), this._stop());
  }, pageUp:F(function(a) {
    this._stepUp((a || 1) * this.options.page);
  }), pageDown:F(function(a) {
    this._stepDown((a || 1) * this.options.page);
  }), value:function(a) {
    return arguments.length ? (F(this._value).call(this, a), void 0) : this._parse(this.element.val());
  }, widget:function() {
    return this.uiSpinner;
  }});
  d.widget("ui.tabs", {version:"1.11.4", delay:300, options:{active:null, collapsible:!1, event:"click", heightStyle:"content", hide:null, show:null, activate:null, beforeActivate:null, beforeLoad:null, load:null}, _isLocal:function() {
    var a = /#.*$/;
    return function(b) {
      b = b.cloneNode(!1);
      var c = b.href.replace(a, "");
      var d = location.href.replace(a, "");
      try {
        c = decodeURIComponent(c);
      } catch (f) {
      }
      try {
        d = decodeURIComponent(d);
      } catch (f) {
      }
      return 1 < b.hash.length && c === d;
    };
  }(), _create:function() {
    var a = this, b = this.options;
    this.running = !1;
    this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible", b.collapsible);
    this._processTabs();
    b.active = this._initialActive();
    d.isArray(b.disabled) && (b.disabled = d.unique(b.disabled.concat(d.map(this.tabs.filter(".ui-state-disabled"), function(b) {
      return a.tabs.index(b);
    }))).sort());
    this.active = !1 !== this.options.active && this.anchors.length ? this._findActive(b.active) : d();
    this._refresh();
    this.active.length && this.load(b.active);
  }, _initialActive:function() {
    var a = this.options.active, b = this.options.collapsible, c = location.hash.substring(1);
    return null === a && (c && this.tabs.each(function(b, f) {
      return d(f).attr("aria-controls") === c ? (a = b, !1) : void 0;
    }), null === a && (a = this.tabs.index(this.tabs.filter(".ui-tabs-active"))), (null === a || -1 === a) && (a = this.tabs.length ? 0 : !1)), !1 !== a && (a = this.tabs.index(this.tabs.eq(a)), -1 === a && (a = b ? !1 : 0)), !b && !1 === a && this.anchors.length && (a = 0), a;
  }, _getCreateEventData:function() {
    return {tab:this.active, panel:this.active.length ? this._getPanelForTab(this.active) : d()};
  }, _tabKeydown:function(a) {
    var b = d(this.document[0].activeElement).closest("li"), c = this.tabs.index(b), e = !0;
    if (!this._handlePageNav(a)) {
      switch(a.keyCode) {
        case d.ui.keyCode.RIGHT:
        case d.ui.keyCode.DOWN:
          c++;
          break;
        case d.ui.keyCode.UP:
        case d.ui.keyCode.LEFT:
          e = !1;
          c--;
          break;
        case d.ui.keyCode.END:
          c = this.anchors.length - 1;
          break;
        case d.ui.keyCode.HOME:
          c = 0;
          break;
        case d.ui.keyCode.SPACE:
          return a.preventDefault(), clearTimeout(this.activating), this._activate(c), void 0;
        case d.ui.keyCode.ENTER:
          return a.preventDefault(), clearTimeout(this.activating), this._activate(c === this.options.active ? !1 : c), void 0;
        default:
          return;
      }
      a.preventDefault();
      clearTimeout(this.activating);
      c = this._focusNextTab(c, e);
      a.ctrlKey || a.metaKey || (b.attr("aria-selected", "false"), this.tabs.eq(c).attr("aria-selected", "true"), this.activating = this._delay(function() {
        this.option("active", c);
      }, this.delay));
    }
  }, _panelKeydown:function(a) {
    this._handlePageNav(a) || a.ctrlKey && a.keyCode === d.ui.keyCode.UP && (a.preventDefault(), this.active.focus());
  }, _handlePageNav:function(a) {
    return a.altKey && a.keyCode === d.ui.keyCode.PAGE_UP ? (this._activate(this._focusNextTab(this.options.active - 1, !1)), !0) : a.altKey && a.keyCode === d.ui.keyCode.PAGE_DOWN ? (this._activate(this._focusNextTab(this.options.active + 1, !0)), !0) : void 0;
  }, _findNextTab:function(a, b) {
    for (var c = this.tabs.length - 1; -1 !== d.inArray((a > c && (a = 0), 0 > a && (a = c), a), this.options.disabled);) {
      a = b ? a + 1 : a - 1;
    }
    return a;
  }, _focusNextTab:function(a, b) {
    return a = this._findNextTab(a, b), this.tabs.eq(a).focus(), a;
  }, _setOption:function(a, b) {
    return "active" === a ? (this._activate(b), void 0) : "disabled" === a ? (this._setupDisabled(b), void 0) : (this._super(a, b), "collapsible" === a && (this.element.toggleClass("ui-tabs-collapsible", b), b || !1 !== this.options.active || this._activate(0)), "event" === a && this._setupEvents(b), "heightStyle" === a && this._setupHeightStyle(b), void 0);
  }, _sanitizeSelector:function(a) {
    return a ? a.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$\x26") : "";
  }, refresh:function() {
    var a = this.options, b = this.tablist.children(":has(a[href])");
    a.disabled = d.map(b.filter(".ui-state-disabled"), function(a) {
      return b.index(a);
    });
    this._processTabs();
    !1 !== a.active && this.anchors.length ? this.active.length && !d.contains(this.tablist[0], this.active[0]) ? this.tabs.length === a.disabled.length ? (a.active = !1, this.active = d()) : this._activate(this._findNextTab(Math.max(0, a.active - 1), !1)) : a.active = this.tabs.index(this.active) : (a.active = !1, this.active = d());
    this._refresh();
  }, _refresh:function() {
    this._setupDisabled(this.options.disabled);
    this._setupEvents(this.options.event);
    this._setupHeightStyle(this.options.heightStyle);
    this.tabs.not(this.active).attr({"aria-selected":"false", "aria-expanded":"false", tabIndex:-1});
    this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden":"true"});
    this.active.length ? (this.active.addClass("ui-tabs-active ui-state-active").attr({"aria-selected":"true", "aria-expanded":"true", tabIndex:0}), this._getPanelForTab(this.active).show().attr({"aria-hidden":"false"})) : this.tabs.eq(0).attr("tabIndex", 0);
  }, _processTabs:function() {
    var a = this, b = this.tabs, c = this.anchors, e = this.panels;
    this.tablist = this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role", "tablist").delegate("\x3e li", "mousedown" + this.eventNamespace, function(a) {
      d(this).is(".ui-state-disabled") && a.preventDefault();
    }).delegate(".ui-tabs-anchor", "focus" + this.eventNamespace, function() {
      d(this).closest("li").is(".ui-state-disabled") && this.blur();
    });
    this.tabs = this.tablist.find("\x3e li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({role:"tab", tabIndex:-1});
    this.anchors = this.tabs.map(function() {
      return d("a", this)[0];
    }).addClass("ui-tabs-anchor").attr({role:"presentation", tabIndex:-1});
    this.panels = d();
    this.anchors.each(function(b, c) {
      var e, f, g, m = d(c).uniqueId().attr("id"), n = d(c).closest("li"), p = n.attr("aria-controls");
      a._isLocal(c) ? (e = c.hash, g = e.substring(1), f = a.element.find(a._sanitizeSelector(e))) : (g = n.attr("aria-controls") || d({}).uniqueId()[0].id, e = "#" + g, f = a.element.find(e), f.length || (f = a._createPanel(g), f.insertAfter(a.panels[b - 1] || a.tablist)), f.attr("aria-live", "polite"));
      f.length && (a.panels = a.panels.add(f));
      p && n.data("ui-tabs-aria-controls", p);
      n.attr({"aria-controls":g, "aria-labelledby":m});
      f.attr("aria-labelledby", m);
    });
    this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role", "tabpanel");
    b && (this._off(b.not(this.tabs)), this._off(c.not(this.anchors)), this._off(e.not(this.panels)));
  }, _getList:function() {
    return this.tablist || this.element.find("ol,ul").eq(0);
  }, _createPanel:function(a) {
    return d("\x3cdiv\x3e").attr("id", a).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", !0);
  }, _setupDisabled:function(a) {
    d.isArray(a) && (a.length ? a.length === this.anchors.length && (a = !0) : a = !1);
    for (var b, c = 0; b = this.tabs[c]; c++) {
      !0 === a || -1 !== d.inArray(c, a) ? d(b).addClass("ui-state-disabled").attr("aria-disabled", "true") : d(b).removeClass("ui-state-disabled").removeAttr("aria-disabled");
    }
    this.options.disabled = a;
  }, _setupEvents:function(a) {
    var b = {};
    a && d.each(a.split(" "), function(a, d) {
      b[d] = "_eventHandler";
    });
    this._off(this.anchors.add(this.tabs).add(this.panels));
    this._on(!0, this.anchors, {click:function(a) {
      a.preventDefault();
    }});
    this._on(this.anchors, b);
    this._on(this.tabs, {keydown:"_tabKeydown"});
    this._on(this.panels, {keydown:"_panelKeydown"});
    this._focusable(this.tabs);
    this._hoverable(this.tabs);
  }, _setupHeightStyle:function(a) {
    var b, c = this.element.parent();
    "fill" === a ? (b = c.height(), b -= this.element.outerHeight() - this.element.height(), this.element.siblings(":visible").each(function() {
      var a = d(this), c = a.css("position");
      "absolute" !== c && "fixed" !== c && (b -= a.outerHeight(!0));
    }), this.element.children().not(this.panels).each(function() {
      b -= d(this).outerHeight(!0);
    }), this.panels.each(function() {
      d(this).height(Math.max(0, b - d(this).innerHeight() + d(this).height()));
    }).css("overflow", "auto")) : "auto" === a && (b = 0, this.panels.each(function() {
      b = Math.max(b, d(this).height("").height());
    }).height(b));
  }, _eventHandler:function(a) {
    var b = this.options, c = this.active, e = d(a.currentTarget).closest("li"), f = e[0] === c[0], g = f && b.collapsible, h = g ? d() : this._getPanelForTab(e), k = c.length ? this._getPanelForTab(c) : d();
    c = {oldTab:c, oldPanel:k, newTab:g ? d() : e, newPanel:h};
    a.preventDefault();
    e.hasClass("ui-state-disabled") || e.hasClass("ui-tabs-loading") || this.running || f && !b.collapsible || !1 === this._trigger("beforeActivate", a, c) || (b.active = g ? !1 : this.tabs.index(e), this.active = f ? d() : e, this.xhr && this.xhr.abort(), k.length || h.length || d.error("jQuery UI Tabs: Mismatching fragment identifier."), h.length && this.load(this.tabs.index(e), a), this._toggle(a, c));
  }, _toggle:function(a, b) {
    function c() {
      f.running = !1;
      f._trigger("activate", a, b);
    }
    function e() {
      b.newTab.closest("li").addClass("ui-tabs-active ui-state-active");
      g.length && f.options.show ? f._show(g, f.options.show, c) : (g.show(), c());
    }
    var f = this, g = b.newPanel, h = b.oldPanel;
    this.running = !0;
    h.length && this.options.hide ? this._hide(h, this.options.hide, function() {
      b.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
      e();
    }) : (b.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"), h.hide(), e());
    h.attr("aria-hidden", "true");
    b.oldTab.attr({"aria-selected":"false", "aria-expanded":"false"});
    g.length && h.length ? b.oldTab.attr("tabIndex", -1) : g.length && this.tabs.filter(function() {
      return 0 === d(this).attr("tabIndex");
    }).attr("tabIndex", -1);
    g.attr("aria-hidden", "false");
    b.newTab.attr({"aria-selected":"true", "aria-expanded":"true", tabIndex:0});
  }, _activate:function(a) {
    var b;
    a = this._findActive(a);
    a[0] !== this.active[0] && (a.length || (a = this.active), b = a.find(".ui-tabs-anchor")[0], this._eventHandler({target:b, currentTarget:b, preventDefault:d.noop}));
  }, _findActive:function(a) {
    return !1 === a ? d() : this.tabs.eq(a);
  }, _getIndex:function(a) {
    return "string" == typeof a && (a = this.anchors.index(this.anchors.filter("[href$\x3d'" + a + "']"))), a;
  }, _destroy:function() {
    this.xhr && this.xhr.abort();
    this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible");
    this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role");
    this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeUniqueId();
    this.tablist.unbind(this.eventNamespace);
    this.tabs.add(this.panels).each(function() {
      d.data(this, "ui-tabs-destroy") ? d(this).remove() : d(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role");
    });
    this.tabs.each(function() {
      var a = d(this), b = a.data("ui-tabs-aria-controls");
      b ? a.attr("aria-controls", b).removeData("ui-tabs-aria-controls") : a.removeAttr("aria-controls");
    });
    this.panels.show();
    "content" !== this.options.heightStyle && this.panels.css("height", "");
  }, enable:function(a) {
    var b = this.options.disabled;
    !1 !== b && (void 0 === a ? b = !1 : (a = this._getIndex(a), b = d.isArray(b) ? d.map(b, function(b) {
      return b !== a ? b : null;
    }) : d.map(this.tabs, function(b, d) {
      return d !== a ? d : null;
    })), this._setupDisabled(b));
  }, disable:function(a) {
    var b = this.options.disabled;
    if (!0 !== b) {
      if (void 0 === a) {
        b = !0;
      } else {
        if (a = this._getIndex(a), -1 !== d.inArray(a, b)) {
          return;
        }
        b = d.isArray(b) ? d.merge([a], b).sort() : [a];
      }
      this._setupDisabled(b);
    }
  }, load:function(a, b) {
    a = this._getIndex(a);
    var c = this, e = this.tabs.eq(a);
    a = e.find(".ui-tabs-anchor");
    var f = this._getPanelForTab(e), g = {tab:e, panel:f}, h = function(a, b) {
      "abort" === b && c.panels.stop(!1, !0);
      e.removeClass("ui-tabs-loading");
      f.removeAttr("aria-busy");
      a === c.xhr && delete c.xhr;
    };
    this._isLocal(a[0]) || (this.xhr = d.ajax(this._ajaxSettings(a, b, g)), this.xhr && "canceled" !== this.xhr.statusText && (e.addClass("ui-tabs-loading"), f.attr("aria-busy", "true"), this.xhr.done(function(a, d, e) {
      setTimeout(function() {
        f.html(a);
        c._trigger("load", b, g);
        h(e, d);
      }, 1);
    }).fail(function(a, b) {
      setTimeout(function() {
        h(a, b);
      }, 1);
    })));
  }, _ajaxSettings:function(a, b, c) {
    var e = this;
    return {url:a.attr("href"), beforeSend:function(a, g) {
      return e._trigger("beforeLoad", b, d.extend({jqXHR:a, ajaxSettings:g}, c));
    }};
  }, _getPanelForTab:function(a) {
    a = d(a).attr("aria-controls");
    return this.element.find(this._sanitizeSelector("#" + a));
  }});
  d.widget("ui.tooltip", {version:"1.11.4", options:{content:function() {
    var a = d(this).attr("title") || "";
    return d("\x3ca\x3e").text(a).html();
  }, hide:!0, items:"[title]:not([disabled])", position:{my:"left top+15", at:"left bottom", collision:"flipfit flip"}, show:!0, tooltipClass:null, track:!1, close:null, open:null}, _addDescribedBy:function(a, b) {
    var c = (a.attr("aria-describedby") || "").split(/\s+/);
    c.push(b);
    a.data("ui-tooltip-id", b).attr("aria-describedby", d.trim(c.join(" ")));
  }, _removeDescribedBy:function(a) {
    var b = a.data("ui-tooltip-id"), c = (a.attr("aria-describedby") || "").split(/\s+/);
    b = d.inArray(b, c);
    -1 !== b && c.splice(b, 1);
    a.removeData("ui-tooltip-id");
    (c = d.trim(c.join(" "))) ? a.attr("aria-describedby", c) : a.removeAttr("aria-describedby");
  }, _create:function() {
    this._on({mouseover:"open", focusin:"open"});
    this.tooltips = {};
    this.parents = {};
    this.options.disabled && this._disable();
    this.liveRegion = d("\x3cdiv\x3e").attr({role:"log", "aria-live":"assertive", "aria-relevant":"additions"}).addClass("ui-helper-hidden-accessible").appendTo(this.document[0].body);
  }, _setOption:function(a, b) {
    var c = this;
    return "disabled" === a ? (this[b ? "_disable" : "_enable"](), this.options[a] = b, void 0) : (this._super(a, b), "content" === a && d.each(this.tooltips, function(a, b) {
      c._updateContent(b.element);
    }), void 0);
  }, _disable:function() {
    var a = this;
    d.each(this.tooltips, function(b, c) {
      b = d.Event("blur");
      b.target = b.currentTarget = c.element[0];
      a.close(b, !0);
    });
    this.element.find(this.options.items).addBack().each(function() {
      var a = d(this);
      a.is("[title]") && a.data("ui-tooltip-title", a.attr("title")).removeAttr("title");
    });
  }, _enable:function() {
    this.element.find(this.options.items).addBack().each(function() {
      var a = d(this);
      a.data("ui-tooltip-title") && a.attr("title", a.data("ui-tooltip-title"));
    });
  }, open:function(a) {
    var b = this, c = d(a ? a.target : this.element).closest(this.options.items);
    c.length && !c.data("ui-tooltip-id") && (c.attr("title") && c.data("ui-tooltip-title", c.attr("title")), c.data("ui-tooltip-open", !0), a && "mouseover" === a.type && c.parents().each(function() {
      var a, c = d(this);
      c.data("ui-tooltip-open") && (a = d.Event("blur"), a.target = a.currentTarget = this, b.close(a, !0));
      c.attr("title") && (c.uniqueId(), b.parents[this.id] = {element:this, title:c.attr("title")}, c.attr("title", ""));
    }), this._registerCloseHandlers(a, c), this._updateContent(c, a));
  }, _updateContent:function(a, b) {
    var c, d = this.options.content, f = this, g = b ? b.type : null;
    return "string" == typeof d ? this._open(b, a, d) : (c = d.call(a[0], function(c) {
      f._delay(function() {
        a.data("ui-tooltip-open") && (b && (b.type = g), this._open(b, a, c));
      });
    }), c && this._open(b, a, c), void 0);
  }, _open:function(a, b, c) {
    function e(a) {
      k.of = a;
      l.is(":hidden") || l.position(k);
    }
    var f, g, h, k = d.extend({}, this.options.position);
    if (c) {
      if (f = this._find(b)) {
        return f.tooltip.find(".ui-tooltip-content").html(c), void 0;
      }
      b.is("[title]") && (a && "mouseover" === a.type ? b.attr("title", "") : b.removeAttr("title"));
      f = this._tooltip(b);
      var l = f.tooltip;
      this._addDescribedBy(b, l.attr("id"));
      l.find(".ui-tooltip-content").html(c);
      this.liveRegion.children().hide();
      c.clone ? (h = c.clone(), h.removeAttr("id").find("[id]").removeAttr("id")) : h = c;
      d("\x3cdiv\x3e").html(h).appendTo(this.liveRegion);
      this.options.track && a && /^mouse/.test(a.type) ? (this._on(this.document, {mousemove:e}), e(a)) : l.position(d.extend({of:b}, this.options.position));
      l.hide();
      this._show(l, this.options.show);
      this.options.show && this.options.show.delay && (g = this.delayedShow = setInterval(function() {
        l.is(":visible") && (e(k.of), clearInterval(g));
      }, d.fx.interval));
      this._trigger("open", a, {tooltip:l});
    }
  }, _registerCloseHandlers:function(a, b) {
    var c = {keyup:function(a) {
      a.keyCode === d.ui.keyCode.ESCAPE && (a = d.Event(a), a.currentTarget = b[0], this.close(a, !0));
    }};
    b[0] !== this.element[0] && (c.remove = function() {
      this._removeTooltip(this._find(b).tooltip);
    });
    a && "mouseover" !== a.type || (c.mouseleave = "close");
    a && "focusin" !== a.type || (c.focusout = "close");
    this._on(!0, b, c);
  }, close:function(a) {
    var b, c = this, e = d(a ? a.currentTarget : this.element), f = this._find(e);
    return f ? (b = f.tooltip, f.closing || (clearInterval(this.delayedShow), e.data("ui-tooltip-title") && !e.attr("title") && e.attr("title", e.data("ui-tooltip-title")), this._removeDescribedBy(e), f.hiding = !0, b.stop(!0), this._hide(b, this.options.hide, function() {
      c._removeTooltip(d(this));
    }), e.removeData("ui-tooltip-open"), this._off(e, "mouseleave focusout keyup"), e[0] !== this.element[0] && this._off(e, "remove"), this._off(this.document, "mousemove"), a && "mouseleave" === a.type && d.each(this.parents, function(a, b) {
      d(b.element).attr("title", b.title);
      delete c.parents[a];
    }), f.closing = !0, this._trigger("close", a, {tooltip:b}), f.hiding || (f.closing = !1)), void 0) : (e.removeData("ui-tooltip-open"), void 0);
  }, _tooltip:function(a) {
    var b = d("\x3cdiv\x3e").attr("role", "tooltip").addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content " + (this.options.tooltipClass || "")), c = b.uniqueId().attr("id");
    return d("\x3cdiv\x3e").addClass("ui-tooltip-content").appendTo(b), b.appendTo(this.document[0].body), this.tooltips[c] = {element:a, tooltip:b};
  }, _find:function(a) {
    return (a = a.data("ui-tooltip-id")) ? this.tooltips[a] : null;
  }, _removeTooltip:function(a) {
    a.remove();
    delete this.tooltips[a.attr("id")];
  }, _destroy:function() {
    var a = this;
    d.each(this.tooltips, function(b, c) {
      var e = d.Event("blur");
      c = c.element;
      e.target = e.currentTarget = c[0];
      a.close(e, !0);
      d("#" + b).remove();
      c.data("ui-tooltip-title") && (c.attr("title") || c.attr("title", c.data("ui-tooltip-title")), c.removeData("ui-tooltip-title"));
    });
    this.liveRegion.remove();
  }});
  d.effects = {effect:{}};
  (function(a, b) {
    function c(a, b, c) {
      var d = m[b.type] || {};
      return null == a ? c || !b.def ? null : b.def : (a = d.floor ? ~~a : parseFloat(a), isNaN(a) ? b.def : d.mod ? (a + d.mod) % d.mod : 0 > a ? 0 : a > d.max ? d.max : a);
    }
    function d(c) {
      var d = k(), e = d._rgba = [];
      return c = c.toLowerCase(), q(h, function(a, f) {
        var g;
        a = (a = f.re.exec(c)) && f.parse(a);
        f = f.space || "rgba";
        return a ? (g = d[f](a), d[l[f].cache] = g[l[f].cache], e = d._rgba = g._rgba, !1) : b;
      }), e.length ? ("0,0,0,0" === e.join() && a.extend(e, t.transparent), d) : t[c];
    }
    function f(a, b, c) {
      return c = (c + 1) % 1, 1 > 6 * c ? a + 6 * (b - a) * c : 1 > 2 * c ? b : 2 > 3 * c ? a + 6 * (b - a) * (2 / 3 - c) : a;
    }
    var g = /^([\-+])=\s*(\d+\.?\d*)/, h = [{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, parse:function(a) {
      return [a[1], a[2], a[3], a[4]];
    }}, {re:/rgba?\(\s*(\d+(?:\.\d+)?)%\s*,\s*(\d+(?:\.\d+)?)%\s*,\s*(\d+(?:\.\d+)?)%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, parse:function(a) {
      return [2.55 * a[1], 2.55 * a[2], 2.55 * a[3], a[4]];
    }}, {re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/, parse:function(a) {
      return [parseInt(a[1], 16), parseInt(a[2], 16), parseInt(a[3], 16)];
    }}, {re:/#([a-f0-9])([a-f0-9])([a-f0-9])/, parse:function(a) {
      return [parseInt(a[1] + a[1], 16), parseInt(a[2] + a[2], 16), parseInt(a[3] + a[3], 16)];
    }}, {re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)%\s*,\s*(\d+(?:\.\d+)?)%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, space:"hsla", parse:function(a) {
      return [a[1], a[2] / 100, a[3] / 100, a[4]];
    }}], k = a.Color = function(b, c, d, e) {
      return new a.Color.fn.parse(b, c, d, e);
    }, l = {rgba:{props:{red:{idx:0, type:"byte"}, green:{idx:1, type:"byte"}, blue:{idx:2, type:"byte"}}}, hsla:{props:{hue:{idx:0, type:"degrees"}, saturation:{idx:1, type:"percent"}, lightness:{idx:2, type:"percent"}}}}, m = {"byte":{floor:!0, max:255}, percent:{max:1}, degrees:{mod:360, floor:!0}}, n = k.support = {}, p = a("\x3cp\x3e")[0], q = a.each;
    p.style.cssText = "background-color:rgba(1,1,1,.5)";
    n.rgba = -1 < p.style.backgroundColor.indexOf("rgba");
    q(l, function(a, b) {
      b.cache = "_" + a;
      b.props.alpha = {idx:3, type:"percent", def:1};
    });
    k.fn = a.extend(k.prototype, {parse:function(e, f, g, h) {
      if (e === b) {
        return this._rgba = [null, null, null, null], this;
      }
      (e.jquery || e.nodeType) && (e = a(e).css(f), f = b);
      var m = this, r = a.type(e), n = this._rgba = [];
      return f !== b && (e = [e, f, g, h], r = "array"), "string" === r ? this.parse(d(e) || t._default) : "array" === r ? (q(l.rgba.props, function(a, b) {
        n[b.idx] = c(e[b.idx], b);
      }), this) : "object" === r ? (e instanceof k ? q(l, function(a, b) {
        e[b.cache] && (m[b.cache] = e[b.cache].slice());
      }) : q(l, function(b, d) {
        var f = d.cache;
        q(d.props, function(a, b) {
          if (!m[f] && d.to) {
            if ("alpha" === a || null == e[a]) {
              return;
            }
            m[f] = d.to(m._rgba);
          }
          m[f][b.idx] = c(e[a], b, !0);
        });
        m[f] && 0 > a.inArray(null, m[f].slice(0, 3)) && (m[f][3] = 1, d.from && (m._rgba = d.from(m[f])));
      }), this) : b;
    }, is:function(a) {
      var c = k(a), d = !0, e = this;
      return q(l, function(a, f) {
        var g, h = c[f.cache];
        return h && (g = e[f.cache] || f.to && f.to(e._rgba) || [], q(f.props, function(a, c) {
          return null != h[c.idx] ? d = h[c.idx] === g[c.idx] : b;
        })), d;
      }), d;
    }, _space:function() {
      var a = [], b = this;
      return q(l, function(c, d) {
        b[d.cache] && a.push(c);
      }), a.pop();
    }, transition:function(a, b) {
      var d = k(a);
      a = d._space();
      var e = l[a], f = 0 === this.alpha() ? k("transparent") : this, g = f[e.cache] || e.to(f._rgba), h = g.slice();
      return d = d[e.cache], q(e.props, function(a, e) {
        a = e.idx;
        var f = g[a], k = d[a], l = m[e.type] || {};
        null !== k && (null === f ? h[a] = k : (l.mod && (k - f > l.mod / 2 ? f += l.mod : f - k > l.mod / 2 && (f -= l.mod)), h[a] = c((k - f) * b + f, e)));
      }), this[a](h);
    }, blend:function(b) {
      if (1 === this._rgba[3]) {
        return this;
      }
      var c = this._rgba.slice(), d = c.pop(), e = k(b)._rgba;
      return k(a.map(c, function(a, b) {
        return (1 - d) * e[b] + d * a;
      }));
    }, toRgbaString:function() {
      var b = "rgba(", c = a.map(this._rgba, function(a, b) {
        return null == a ? 2 < b ? 1 : 0 : a;
      });
      return 1 === c[3] && (c.pop(), b = "rgb("), b + c.join() + ")";
    }, toHslaString:function() {
      var b = "hsla(", c = a.map(this.hsla(), function(a, b) {
        return null == a && (a = 2 < b ? 1 : 0), b && 3 > b && (a = Math.round(100 * a) + "%"), a;
      });
      return 1 === c[3] && (c.pop(), b = "hsl("), b + c.join() + ")";
    }, toHexString:function(b) {
      var c = this._rgba.slice(), d = c.pop();
      return b && c.push(~~(255 * d)), "#" + a.map(c, function(a) {
        return a = (a || 0).toString(16), 1 === a.length ? "0" + a : a;
      }).join("");
    }, toString:function() {
      return 0 === this._rgba[3] ? "transparent" : this.toRgbaString();
    }});
    k.fn.parse.prototype = k.fn;
    l.hsla.to = function(a) {
      if (null == a[0] || null == a[1] || null == a[2]) {
        return [null, null, null, a[3]];
      }
      var b, c, d = a[0] / 255, e = a[1] / 255, f = a[2] / 255;
      a = a[3];
      var g = Math.max(d, e, f), h = Math.min(d, e, f), k = g - h, l = g + h, m = .5 * l;
      return b = h === g ? 0 : d === g ? 60 * (e - f) / k + 360 : e === g ? 60 * (f - d) / k + 120 : 60 * (d - e) / k + 240, c = 0 === k ? 0 : .5 >= m ? k / l : k / (2 - l), [Math.round(b) % 360, c, m, null == a ? 1 : a];
    };
    l.hsla.from = function(a) {
      if (null == a[0] || null == a[1] || null == a[2]) {
        return [null, null, null, a[3]];
      }
      var b = a[0] / 360, c = a[1], d = a[2];
      a = a[3];
      c = .5 >= d ? d * (1 + c) : d + c - d * c;
      d = 2 * d - c;
      return [Math.round(255 * f(d, c, b + 1 / 3)), Math.round(255 * f(d, c, b)), Math.round(255 * f(d, c, b - 1 / 3)), a];
    };
    q(l, function(d, e) {
      var f = e.props, h = e.cache, l = e.to, m = e.from;
      k.fn[d] = function(d) {
        if (l && !this[h] && (this[h] = l(this._rgba)), d === b) {
          return this[h].slice();
        }
        var e, g = a.type(d), n = "array" === g || "object" === g ? d : arguments, p = this[h].slice();
        return q(f, function(a, b) {
          a = n["object" === g ? a : b.idx];
          null == a && (a = p[b.idx]);
          p[b.idx] = c(a, b);
        }), m ? (e = k(m(p)), e[h] = p, e) : k(p);
      };
      q(f, function(b, c) {
        k.fn[b] || (k.fn[b] = function(e) {
          var f, h = a.type(e), k = "alpha" === b ? this._hsla ? "hsla" : "rgba" : d, l = this[k](), m = l[c.idx];
          return "undefined" === h ? m : ("function" === h && (e = e.call(this, m), h = a.type(e)), null == e && c.empty ? this : ("string" === h && (f = g.exec(e), f && (e = m + parseFloat(f[2]) * ("+" === f[1] ? 1 : -1))), l[c.idx] = e, this[k](l)));
        });
      });
    });
    k.hook = function(b) {
      b = b.split(" ");
      q(b, function(b, c) {
        a.cssHooks[c] = {set:function(b, e) {
          var f, g = "";
          if ("transparent" !== e && ("string" !== a.type(e) || (f = d(e)))) {
            if (e = k(f || e), !n.rgba && 1 !== e._rgba[3]) {
              for (f = "backgroundColor" === c ? b.parentNode : b; ("" === g || "transparent" === g) && f && f.style;) {
                try {
                  g = a.css(f, "backgroundColor"), f = f.parentNode;
                } catch (B) {
                }
              }
              e = e.blend(g && "transparent" !== g ? g : "_default");
            }
            e = e.toRgbaString();
          }
          try {
            b.style[c] = e;
          } catch (B) {
          }
        }};
        a.fx.step[c] = function(b) {
          b.colorInit || (b.start = k(b.elem, c), b.end = k(b.end), b.colorInit = !0);
          a.cssHooks[c].set(b.elem, b.start.transition(b.end, b.pos));
        };
      });
    };
    k.hook("backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor");
    a.cssHooks.borderColor = {expand:function(a) {
      var b = {};
      return q(["Top", "Right", "Bottom", "Left"], function(c, d) {
        b["border" + d + "Color"] = a;
      }), b;
    }};
    var t = a.Color.names = {aqua:"#00ffff", black:"#000000", blue:"#0000ff", fuchsia:"#ff00ff", gray:"#808080", green:"#008000", lime:"#00ff00", maroon:"#800000", navy:"#000080", olive:"#808000", purple:"#800080", red:"#ff0000", silver:"#c0c0c0", teal:"#008080", white:"#ffffff", yellow:"#ffff00", transparent:[null, null, null, 0], _default:"#ffffff"};
  })(d);
  (function() {
    function a(a) {
      var b = a.ownerDocument.defaultView ? a.ownerDocument.defaultView.getComputedStyle(a, null) : a.currentStyle, c = {};
      if (b && b.length && b[0] && b[b[0]]) {
        for (a = b.length; a--;) {
          var e = b[a];
          "string" == typeof b[e] && (c[d.camelCase(e)] = b[e]);
        }
      } else {
        for (e in b) {
          "string" == typeof b[e] && (c[e] = b[e]);
        }
      }
      return c;
    }
    var b = ["add", "remove", "toggle"], c = {border:1, borderBottom:1, borderColor:1, borderLeft:1, borderRight:1, borderTop:1, borderWidth:1, margin:1, padding:1};
    d.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function(a, b) {
      d.fx.step[b] = function(a) {
        ("none" !== a.end && !a.setAttr || 1 === a.pos && !a.setAttr) && (d.style(a.elem, b, a.end), a.setAttr = !0);
      };
    });
    d.fn.addBack || (d.fn.addBack = function(a) {
      return this.add(null == a ? this.prevObject : this.prevObject.filter(a));
    });
    d.effects.animateClass = function(e, f, g, h) {
      var k = d.speed(f, g, h);
      return this.queue(function() {
        var f = d(this), g = f.attr("class") || "", h = k.children ? f.find("*").addBack() : f;
        h = h.map(function() {
          return {el:d(this), start:a(this)};
        });
        var p = function() {
          d.each(b, function(a, b) {
            e[b] && f[b + "Class"](e[b]);
          });
        };
        p();
        h = h.map(function() {
          this.end = a(this.el[0]);
          var b = this.start, e = this.end, f, g = {};
          for (f in e) {
            var h = e[f];
            b[f] !== h && (c[f] || (d.fx.step[f] || !isNaN(parseFloat(h))) && (g[f] = h));
          }
          return this.diff = g, this;
        });
        f.attr("class", g);
        h = h.map(function() {
          var a = this, b = d.Deferred(), c = d.extend({}, k, {queue:!1, complete:function() {
            b.resolve(a);
          }});
          return this.el.animate(this.diff, c), b.promise();
        });
        d.when.apply(d, h.get()).done(function() {
          p();
          d.each(arguments, function() {
            var a = this.el;
            d.each(this.diff, function(b) {
              a.css(b, "");
            });
          });
          k.complete.call(f[0]);
        });
      });
    };
    d.fn.extend({addClass:function(a) {
      return function(b, c, e, k) {
        return c ? d.effects.animateClass.call(this, {add:b}, c, e, k) : a.apply(this, arguments);
      };
    }(d.fn.addClass), removeClass:function(a) {
      return function(b, c, e, k) {
        return 1 < arguments.length ? d.effects.animateClass.call(this, {remove:b}, c, e, k) : a.apply(this, arguments);
      };
    }(d.fn.removeClass), toggleClass:function(a) {
      return function(b, c, e, k, l) {
        return "boolean" == typeof c || void 0 === c ? e ? d.effects.animateClass.call(this, c ? {add:b} : {remove:b}, e, k, l) : a.apply(this, arguments) : d.effects.animateClass.call(this, {toggle:b}, c, e, k);
      };
    }(d.fn.toggleClass), switchClass:function(a, b, c, h, k) {
      return d.effects.animateClass.call(this, {add:b, remove:a}, c, h, k);
    }});
  })();
  (function() {
    function a(a, b, f, g) {
      return d.isPlainObject(a) && (b = a, a = a.effect), a = {effect:a}, null == b && (b = {}), d.isFunction(b) && (g = b, f = null, b = {}), ("number" == typeof b || d.fx.speeds[b]) && (g = f, f = b, b = {}), d.isFunction(f) && (g = f, f = null), b && d.extend(a, b), f = f || b.duration, a.duration = d.fx.off ? 0 : "number" == typeof f ? f : f in d.fx.speeds ? d.fx.speeds[f] : d.fx.speeds._default, a.complete = g || b.complete, a;
    }
    function b(a) {
      return !a || "number" == typeof a || d.fx.speeds[a] ? !0 : "string" != typeof a || d.effects.effect[a] ? d.isFunction(a) ? !0 : "object" != typeof a || a.effect ? !1 : !0 : !0;
    }
    d.extend(d.effects, {version:"1.11.4", save:function(a, b) {
      for (var c = 0; b.length > c; c++) {
        null !== b[c] && a.data("ui-effects-" + b[c], a[0].style[b[c]]);
      }
    }, restore:function(a, b) {
      var c, d;
      for (d = 0; b.length > d; d++) {
        null !== b[d] && (c = a.data("ui-effects-" + b[d]), void 0 === c && (c = ""), a.css(b[d], c));
      }
    }, setMode:function(a, b) {
      return "toggle" === b && (b = a.is(":hidden") ? "show" : "hide"), b;
    }, getBaseline:function(a, b) {
      switch(a[0]) {
        case "top":
          var c = 0;
          break;
        case "middle":
          c = .5;
          break;
        case "bottom":
          c = 1;
          break;
        default:
          c = a[0] / b.height;
      }
      switch(a[1]) {
        case "left":
          a = 0;
          break;
        case "center":
          a = .5;
          break;
        case "right":
          a = 1;
          break;
        default:
          a = a[1] / b.width;
      }
      return {x:a, y:c};
    }, createWrapper:function(a) {
      if (a.parent().is(".ui-effects-wrapper")) {
        return a.parent();
      }
      var b = {width:a.outerWidth(!0), height:a.outerHeight(!0), "float":a.css("float")}, c = d("\x3cdiv\x3e\x3c/div\x3e").addClass("ui-effects-wrapper").css({fontSize:"100%", background:"transparent", border:"none", margin:0, padding:0}), g = {width:a.width(), height:a.height()}, h = document.activeElement;
      try {
        h.id;
      } catch (k) {
        h = document.body;
      }
      return a.wrap(c), (a[0] === h || d.contains(a[0], h)) && d(h).focus(), c = a.parent(), "static" === a.css("position") ? (c.css({position:"relative"}), a.css({position:"relative"})) : (d.extend(b, {position:a.css("position"), zIndex:a.css("z-index")}), d.each(["top", "left", "bottom", "right"], function(c, d) {
        b[d] = a.css(d);
        isNaN(parseInt(b[d], 10)) && (b[d] = "auto");
      }), a.css({position:"relative", top:0, left:0, right:"auto", bottom:"auto"})), a.css(g), c.css(b).show();
    }, removeWrapper:function(a) {
      var b = document.activeElement;
      return a.parent().is(".ui-effects-wrapper") && (a.parent().replaceWith(a), (a[0] === b || d.contains(a[0], b)) && d(b).focus()), a;
    }, setTransition:function(a, b, f, g) {
      return g = g || {}, d.each(b, function(b, c) {
        b = a.cssUnit(c);
        0 < b[0] && (g[c] = b[0] * f + b[1]);
      }), g;
    }});
    d.fn.extend({effect:function() {
      function b(a) {
        function b() {
          d.isFunction(f) && f.call(c[0]);
          d.isFunction(a) && a();
        }
        var c = d(this), f = e.complete, g = e.mode;
        (c.is(":hidden") ? "hide" === g : "show" === g) ? (c[g](), b()) : h.call(c[0], e, b);
      }
      var e = a.apply(this, arguments), f = e.mode, g = e.queue, h = d.effects.effect[e.effect];
      return d.fx.off || !h ? f ? this[f](e.duration, e.complete) : this.each(function() {
        e.complete && e.complete.call(this);
      }) : !1 === g ? this.each(b) : this.queue(g || "fx", b);
    }, show:function(c) {
      return function(d) {
        if (b(d)) {
          return c.apply(this, arguments);
        }
        var e = a.apply(this, arguments);
        return e.mode = "show", this.effect.call(this, e);
      };
    }(d.fn.show), hide:function(c) {
      return function(d) {
        if (b(d)) {
          return c.apply(this, arguments);
        }
        var e = a.apply(this, arguments);
        return e.mode = "hide", this.effect.call(this, e);
      };
    }(d.fn.hide), toggle:function(c) {
      return function(d) {
        if (b(d) || "boolean" == typeof d) {
          return c.apply(this, arguments);
        }
        var e = a.apply(this, arguments);
        return e.mode = "toggle", this.effect.call(this, e);
      };
    }(d.fn.toggle), cssUnit:function(a) {
      var b = this.css(a), c = [];
      return d.each(["em", "px", "%", "pt"], function(a, d) {
        0 < b.indexOf(d) && (c = [parseFloat(b), d]);
      }), c;
    }});
  })();
  (function() {
    var a = {};
    d.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(b, c) {
      a[c] = function(a) {
        return Math.pow(a, b + 2);
      };
    });
    d.extend(a, {Sine:function(a) {
      return 1 - Math.cos(a * Math.PI / 2);
    }, Circ:function(a) {
      return 1 - Math.sqrt(1 - a * a);
    }, Elastic:function(a) {
      return 0 === a || 1 === a ? a : -Math.pow(2, 8 * (a - 1)) * Math.sin((80 * (a - 1) - 7.5) * Math.PI / 15);
    }, Back:function(a) {
      return a * a * (3 * a - 2);
    }, Bounce:function(a) {
      for (var b, d = 4; ((b = Math.pow(2, --d)) - 1) / 11 > a;) {
      }
      return 1 / Math.pow(4, 3 - d) - 7.5625 * Math.pow((3 * b - 2) / 22 - a, 2);
    }});
    d.each(a, function(a, c) {
      d.easing["easeIn" + a] = c;
      d.easing["easeOut" + a] = function(a) {
        return 1 - c(1 - a);
      };
      d.easing["easeInOut" + a] = function(a) {
        return .5 > a ? c(2 * a) / 2 : 1 - c(-2 * a + 2) / 2;
      };
    });
  })();
  d.effects;
  d.effects.effect.blind = function(a, b) {
    var c = d(this), e = "position top bottom left right height width".split(" "), f = d.effects.setMode(c, a.mode || "hide");
    var g = a.direction || "up";
    var h = /up|down|vertical/.test(g), k = h ? "height" : "width", l = h ? "top" : "left", m = /up|left|vertical|horizontal/.test(g), n = {}, p = "show" === f;
    c.parent().is(".ui-effects-wrapper") ? d.effects.save(c.parent(), e) : d.effects.save(c, e);
    c.show();
    g = d.effects.createWrapper(c).css({overflow:"hidden"});
    var q = g[k]();
    var t = parseFloat(g.css(l)) || 0;
    n[k] = p ? q : 0;
    m || (c.css(h ? "bottom" : "right", 0).css(h ? "top" : "left", "auto").css({position:"absolute"}), n[l] = p ? t : q + t);
    p && (g.css(k, 0), m || g.css(l, t + q));
    g.animate(n, {duration:a.duration, easing:a.easing, queue:!1, complete:function() {
      "hide" === f && c.hide();
      d.effects.restore(c, e);
      d.effects.removeWrapper(c);
      b();
    }});
  };
  d.effects.effect.bounce = function(a, b) {
    var c, e = d(this), f = "position top bottom left right height width".split(" "), g = d.effects.setMode(e, a.mode || "effect"), h = "hide" === g;
    var k = "show" === g;
    var l = a.direction || "up";
    g = a.distance;
    var m = a.times || 5, n = 2 * m + (k || h ? 1 : 0), p = a.duration / n;
    a = a.easing;
    var q = "up" === l || "down" === l ? "top" : "left";
    l = "up" === l || "left" === l;
    var t = e.queue(), r = t.length;
    (k || h) && f.push("opacity");
    d.effects.save(e, f);
    e.show();
    d.effects.createWrapper(e);
    g || (g = e["top" === q ? "outerHeight" : "outerWidth"]() / 3);
    k && (c = {opacity:1}, c[q] = 0, e.css("opacity", 0).css(q, l ? 2 * -g : 2 * g).animate(c, p, a));
    h && (g /= Math.pow(2, m - 1));
    c = {};
    for (k = c[q] = 0; m > k; k++) {
      var u = {};
      u[q] = (l ? "-\x3d" : "+\x3d") + g;
      e.animate(u, p, a).animate(c, p, a);
      g = h ? 2 * g : g / 2;
    }
    h && (u = {opacity:0}, u[q] = (l ? "-\x3d" : "+\x3d") + g, e.animate(u, p, a));
    e.queue(function() {
      h && e.hide();
      d.effects.restore(e, f);
      d.effects.removeWrapper(e);
      b();
    });
    1 < r && t.splice.apply(t, [1, 0].concat(t.splice(r, n + 1)));
    e.dequeue();
  };
  d.effects.effect.clip = function(a, b) {
    var c = d(this), e = "position top bottom left right height width".split(" "), f = "show" === d.effects.setMode(c, a.mode || "hide"), g = "vertical" === (a.direction || "vertical"), h = g ? "height" : "width";
    g = g ? "top" : "left";
    var k = {};
    d.effects.save(c, e);
    c.show();
    var l = d.effects.createWrapper(c).css({overflow:"hidden"});
    l = "IMG" === c[0].tagName ? l : c;
    var m = l[h]();
    f && (l.css(h, 0), l.css(g, m / 2));
    k[h] = f ? m : 0;
    k[g] = f ? 0 : m / 2;
    l.animate(k, {queue:!1, duration:a.duration, easing:a.easing, complete:function() {
      f || c.hide();
      d.effects.restore(c, e);
      d.effects.removeWrapper(c);
      b();
    }});
  };
  d.effects.effect.drop = function(a, b) {
    var c = d(this), e = "position top bottom left right opacity height width".split(" "), f = d.effects.setMode(c, a.mode || "hide"), g = "show" === f;
    var h = a.direction || "left";
    var k = "up" === h || "down" === h ? "top" : "left", l = "up" === h || "left" === h ? "pos" : "neg", m = {opacity:g ? 1 : 0};
    d.effects.save(c, e);
    c.show();
    d.effects.createWrapper(c);
    h = a.distance || c["top" === k ? "outerHeight" : "outerWidth"](!0) / 2;
    g && c.css("opacity", 0).css(k, "pos" === l ? -h : h);
    m[k] = (g ? "pos" === l ? "+\x3d" : "-\x3d" : "pos" === l ? "-\x3d" : "+\x3d") + h;
    c.animate(m, {queue:!1, duration:a.duration, easing:a.easing, complete:function() {
      "hide" === f && c.hide();
      d.effects.restore(c, e);
      d.effects.removeWrapper(c);
      b();
    }});
  };
  d.effects.effect.explode = function(a, b) {
    function c() {
      q.push(this);
      q.length === g * h && (k.css({visibility:"visible"}), d(q).remove(), l || k.hide(), b());
    }
    var e, f, g = a.pieces ? Math.round(Math.sqrt(a.pieces)) : 3, h = g, k = d(this), l = "show" === d.effects.setMode(k, a.mode || "hide"), m = k.show().css("visibility", "hidden").offset(), n = Math.ceil(k.outerWidth() / h), p = Math.ceil(k.outerHeight() / g), q = [];
    for (e = 0; g > e; e++) {
      var t = m.top + e * p;
      var r = e - (g - 1) / 2;
      for (f = 0; h > f; f++) {
        var u = m.left + f * n;
        var x = f - (h - 1) / 2;
        k.clone().appendTo("body").wrap("\x3cdiv\x3e\x3c/div\x3e").css({position:"absolute", visibility:"visible", left:-f * n, top:-e * p}).parent().addClass("ui-effects-explode").css({position:"absolute", overflow:"hidden", width:n, height:p, left:u + (l ? x * n : 0), top:t + (l ? r * p : 0), opacity:l ? 0 : 1}).animate({left:u + (l ? 0 : x * n), top:t + (l ? 0 : r * p), opacity:l ? 1 : 0}, a.duration || 500, a.easing, c);
      }
    }
  };
  d.effects.effect.fade = function(a, b) {
    var c = d(this), e = d.effects.setMode(c, a.mode || "toggle");
    c.animate({opacity:e}, {queue:!1, duration:a.duration, easing:a.easing, complete:b});
  };
  d.effects.effect.fold = function(a, b) {
    var c, e = d(this), f = "position top bottom left right height width".split(" ");
    var g = d.effects.setMode(e, a.mode || "hide");
    var h = "show" === g, k = "hide" === g, l = a.size || 15, m = /([0-9]+)%/.exec(l), n = !!a.horizFirst, p = (c = h !== n) ? ["width", "height"] : ["height", "width"], q = a.duration / 2, t = {}, r = {};
    d.effects.save(e, f);
    e.show();
    g = d.effects.createWrapper(e).css({overflow:"hidden"});
    c = c ? [g.width(), g.height()] : [g.height(), g.width()];
    m && (l = parseInt(m[1], 10) / 100 * c[k ? 0 : 1]);
    h && g.css(n ? {height:0, width:l} : {height:l, width:0});
    t[p[0]] = h ? c[0] : l;
    r[p[1]] = h ? c[1] : 0;
    g.animate(t, q, a.easing).animate(r, q, a.easing, function() {
      k && e.hide();
      d.effects.restore(e, f);
      d.effects.removeWrapper(e);
      b();
    });
  };
  d.effects.effect.highlight = function(a, b) {
    var c = d(this), e = ["backgroundImage", "backgroundColor", "opacity"], f = d.effects.setMode(c, a.mode || "show"), g = {backgroundColor:c.css("backgroundColor")};
    "hide" === f && (g.opacity = 0);
    d.effects.save(c, e);
    c.show().css({backgroundImage:"none", backgroundColor:a.color || "#ffff99"}).animate(g, {queue:!1, duration:a.duration, easing:a.easing, complete:function() {
      "hide" === f && c.hide();
      d.effects.restore(c, e);
      b();
    }});
  };
  d.effects.effect.size = function(a, b) {
    var c, e = d(this), f = "position top bottom left right width height overflow opacity".split(" ");
    var g = "position top bottom left right overflow opacity".split(" ");
    var h = ["width", "height", "overflow"], k = ["fontSize"], l = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"], m = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"], n = d.effects.setMode(e, a.mode || "effect"), p = a.restore || "effect" !== n, q = a.scale || "both", t = a.origin || ["middle", "center"], r = e.css("position"), u = p ? f : g, x = {height:0, width:0, outerHeight:0, outerWidth:0};
    "show" === n && e.show();
    g = {height:e.height(), width:e.width(), outerHeight:e.outerHeight(), outerWidth:e.outerWidth()};
    "toggle" === a.mode && "show" === n ? (e.from = a.to || x, e.to = a.from || g) : (e.from = a.from || ("show" === n ? x : g), e.to = a.to || ("hide" === n ? x : g));
    var y = e.from.height / g.height;
    var z = e.from.width / g.width;
    var v = e.to.height / g.height;
    var w = e.to.width / g.width;
    ("box" === q || "both" === q) && (y !== v && (u = u.concat(l), e.from = d.effects.setTransition(e, l, y, e.from), e.to = d.effects.setTransition(e, l, v, e.to)), z !== w && (u = u.concat(m), e.from = d.effects.setTransition(e, m, z, e.from), e.to = d.effects.setTransition(e, m, w, e.to)));
    ("content" === q || "both" === q) && y !== v && (u = u.concat(k).concat(h), e.from = d.effects.setTransition(e, k, y, e.from), e.to = d.effects.setTransition(e, k, v, e.to));
    d.effects.save(e, u);
    e.show();
    d.effects.createWrapper(e);
    e.css("overflow", "hidden").css(e.from);
    t && (c = d.effects.getBaseline(t, g), e.from.top = (g.outerHeight - e.outerHeight()) * c.y, e.from.left = (g.outerWidth - e.outerWidth()) * c.x, e.to.top = (g.outerHeight - e.to.outerHeight) * c.y, e.to.left = (g.outerWidth - e.to.outerWidth) * c.x);
    e.css(e.from);
    "content" !== q && "both" !== q || (l = l.concat(["marginTop", "marginBottom"]).concat(k), m = m.concat(["marginLeft", "marginRight"]), h = f.concat(l).concat(m), e.find("*[width]").each(function() {
      var b = d(this), c = b.height(), e = b.width(), f = b.outerHeight(), g = b.outerWidth();
      p && d.effects.save(b, h);
      b.from = {height:c * y, width:e * z, outerHeight:f * y, outerWidth:g * z};
      b.to = {height:c * v, width:e * w, outerHeight:c * v, outerWidth:e * w};
      y !== v && (b.from = d.effects.setTransition(b, l, y, b.from), b.to = d.effects.setTransition(b, l, v, b.to));
      z !== w && (b.from = d.effects.setTransition(b, m, z, b.from), b.to = d.effects.setTransition(b, m, w, b.to));
      b.css(b.from);
      b.animate(b.to, a.duration, a.easing, function() {
        p && d.effects.restore(b, h);
      });
    }));
    e.animate(e.to, {queue:!1, duration:a.duration, easing:a.easing, complete:function() {
      0 === e.to.opacity && e.css("opacity", e.from.opacity);
      "hide" === n && e.hide();
      d.effects.restore(e, u);
      p || ("static" === r ? e.css({position:"relative", top:e.to.top, left:e.to.left}) : d.each(["top", "left"], function(a, b) {
        e.css(b, function(b, c) {
          b = parseInt(c, 10);
          var d = a ? e.to.left : e.to.top;
          return "auto" === c ? d + "px" : b + d + "px";
        });
      }));
      d.effects.removeWrapper(e);
      b();
    }});
  };
  d.effects.effect.scale = function(a, b) {
    var c = d(this), e = d.extend(!0, {}, a), f = d.effects.setMode(c, a.mode || "effect"), g = parseInt(a.percent, 10) || (0 === parseInt(a.percent, 10) ? 0 : "hide" === f ? 0 : 100), h = a.direction || "both", k = a.origin, l = {height:c.height(), width:c.width(), outerHeight:c.outerHeight(), outerWidth:c.outerWidth()}, m = "horizontal" !== h ? g / 100 : 1;
    g = "vertical" !== h ? g / 100 : 1;
    e.effect = "size";
    e.queue = !1;
    e.complete = b;
    "effect" !== f && (e.origin = k || ["middle", "center"], e.restore = !0);
    e.from = a.from || ("show" === f ? {height:0, width:0, outerHeight:0, outerWidth:0} : l);
    e.to = {height:l.height * m, width:l.width * g, outerHeight:l.outerHeight * m, outerWidth:l.outerWidth * g};
    e.fade && ("show" === f && (e.from.opacity = 0, e.to.opacity = 1), "hide" === f && (e.from.opacity = 1, e.to.opacity = 0));
    c.effect(e);
  };
  d.effects.effect.puff = function(a, b) {
    var c = d(this), e = d.effects.setMode(c, a.mode || "hide"), f = "hide" === e, g = parseInt(a.percent, 10) || 150, h = g / 100, k = {height:c.height(), width:c.width(), outerHeight:c.outerHeight(), outerWidth:c.outerWidth()};
    d.extend(a, {effect:"scale", queue:!1, fade:!0, mode:e, complete:b, percent:f ? g : 100, from:f ? k : {height:k.height * h, width:k.width * h, outerHeight:k.outerHeight * h, outerWidth:k.outerWidth * h}});
    c.effect(a);
  };
  d.effects.effect.pulsate = function(a, b) {
    var c = d(this), e = d.effects.setMode(c, a.mode || "show");
    var f = "show" === e;
    var g = "hide" === e;
    e = 2 * (a.times || 5) + (f || "hide" === e ? 1 : 0);
    var h = a.duration / e, k = 0, l = c.queue(), m = l.length;
    (f || !c.is(":visible")) && (c.css("opacity", 0).show(), k = 1);
    for (f = 1; e > f; f++) {
      c.animate({opacity:k}, h, a.easing), k = 1 - k;
    }
    c.animate({opacity:k}, h, a.easing);
    c.queue(function() {
      g && c.hide();
      b();
    });
    1 < m && l.splice.apply(l, [1, 0].concat(l.splice(m, e + 1)));
    c.dequeue();
  };
  d.effects.effect.shake = function(a, b) {
    var c = d(this), e = "position top bottom left right height width".split(" "), f = d.effects.setMode(c, a.mode || "effect"), g = a.direction || "left";
    var h = a.distance || 20;
    var k = a.times || 3, l = 2 * k + 1, m = Math.round(a.duration / l), n = "up" === g || "down" === g ? "top" : "left", p = "up" === g || "left" === g;
    g = {};
    var q = {}, t = {}, r = c.queue(), u = r.length;
    d.effects.save(c, e);
    c.show();
    d.effects.createWrapper(c);
    g[n] = (p ? "-\x3d" : "+\x3d") + h;
    q[n] = (p ? "+\x3d" : "-\x3d") + 2 * h;
    t[n] = (p ? "-\x3d" : "+\x3d") + 2 * h;
    c.animate(g, m, a.easing);
    for (h = 1; k > h; h++) {
      c.animate(q, m, a.easing).animate(t, m, a.easing);
    }
    c.animate(q, m, a.easing).animate(g, m / 2, a.easing).queue(function() {
      "hide" === f && c.hide();
      d.effects.restore(c, e);
      d.effects.removeWrapper(c);
      b();
    });
    1 < u && r.splice.apply(r, [1, 0].concat(r.splice(u, l + 1)));
    c.dequeue();
  };
  d.effects.effect.slide = function(a, b) {
    var c = d(this), e = "position top bottom left right width height".split(" "), f = d.effects.setMode(c, a.mode || "show"), g = "show" === f;
    var h = a.direction || "left";
    var k = "up" === h || "down" === h ? "top" : "left", l = "up" === h || "left" === h, m = {};
    d.effects.save(c, e);
    c.show();
    h = a.distance || c["top" === k ? "outerHeight" : "outerWidth"](!0);
    d.effects.createWrapper(c).css({overflow:"hidden"});
    g && c.css(k, l ? isNaN(h) ? "-" + h : -h : h);
    m[k] = (g ? l ? "+\x3d" : "-\x3d" : l ? "-\x3d" : "+\x3d") + h;
    c.animate(m, {queue:!1, duration:a.duration, easing:a.easing, complete:function() {
      "hide" === f && c.hide();
      d.effects.restore(c, e);
      d.effects.removeWrapper(c);
      b();
    }});
  };
  d.effects.effect.transfer = function(a, b) {
    var c = d(this), e = d(a.to), f = "fixed" === e.css("position"), g = d("body"), h = f ? g.scrollTop() : 0;
    g = f ? g.scrollLeft() : 0;
    var k = e.offset();
    e = {top:k.top - h, left:k.left - g, height:e.innerHeight(), width:e.innerWidth()};
    k = c.offset();
    var l = d("\x3cdiv class\x3d'ui-effects-transfer'\x3e\x3c/div\x3e").appendTo(document.body).addClass(a.className).css({top:k.top - h, left:k.left - g, height:c.innerHeight(), width:c.innerWidth(), position:f ? "fixed" : "absolute"}).animate(e, a.duration, a.easing, function() {
      l.remove();
      b();
    });
  };
});
